!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ACID_HASH16	w64.c	65;"	d	file:
ACLOCAL	G72x/Makefile	/^ACLOCAL = ${SHELL} \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23\/Cfg\/missing --run aclocal-1.11$/;"	m
ACLOCAL	GSM610/Makefile	/^ACLOCAL = ${SHELL} \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23\/Cfg\/missing --run aclocal-1.11$/;"	m
ACLOCAL	Makefile	/^ACLOCAL = ${SHELL} \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23\/Cfg\/missing --run aclocal-1.11$/;"	m
ACLOCAL_AMFLAGS	G72x/Makefile	/^ACLOCAL_AMFLAGS = -I M4$/;"	m
ACLOCAL_AMFLAGS	GSM610/Makefile	/^ACLOCAL_AMFLAGS = -I M4$/;"	m
ACLOCAL_AMFLAGS	Makefile	/^ACLOCAL_AMFLAGS = -I M4$/;"	m
ACLOCAL_M4	G72x/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	GSM610/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ADP4_MARKER	aiff.c	95;"	d	file:
AIFC_IMA4_BLOCK_LEN	aiff.c	107;"	d	file:
AIFC_IMA4_SAMPLES_PER_BLOCK	aiff.c	108;"	d	file:
AIFC_MARKER	aiff.c	40;"	d	file:
AIFF_CAF_CHANNEL_MAP	chanmap.h	/^} AIFF_CAF_CHANNEL_MAP ;$/;"	t	typeref:struct:__anon3
AIFF_MARKER	aiff.c	39;"	d	file:
AIFF_PEAK_CHUNK_SIZE	aiff.c	110;"	d	file:
AIFF_PRIVATE	aiff.c	/^} AIFF_PRIVATE ;$/;"	t	typeref:struct:__anon17	file:
ALAW_MARKER	aiff.c	77;"	d	file:
ALAW_MARKER	wve.c	35;"	d	file:
ALCH_MARKER	sd2.c	47;"	d	file:
ALL_SYMBOLS	create_symbols_file.py	/^ALL_SYMBOLS = ($/;"	v
ALSA_LIBS	G72x/Makefile	/^ALSA_LIBS = $/;"	m
ALSA_LIBS	GSM610/Makefile	/^ALSA_LIBS = $/;"	m
ALSA_LIBS	Makefile	/^ALSA_LIBS = $/;"	m
AMTAR	G72x/Makefile	/^AMTAR = ${SHELL} \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23\/Cfg\/missing --run tar$/;"	m
AMTAR	GSM610/Makefile	/^AMTAR = ${SHELL} \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23\/Cfg\/missing --run tar$/;"	m
AMTAR	Makefile	/^AMTAR = ${SHELL} \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23\/Cfg\/missing --run tar$/;"	m
AM_MAKEFLAGS	G72x/Makefile	/^AM_MAKEFLAGS = `test -z $V && echo -s`$/;"	m
AM_MAKEFLAGS	GSM610/Makefile	/^AM_MAKEFLAGS = `test -z $V && echo -s`$/;"	m
AM_MAKEFLAGS	Makefile	/^AM_MAKEFLAGS = `test -z $V && echo -s`$/;"	m
AM_RECURSIVE_TARGETS	Makefile	/^AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \\$/;"	m
ANNO_MARKER	aiff.c	51;"	d	file:
ANNO_MARKER	svx.c	47;"	d	file:
APCM_inverse_quantization	GSM610/rpe.c	/^static void APCM_inverse_quantization ($/;"	f	file:
APCM_quantization	GSM610/rpe.c	/^static void APCM_quantization ($/;"	f	file:
APCM_quantization_xmaxc_to_exp_mant	GSM610/rpe.c	/^static void APCM_quantization_xmaxc_to_exp_mant ($/;"	f	file:
APPL_MARKER	aiff.c	45;"	d	file:
AR	G72x/Makefile	/^AR = ar$/;"	m
AR	GSM610/Makefile	/^AR = ar$/;"	m
AR	Makefile	/^AR = ar$/;"	m
ARRAY_LEN	common.h	91;"	d
ATAK_MARKER	svx.c	41;"	d	file:
AUDIO_DETECT	common.h	/^} AUDIO_DETECT ;$/;"	t	typeref:struct:__anon75
AUTH_MARKER	aiff.c	50;"	d	file:
AUTH_MARKER	svx.c	46;"	d	file:
AUTOCONF	G72x/Makefile	/^AUTOCONF = ${SHELL} \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23\/Cfg\/missing --run autoconf$/;"	m
AUTOCONF	GSM610/Makefile	/^AUTOCONF = ${SHELL} \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23\/Cfg\/missing --run autoconf$/;"	m
AUTOCONF	Makefile	/^AUTOCONF = ${SHELL} \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23\/Cfg\/missing --run autoconf$/;"	m
AUTOHEADER	G72x/Makefile	/^AUTOHEADER = echo$/;"	m
AUTOHEADER	GSM610/Makefile	/^AUTOHEADER = echo$/;"	m
AUTOHEADER	Makefile	/^AUTOHEADER = echo$/;"	m
AUTOMAKE	G72x/Makefile	/^AUTOMAKE = ${SHELL} \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23\/Cfg\/missing --run automake-1.11$/;"	m
AUTOMAKE	GSM610/Makefile	/^AUTOMAKE = ${SHELL} \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23\/Cfg\/missing --run automake-1.11$/;"	m
AUTOMAKE	Makefile	/^AUTOMAKE = ${SHELL} \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23\/Cfg\/missing --run automake-1.11$/;"	m
AU_DATA_OFFSET	au.c	37;"	d	file:
AU_ENCODING_ADPCM_G721_32	au.c	/^	AU_ENCODING_ADPCM_G721_32			= 23,	\/* G721 32 kbs ADPCM - 4 bits per sample. *\/$/;"	e	enum:__anon44	file:
AU_ENCODING_ADPCM_G722	au.c	/^	AU_ENCODING_ADPCM_G722				= 24,	\/* G722 64 kbs ADPCM *\/$/;"	e	enum:__anon44	file:
AU_ENCODING_ADPCM_G723_24	au.c	/^	AU_ENCODING_ADPCM_G723_24			= 25,	\/* G723 24 kbs ADPCM - 3 bits per sample. *\/$/;"	e	enum:__anon44	file:
AU_ENCODING_ADPCM_G723_40	au.c	/^	AU_ENCODING_ADPCM_G723_40			= 26,	\/* G723 40 kbs ADPCM - 5 bits per sample. *\/$/;"	e	enum:__anon44	file:
AU_ENCODING_ALAW_8	au.c	/^	AU_ENCODING_ALAW_8					= 27$/;"	e	enum:__anon44	file:
AU_ENCODING_COMPRESSED_EMPHASIZED	au.c	/^	AU_ENCODING_COMPRESSED_EMPHASIZED	= 20,	\/* A combination of the two above *\/$/;"	e	enum:__anon44	file:
AU_ENCODING_DISPLAY	au.c	/^	AU_ENCODING_DISPLAY					= 16,	\/* non-audio display data *\/$/;"	e	enum:__anon44	file:
AU_ENCODING_DOUBLE	au.c	/^	AU_ENCODING_DOUBLE					= 7,	\/* double-precision float samples *\/$/;"	e	enum:__anon44	file:
AU_ENCODING_DSP_COMMANDS	au.c	/^	AU_ENCODING_DSP_COMMANDS			= 21,	\/* Music Kit DSP commands *\/$/;"	e	enum:__anon44	file:
AU_ENCODING_DSP_COMMANDS_SAMPLES	au.c	/^	AU_ENCODING_DSP_COMMANDS_SAMPLES	= 22,	\/* ? *\/$/;"	e	enum:__anon44	file:
AU_ENCODING_DSP_CORE	au.c	/^	AU_ENCODING_DSP_CORE				= 10,	\/* DSP program *\/$/;"	e	enum:__anon44	file:
AU_ENCODING_DSP_DATA_16	au.c	/^	AU_ENCODING_DSP_DATA_16				= 12,	\/* 16-bit fixed-point samples *\/$/;"	e	enum:__anon44	file:
AU_ENCODING_DSP_DATA_24	au.c	/^	AU_ENCODING_DSP_DATA_24				= 13,	\/* 24-bit fixed-point samples *\/$/;"	e	enum:__anon44	file:
AU_ENCODING_DSP_DATA_32	au.c	/^	AU_ENCODING_DSP_DATA_32				= 14,	\/* 32-bit fixed-point samples *\/$/;"	e	enum:__anon44	file:
AU_ENCODING_DSP_DATA_8	au.c	/^	AU_ENCODING_DSP_DATA_8				= 11,	\/* 8-bit fixed-point samples *\/$/;"	e	enum:__anon44	file:
AU_ENCODING_EMPHASIZED	au.c	/^	AU_ENCODING_EMPHASIZED				= 18,	\/* 16-bit linear with emphasis *\/$/;"	e	enum:__anon44	file:
AU_ENCODING_FLOAT	au.c	/^	AU_ENCODING_FLOAT					= 6,	\/* floating-point samples *\/$/;"	e	enum:__anon44	file:
AU_ENCODING_INDIRECT	au.c	/^	AU_ENCODING_INDIRECT				= 8,	\/* fragmented sampled data *\/$/;"	e	enum:__anon44	file:
AU_ENCODING_MULAW_SQUELCH	au.c	/^	AU_ENCODING_MULAW_SQUELCH			= 17,	\/* ? *\/$/;"	e	enum:__anon44	file:
AU_ENCODING_NESTED	au.c	/^	AU_ENCODING_NESTED					= 9,	\/* ? *\/$/;"	e	enum:__anon44	file:
AU_ENCODING_NEXT	au.c	/^	AU_ENCODING_NEXT					= 19,	\/* 16-bit linear with compression (NEXT) *\/$/;"	e	enum:__anon44	file:
AU_ENCODING_PCM_16	au.c	/^	AU_ENCODING_PCM_16					= 3,	\/* 16-bit linear samples *\/$/;"	e	enum:__anon44	file:
AU_ENCODING_PCM_24	au.c	/^	AU_ENCODING_PCM_24					= 4,	\/* 24-bit linear samples *\/$/;"	e	enum:__anon44	file:
AU_ENCODING_PCM_32	au.c	/^	AU_ENCODING_PCM_32					= 5,	\/* 32-bit linear samples *\/$/;"	e	enum:__anon44	file:
AU_ENCODING_PCM_8	au.c	/^	AU_ENCODING_PCM_8					= 2,	\/* 8-bit linear samples *\/$/;"	e	enum:__anon44	file:
AU_ENCODING_ULAW_8	au.c	/^{	AU_ENCODING_ULAW_8					= 1,	\/* 8-bit u-law samples *\/$/;"	e	enum:__anon44	file:
AU_FMT	au.c	/^} AU_FMT ;$/;"	t	typeref:struct:__anon45	file:
AVR_HDR_SIZE	avr.c	29;"	d	file:
AVR_HEADER	avr.c	/^} AVR_HEADER ;$/;"	t	typeref:struct:__anon22	file:
AWK	G72x/Makefile	/^AWK = gawk$/;"	m
AWK	GSM610/Makefile	/^AWK = gawk$/;"	m
AWK	Makefile	/^AWK = gawk$/;"	m
AdaptCoeff1	ms_adpcm.c	/^static int AdaptCoeff1 [MSADPCM_ADAPT_COEFF_COUNT] =$/;"	v	file:
AdaptCoeff2	ms_adpcm.c	/^static int AdaptCoeff2 [MSADPCM_ADAPT_COEFF_COUNT] =$/;"	v	file:
AdaptationTable	ms_adpcm.c	/^static int AdaptationTable [] =$/;"	v	file:
Autocorrelation	GSM610/lpc.c	/^static void Autocorrelation ($/;"	f	file:
BCAST_MAX	test_broadcast_var.c	29;"	d	file:
BEI2H_INT	sfendian.h	83;"	d
BEI2H_INT	sfendian.h	93;"	d
BES2H_SHORT	sfendian.h	82;"	d
BES2H_SHORT	sfendian.h	92;"	d
BET2H_INT_PTR	sfendian.h	106;"	d
BET2H_SHORT_PTR	sfendian.h	105;"	d
BITWIDTH2BYTES	common.h	83;"	d
BODY_MARKER	svx.c	39;"	d	file:
BUFFER_SIZE	G72x/g72x_test.c	32;"	d	file:
CAF_PEAK_CHUNK_SIZE	caf.c	67;"	d	file:
CAF_PRIVATE	caf.c	/^} CAF_PRIVATE ;$/;"	t	typeref:struct:__anon78	file:
CASE_NAME	common.c	1371;"	d	file:
CAT_MARKER	rx2.c	45;"	d	file:
CC	G72x/Makefile	/^CC = \/bin\/sh \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23\/shave cc gcc$/;"	m
CC	GSM610/Makefile	/^CC = \/bin\/sh \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23\/shave cc gcc$/;"	m
CC	Makefile	/^CC = \/bin\/sh \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23\/shave cc gcc$/;"	m
CCAS	G72x/Makefile	/^CCAS = \/bin\/sh \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23\/shave ccas $/;"	m
CCAS	GSM610/Makefile	/^CCAS = \/bin\/sh \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23\/shave ccas $/;"	m
CCAS	Makefile	/^CCAS = \/bin\/sh \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23\/shave ccas $/;"	m
CCDEPMODE	G72x/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	GSM610/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCLD	G72x/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	GSM610/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	Makefile	/^CCLD = $(CC)$/;"	m
CFILES	G72x/Makefile	/^CFILES = g72x.c g721.c g723_16.c g723_24.c g723_40.c$/;"	m
CFILES	GSM610/Makefile	/^CFILES = add.c decode.c gsm_decode.c gsm_encode.c long_term.c preprocess.c \\$/;"	m
CFLAGS	G72x/Makefile	/^CFLAGS = -g -O2 -std=gnu99 -Wall -Wextra -Wdeclaration-after-statement -Wpointer-arith -funsigned-char -Wstrict-prototypes -Wmissing-prototypes -Waggregate-return -Wcast-align -Wcast-qual -Wnested-externs -Wshadow -Wbad-function-cast -Wwrite-strings  -pipe $/;"	m
CFLAGS	GSM610/Makefile	/^CFLAGS = -g -O2 -std=gnu99 -Wall -Wextra -Wdeclaration-after-statement -Wpointer-arith -funsigned-char -Wstrict-prototypes -Wmissing-prototypes -Waggregate-return -Wcast-align -Wcast-qual -Wnested-externs -Wshadow -Wbad-function-cast -Wwrite-strings  -pipe $/;"	m
CFLAGS	Makefile	/^CFLAGS = -g -O2 -std=gnu99 -Wall -Wextra -Wdeclaration-after-statement -Wpointer-arith -funsigned-char -Wstrict-prototypes -Wmissing-prototypes -Waggregate-return -Wcast-align -Wcast-qual -Wnested-externs -Wshadow -Wbad-function-cast -Wwrite-strings  -pipe $/;"	m
CHAN_MARKER	aiff.c	46;"	d	file:
CHAN_MARKER	svx.c	48;"	d	file:
CLEANFILES	Makefile	/^CLEANFILES = *~$/;"	m
CLEAN_VERSION	G72x/Makefile	/^CLEAN_VERSION = 1.0.23$/;"	m
CLEAN_VERSION	GSM610/Makefile	/^CLEAN_VERSION = 1.0.23$/;"	m
CLEAN_VERSION	Makefile	/^CLEAN_VERSION = 1.0.23$/;"	m
CMP_0_ARGS	test_log_printf.c	31;"	d	file:
CMP_2_ARGS	test_log_printf.c	38;"	d	file:
CMP_4_ARGS	test_log_printf.c	45;"	d	file:
CMP_5_ARGS	test_log_printf.c	52;"	d	file:
CMP_6_ARGS	test_log_printf.c	59;"	d	file:
COMMON	Makefile	/^COMMON = common.c file_io.c command.c pcm.c ulaw.c alaw.c float32.c \\$/;"	m
COMM_CHUNK	aiff.c	/^} COMM_CHUNK ;$/;"	t	typeref:struct:__anon9	file:
COMM_MARKER	aiff.c	41;"	d	file:
COMPILE	G72x/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILE	GSM610/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILE	Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILER_IS_GCC	config.h	5;"	d
COMP_MARKER	rx2.c	57;"	d	file:
COMT_MARKER	aiff.c	52;"	d	file:
CONFIG_CLEAN_FILES	G72x/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	GSM610/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	Makefile	/^CONFIG_CLEAN_FILES = sndfile.h version-metadata.rc$/;"	m
CONFIG_CLEAN_VPATH_FILES	G72x/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	GSM610/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_H	GSM610/config.h	8;"	d
CONFIG_HEADER	G72x/Makefile	/^CONFIG_HEADER = $(top_builddir)\/src\/config.h$/;"	m
CONFIG_HEADER	GSM610/Makefile	/^CONFIG_HEADER = $(top_builddir)\/src\/config.h$/;"	m
CONFIG_HEADER	Makefile	/^CONFIG_HEADER = config.h$/;"	m
CPP	G72x/Makefile	/^CPP = gcc -E$/;"	m
CPP	GSM610/Makefile	/^CPP = gcc -E$/;"	m
CPP	Makefile	/^CPP = gcc -E$/;"	m
CPPFLAGS	G72x/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	GSM610/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	Makefile	/^CPPFLAGS = $/;"	m
CPU_CLIPS_NEGATIVE	config.h	8;"	d
CPU_CLIPS_POSITIVE	config.h	11;"	d
CPU_IS_BIG_ENDIAN	config.h	14;"	d
CPU_IS_LITTLE_ENDIAN	config.h	17;"	d
CTAGS	G72x/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	GSM610/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	Makefile	/^CTAGS = ctags$/;"	m
CXX	G72x/Makefile	/^CXX = \/bin\/sh \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23\/shave cxx g++$/;"	m
CXX	GSM610/Makefile	/^CXX = \/bin\/sh \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23\/shave cxx g++$/;"	m
CXX	Makefile	/^CXX = \/bin\/sh \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23\/shave cxx g++$/;"	m
CXXCPP	G72x/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	GSM610/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	Makefile	/^CXXCPP = g++ -E$/;"	m
CXXDEPMODE	G72x/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	GSM610/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXFLAGS	G72x/Makefile	/^CXXFLAGS = -g -O2 -Wall -Wextra -Wcast-align -Wcast-qual -Wshadow -Wwrite-strings -Wctor-dtor-privacy -Wnon-virtual-dtor -Woverloaded-virtual -Wreorder -Wsign-promo $/;"	m
CXXFLAGS	GSM610/Makefile	/^CXXFLAGS = -g -O2 -Wall -Wextra -Wcast-align -Wcast-qual -Wshadow -Wwrite-strings -Wctor-dtor-privacy -Wnon-virtual-dtor -Woverloaded-virtual -Wreorder -Wsign-promo $/;"	m
CXXFLAGS	Makefile	/^CXXFLAGS = -g -O2 -Wall -Wextra -Wcast-align -Wcast-qual -Wshadow -Wwrite-strings -Wctor-dtor-privacy -Wnon-virtual-dtor -Woverloaded-virtual -Wreorder -Wsign-promo $/;"	m
CYGPATH_W	G72x/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	GSM610/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	Makefile	/^CYGPATH_W = echo$/;"	m
Calculation_of_the_LTP_parameters	GSM610/long_term.c	/^static void Calculation_of_the_LTP_parameters ($/;"	f	file:
Coefficients_0_12	GSM610/short_term.c	/^static void Coefficients_0_12 ($/;"	f	file:
Coefficients_13_26	GSM610/short_term.c	/^static void Coefficients_13_26 ($/;"	f	file:
Coefficients_27_39	GSM610/short_term.c	/^static void Coefficients_27_39 ($/;"	f	file:
Coefficients_40_159	GSM610/short_term.c	/^static void Coefficients_40_159 ($/;"	f	file:
Cut_Calculation_of_the_LTP_parameters	GSM610/long_term.c	/^static void Cut_Calculation_of_the_LTP_parameters ($/;"	f	file:
Cut_Fast_Calculation_of_the_LTP_parameters	GSM610/long_term.c	/^static void Cut_Fast_Calculation_of_the_LTP_parameters ($/;"	f	file:
DECAY_COUNT	G72x/g72x_test.c	145;"	d	file:
DEFAULT_INCLUDES	G72x/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)\/src$/;"	m
DEFAULT_INCLUDES	GSM610/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)\/src$/;"	m
DEFAULT_INCLUDES	Makefile	/^DEFAULT_INCLUDES = -I.$/;"	m
DEFS	G72x/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	GSM610/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEPDIR	G72x/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	GSM610/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	Makefile	/^DEPDIR = .deps$/;"	m
DESC_CHUNK	caf.c	/^} DESC_CHUNK ;$/;"	t	typeref:struct:__anon77	file:
DEVL_MARKER	rx2.c	53;"	d	file:
DFIL_MARKER	wve.c	37;"	d	file:
DISP_MARKER	wav.c	61;"	d	file:
DISTFILES	G72x/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	GSM610/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DIST_COMMON	G72x/Makefile	/^DIST_COMMON = README $(noinst_HEADERS) $(srcdir)\/Makefile.am \\$/;"	m
DIST_COMMON	GSM610/Makefile	/^DIST_COMMON = README $(noinst_HEADERS) $(srcdir)\/Makefile.am \\$/;"	m
DIST_COMMON	Makefile	/^DIST_COMMON = $(include_HEADERS) $(noinst_HEADERS) \\$/;"	m
DIST_SOURCES	G72x/Makefile	/^DIST_SOURCES = $(libg72x_la_SOURCES) $(g72x_test_SOURCES)$/;"	m
DIST_SOURCES	GSM610/Makefile	/^DIST_SOURCES = $(libgsm_la_SOURCES)$/;"	m
DIST_SOURCES	Makefile	/^DIST_SOURCES = $(am__libcommon_la_SOURCES_DIST) \\$/;"	m
DIST_SUBDIRS	Makefile	/^DIST_SUBDIRS = $(SUBDIRS)$/;"	m
DITHER_DATA	dither.c	/^} DITHER_DATA ;$/;"	t	typeref:struct:__anon18	file:
DNSDOT_MARKER	au.c	35;"	d	file:
DOTSND_MARKER	au.c	34;"	d	file:
DOUBLE64_READ	double64.c	32;"	d	file:
DOUBLE64_READ	double64.c	35;"	d	file:
DOUBLE64_WRITE	double64.c	33;"	d	file:
DOUBLE64_WRITE	double64.c	36;"	d	file:
DOUBLE_BROKEN_BE	double64.c	/^	DOUBLE_BROKEN_BE	= 0x56$/;"	e	enum:__anon99	file:
DOUBLE_BROKEN_LE	double64.c	/^	DOUBLE_BROKEN_LE	= 0x45,$/;"	e	enum:__anon99	file:
DOUBLE_CAN_RW_BE	double64.c	/^	DOUBLE_CAN_RW_BE	= 0x34,$/;"	e	enum:__anon99	file:
DOUBLE_CAN_RW_LE	double64.c	/^	DOUBLE_CAN_RW_LE	= 0x23,$/;"	e	enum:__anon99	file:
DOUBLE_UNKNOWN	double64.c	/^{	DOUBLE_UNKNOWN		= 0x00,$/;"	e	enum:__anon99	file:
DSYMUTIL	G72x/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	GSM610/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	Makefile	/^DSYMUTIL = $/;"	m
DUMPBIN	G72x/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	GSM610/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	Makefile	/^DUMPBIN = $/;"	m
DWD_HEADER	dwd.c	/^} DWD_HEADER ;$/;"	t	typeref:struct:__anon103	file:
DWD_HEADER_LEN	dwd.c	52;"	d	file:
DWD_IDENTIFIER	dwd.c	49;"	d	file:
DWD_IDENTIFIER_LEN	dwd.c	50;"	d	file:
DWVW_MARKER	aiff.c	79;"	d	file:
DWVW_PRIVATE	dwvw.c	/^} DWVW_PRIVATE ;$/;"	t	typeref:struct:__anon19	file:
Decoding_of_the_coded_Log_Area_Ratios	GSM610/short_term.c	/^static void Decoding_of_the_coded_Log_Area_Ratios ($/;"	f	file:
ECHO_C	G72x/Makefile	/^ECHO_C = $/;"	m
ECHO_C	GSM610/Makefile	/^ECHO_C = $/;"	m
ECHO_C	Makefile	/^ECHO_C = $/;"	m
ECHO_N	G72x/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	GSM610/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	Makefile	/^ECHO_N = -n$/;"	m
ECHO_T	G72x/Makefile	/^ECHO_T = $/;"	m
ECHO_T	GSM610/Makefile	/^ECHO_T = $/;"	m
ECHO_T	Makefile	/^ECHO_T = $/;"	m
EGREP	G72x/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	GSM610/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	Makefile	/^EGREP = \/bin\/grep -E$/;"	m
ENABLE_EXPERIMENTAL_CODE	config.h	20;"	d
ENABLE_SNDFILE_WINDOWS_PROTOTYPES	windows.c	30;"	d	file:
ENC_BUFFER_SIZE	flac.c	42;"	d	file:
ENDSWAP_INT	sfendian.h	47;"	d
ENDSWAP_INT	sfendian.h	52;"	d
ENDSWAP_SHORT	sfendian.h	46;"	d
ENDSWAP_SHORT	sfendian.h	51;"	d
EQ_MARKER	rx2.c	56;"	d	file:
ERROR_666	txw.c	97;"	d	file:
ESSN_MARKER	wve.c	38;"	d	file:
ETAGS	G72x/Makefile	/^ETAGS = etags$/;"	m
ETAGS	GSM610/Makefile	/^ETAGS = etags$/;"	m
ETAGS	Makefile	/^ETAGS = etags$/;"	m
EXEEXT	G72x/Makefile	/^EXEEXT = $/;"	m
EXEEXT	GSM610/Makefile	/^EXEEXT = $/;"	m
EXEEXT	Makefile	/^EXEEXT = $/;"	m
EXTENSIBLE_WAV_FMT	wav_w64.h	/^} EXTENSIBLE_WAV_FMT ;$/;"	t	typeref:struct:__anon32
EXTERNAL_CFLAGS	G72x/Makefile	/^EXTERNAL_CFLAGS = $/;"	m
EXTERNAL_CFLAGS	GSM610/Makefile	/^EXTERNAL_CFLAGS = $/;"	m
EXTERNAL_CFLAGS	Makefile	/^EXTERNAL_CFLAGS = $/;"	m
EXTERNAL_LIBS	G72x/Makefile	/^EXTERNAL_LIBS = $/;"	m
EXTERNAL_LIBS	GSM610/Makefile	/^EXTERNAL_LIBS = $/;"	m
EXTERNAL_LIBS	Makefile	/^EXTERNAL_LIBS = $/;"	m
EXTRA_DIST	G72x/Makefile	/^EXTRA_DIST = README README.original ChangeLog$/;"	m
EXTRA_DIST	GSM610/Makefile	/^EXTRA_DIST = README COPYRIGHT ChangeLog$/;"	m
EXTRA_DIST	Makefile	/^EXTRA_DIST = sndfile.h.in config.h.in test_endswap.tpl test_endswap.def \\$/;"	m
EXT_SUBFORMAT	wav_w64.h	/^} EXT_SUBFORMAT ;$/;"	t	typeref:struct:__anon31
ErrorStruct	sndfile.c	/^} ErrorStruct ;$/;"	t	typeref:struct:__anon40	file:
F77	G72x/Makefile	/^F77 = \/bin\/sh \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23\/shave f77 $/;"	m
F77	GSM610/Makefile	/^F77 = \/bin\/sh \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23\/shave f77 $/;"	m
F77	Makefile	/^F77 = \/bin\/sh \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23\/shave f77 $/;"	m
FACT_CHUNK	wav_w64.h	/^} FACT_CHUNK ;$/;"	t	typeref:struct:__anon34
FAP_MARKER	paf.c	36;"	d	file:
FAST	GSM610/gsm610_priv.h	12;"	d
FC	G72x/Makefile	/^FC = \/bin\/sh \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23\/shave fc $/;"	m
FC	GSM610/Makefile	/^FC = \/bin\/sh \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23\/shave fc $/;"	m
FC	Makefile	/^FC = \/bin\/sh \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23\/shave fc $/;"	m
FFFF_MARKER	rf64.c	44;"	d	file:
FGREP	G72x/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	GSM610/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FILESPECIFIC	Makefile	/^FILESPECIFIC = sndfile.c aiff.c au.c avr.c caf.c dwd.c flac.c g72x.c htk.c ircam.c \\$/;"	m
FILTER	GSM610/short_term.c	347;"	d	file:
FILTER	GSM610/short_term.c	349;"	d	file:
FILTER	GSM610/short_term.c	390;"	d	file:
FILTER	GSM610/short_term.c	393;"	d	file:
FL32_MARKER	aiff.c	70;"	d	file:
FL64_MARKER	aiff.c	72;"	d	file:
FLAC_CFLAGS	G72x/Makefile	/^FLAC_CFLAGS = $/;"	m
FLAC_CFLAGS	GSM610/Makefile	/^FLAC_CFLAGS = $/;"	m
FLAC_CFLAGS	Makefile	/^FLAC_CFLAGS = $/;"	m
FLAC_LIBS	G72x/Makefile	/^FLAC_LIBS = $/;"	m
FLAC_LIBS	GSM610/Makefile	/^FLAC_LIBS = $/;"	m
FLAC_LIBS	Makefile	/^FLAC_LIBS = $/;"	m
FLAC_PRIVATE	flac.c	/^} FLAC_PRIVATE ;$/;"	t	typeref:struct:__anon88	file:
FLAC_TAG	flac.c	/^} FLAC_TAG ;$/;"	t	typeref:struct:__anon89	file:
FLOAT32_READ	float32.c	32;"	d	file:
FLOAT32_READ	float32.c	35;"	d	file:
FLOAT32_WRITE	float32.c	33;"	d	file:
FLOAT32_WRITE	float32.c	36;"	d	file:
FLOAT_BROKEN_BE	float32.c	/^	FLOAT_BROKEN_BE		= 0x45$/;"	e	enum:__anon43	file:
FLOAT_BROKEN_LE	float32.c	/^	FLOAT_BROKEN_LE		= 0x34,$/;"	e	enum:__anon43	file:
FLOAT_CAN_RW_BE	float32.c	/^	FLOAT_CAN_RW_BE		= 0x23,$/;"	e	enum:__anon43	file:
FLOAT_CAN_RW_LE	float32.c	/^	FLOAT_CAN_RW_LE		= 0x12,$/;"	e	enum:__anon43	file:
FLOAT_UNKNOWN	float32.c	/^{	FLOAT_UNKNOWN		= 0x00,$/;"	e	enum:__anon43	file:
FMT_INT	test_endswap.c	37;"	d	file:
FMT_INT64	test_endswap.c	38;"	d	file:
FMT_SHORT	test_endswap.c	36;"	d	file:
FORMAT_TYPE	wav_w64.c	529;"	d	file:
FORM_MARKER	aiff.c	38;"	d	file:
FORM_MARKER	svx.c	35;"	d	file:
FVER_MARKER	aiff.c	53;"	d	file:
Fast_Autocorrelation	GSM610/lpc.c	/^static void Fast_Autocorrelation ($/;"	f	file:
Fast_Calculation_of_the_LTP_parameters	GSM610/long_term.c	/^static void Fast_Calculation_of_the_LTP_parameters ($/;"	f	file:
Fast_Short_term_analysis_filtering	GSM610/short_term.c	/^static void Fast_Short_term_analysis_filtering ($/;"	f	file:
Fast_Short_term_synthesis_filtering	GSM610/short_term.c	/^static void Fast_Short_term_synthesis_filtering ($/;"	f	file:
G721_32_BITS_PER_SAMPLE	G72x/g72x.h	/^	G721_32_BITS_PER_SAMPLE = 4,$/;"	e	enum:__anon41
G721_32_BYTES_PER_BLOCK	G72x/g72x.h	/^	G721_32_BYTES_PER_BLOCK = (G721_32_BITS_PER_SAMPLE * G72x_BLOCK_SIZE) \/ 8,$/;"	e	enum:__anon41
G721_32_SAMPLES_PER_BLOCK	G72x/g72x.h	/^	G721_32_SAMPLES_PER_BLOCK = G72x_BLOCK_SIZE,$/;"	e	enum:__anon41
G721_40_BITS_PER_SAMPLE	G72x/g72x.h	/^	G721_40_BITS_PER_SAMPLE = 5,$/;"	e	enum:__anon41
G721_40_BYTES_PER_BLOCK	G72x/g72x.h	/^	G721_40_BYTES_PER_BLOCK = (G721_40_BITS_PER_SAMPLE * G72x_BLOCK_SIZE) \/ 8$/;"	e	enum:__anon41
G721_40_SAMPLES_PER_BLOCK	G72x/g72x.h	/^	G721_40_SAMPLES_PER_BLOCK = G721_40_BITS_PER_SAMPLE * (G72x_BLOCK_SIZE \/ G721_40_BITS_PER_SAMPLE),$/;"	e	enum:__anon41
G723_16_BITS_PER_SAMPLE	G72x/g72x.h	/^{	G723_16_BITS_PER_SAMPLE = 2,$/;"	e	enum:__anon41
G723_16_BYTES_PER_BLOCK	G72x/g72x.h	/^	G723_16_BYTES_PER_BLOCK = (G723_16_BITS_PER_SAMPLE * G72x_BLOCK_SIZE) \/ 8,$/;"	e	enum:__anon41
G723_16_SAMPLES_PER_BLOCK	G72x/g72x.h	/^	G723_16_SAMPLES_PER_BLOCK = G72x_BLOCK_SIZE,$/;"	e	enum:__anon41
G723_24_BITS_PER_SAMPLE	G72x/g72x.h	/^	G723_24_BITS_PER_SAMPLE = 3,$/;"	e	enum:__anon41
G723_24_BYTES_PER_BLOCK	G72x/g72x.h	/^	G723_24_BYTES_PER_BLOCK = (G723_24_BITS_PER_SAMPLE * G72x_BLOCK_SIZE) \/ 8,$/;"	e	enum:__anon41
G723_24_SAMPLES_PER_BLOCK	G72x/g72x.h	/^	G723_24_SAMPLES_PER_BLOCK = G723_24_BITS_PER_SAMPLE * (G72x_BLOCK_SIZE \/ G723_24_BITS_PER_SAMPLE),$/;"	e	enum:__anon41
G723_40_BITS_PER_SAMPLE	G72x/g72x.h	/^	G723_40_BITS_PER_SAMPLE = 5,$/;"	e	enum:__anon41
G723_40_BYTES_PER_BLOCK	G72x/g72x.h	/^	G723_40_BYTES_PER_BLOCK = (G723_40_BITS_PER_SAMPLE * G72x_BLOCK_SIZE) \/ 8,$/;"	e	enum:__anon41
G723_40_SAMPLES_PER_BLOCK	G72x/g72x.h	/^	G723_40_SAMPLES_PER_BLOCK = G723_40_BITS_PER_SAMPLE * (G72x_BLOCK_SIZE \/ G723_40_BITS_PER_SAMPLE),$/;"	e	enum:__anon41
G72X_HEADER_FILE	G72x/g72x.h	26;"	d
G72X_PRIVATE_H	G72x/g72x_priv.h	28;"	d
G72x_ADPCM_WAV_FMT	wav_w64.h	/^} G72x_ADPCM_WAV_FMT ;$/;"	t	typeref:struct:__anon29
G72x_BLOCK_SIZE	G72x/g72x.h	32;"	d
G72x_PRIVATE	g72x.c	/^} G72x_PRIVATE ;$/;"	t	typeref:struct:__anon100	file:
G72x_STATE	G72x/g72x_priv.h	/^typedef struct g72x_state G72x_STATE ;$/;"	t	typeref:struct:g72x_state
G72x_STATE	g72x.c	/^typedef struct g72x_state G72x_STATE ;$/;"	t	typeref:struct:g72x_state	file:
GCC_MAJOR_VERSION	G72x/Makefile	/^GCC_MAJOR_VERSION = 4$/;"	m
GCC_MAJOR_VERSION	GSM610/Makefile	/^GCC_MAJOR_VERSION = 4$/;"	m
GCC_MAJOR_VERSION	Makefile	/^GCC_MAJOR_VERSION = 4$/;"	m
GCC_MINOR_VERSION	G72x/Makefile	/^GCC_MINOR_VERSION = 5$/;"	m
GCC_MINOR_VERSION	GSM610/Makefile	/^GCC_MINOR_VERSION = 5$/;"	m
GCC_MINOR_VERSION	Makefile	/^GCC_MINOR_VERSION = 5$/;"	m
GCC_VERSION	G72x/Makefile	/^GCC_VERSION = 4.5.1$/;"	m
GCC_VERSION	GSM610/Makefile	/^GCC_VERSION = 4.5.1$/;"	m
GCC_VERSION	Makefile	/^GCC_VERSION = 4.5.1$/;"	m
GETCONF	G72x/Makefile	/^GETCONF = getconf$/;"	m
GETCONF	GSM610/Makefile	/^GETCONF = getconf$/;"	m
GETCONF	Makefile	/^GETCONF = getconf$/;"	m
GET_BE_3BYTE	common.c	773;"	d	file:
GET_BE_8BYTE	common.c	786;"	d	file:
GET_BE_INT	common.c	778;"	d	file:
GET_BE_SHORT	common.c	770;"	d	file:
GET_LE_3BYTE	common.c	772;"	d	file:
GET_LE_8BYTE	common.c	781;"	d	file:
GET_LE_INT	common.c	775;"	d	file:
GET_LE_SHORT	common.c	769;"	d	file:
GET_MARKER	common.c	758;"	d	file:
GET_MARKER	common.c	762;"	d	file:
GLOB_MARKER	rx2.c	46;"	d	file:
GREP	G72x/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	GSM610/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	Makefile	/^GREP = \/bin\/grep$/;"	m
GSM610_BLOCKSIZE	gsm610.c	32;"	d	file:
GSM610_PRIVATE	gsm610.c	/^} GSM610_PRIVATE ;$/;"	t	typeref:struct:gsm610_tag	file:
GSM610_SAMPLES	gsm610.c	33;"	d	file:
GSM610_WAV_FMT	wav_w64.h	/^} GSM610_WAV_FMT ;$/;"	t	typeref:struct:__anon30
GSM_ABS	GSM610/gsm610_priv.h	/^GSM_ABS (word a)$/;"	f
GSM_ADD	GSM610/gsm610_priv.h	/^GSM_ADD (word a, word b)$/;"	f
GSM_H	GSM610/gsm.h	8;"	d
GSM_L_ADD	GSM610/gsm610_priv.h	/^GSM_L_ADD (longword a, longword b)$/;"	f
GSM_L_MULT	GSM610/gsm610_priv.h	/^GSM_L_MULT (word a, word b)$/;"	f
GSM_MAGIC	GSM610/gsm.h	21;"	d
GSM_MAJOR	GSM610/gsm.h	25;"	d
GSM_MARKER	aiff.c	80;"	d	file:
GSM_MINOR	GSM610/gsm.h	24;"	d
GSM_MULT	GSM610/gsm610_priv.h	/^GSM_MULT (word a, word b)$/;"	f
GSM_MULT_R	GSM610/gsm610_priv.h	/^GSM_MULT_R (word a, word b)$/;"	f
GSM_OPT_FAST	GSM610/gsm.h	28;"	d
GSM_OPT_FRAME_CHAIN	GSM610/gsm.h	32;"	d
GSM_OPT_FRAME_INDEX	GSM610/gsm.h	31;"	d
GSM_OPT_LTP_CUT	GSM610/gsm.h	29;"	d
GSM_OPT_VERBOSE	GSM610/gsm.h	27;"	d
GSM_OPT_WAV49	GSM610/gsm.h	30;"	d
GSM_PATCHLEVEL	GSM610/gsm.h	23;"	d
GSM_STATE	GSM610/gsm610_priv.h	/^typedef struct gsm_state GSM_STATE ;$/;"	t	typeref:struct:gsm_state
GSM_SUB	GSM610/gsm610_priv.h	/^GSM_SUB (word a, word b)$/;"	f
GSM_TABLE_C	GSM610/table.c	16;"	d	file:
Gsm_Coder	GSM610/code.c	/^void Gsm_Coder ($/;"	f
Gsm_Decoder	GSM610/decode.c	/^void Gsm_Decoder ($/;"	f
Gsm_LPC_Analysis	GSM610/lpc.c	/^void Gsm_LPC_Analysis ($/;"	f
Gsm_Long_Term_Predictor	GSM610/long_term.c	/^void Gsm_Long_Term_Predictor (	\/* 4x for 160 samples *\/$/;"	f
Gsm_Long_Term_Synthesis_Filtering	GSM610/long_term.c	/^void Gsm_Long_Term_Synthesis_Filtering ($/;"	f
Gsm_Preprocess	GSM610/preprocess.c	/^void Gsm_Preprocess ($/;"	f
Gsm_RPE_Decoding	GSM610/rpe.c	/^void Gsm_RPE_Decoding ($/;"	f
Gsm_RPE_Encoding	GSM610/rpe.c	/^void Gsm_RPE_Encoding ($/;"	f
Gsm_Short_Term_Analysis_Filter	GSM610/short_term.c	/^void Gsm_Short_Term_Analysis_Filter ($/;"	f
Gsm_Short_Term_Synthesis_Filter	GSM610/short_term.c	/^void Gsm_Short_Term_Synthesis_Filter ($/;"	f
H2BE_INT	sfendian.h	86;"	d
H2BE_SHORT	sfendian.h	85;"	d
H2LE_INT	sfendian.h	96;"	d
H2LE_SHORT	sfendian.h	95;"	d
HAS_CHMOD	GSM610/config.h	15;"	d
HAS_CHOWN	GSM610/config.h	17;"	d
HAS_FCHMOD	GSM610/config.h	14;"	d
HAS_FCHOWN	GSM610/config.h	16;"	d
HAS_FCNTL_H	GSM610/config.h	11;"	d
HAS_FSTAT	GSM610/config.h	13;"	d
HAS_STDLIB_H	GSM610/config.h	10;"	d
HAS_STRING_H	GSM610/config.h	19;"	d
HAS_UNISTD_H	GSM610/config.h	21;"	d
HAS_UTIME	GSM610/config.h	22;"	d
HAS_UTIME_H	GSM610/config.h	23;"	d
HAVE_AIFC	aiff.c	/^	HAVE_AIFC		= 0x04,$/;"	e	enum:__anon8	file:
HAVE_AIFF	aiff.c	/^	HAVE_AIFF		= 0x02,$/;"	e	enum:__anon8	file:
HAVE_ALSA_ASOUNDLIB_H	sfconfig.h	41;"	d
HAVE_AUTOGEN	G72x/Makefile	/^HAVE_AUTOGEN = no$/;"	m
HAVE_AUTOGEN	GSM610/Makefile	/^HAVE_AUTOGEN = no$/;"	m
HAVE_AUTOGEN	Makefile	/^HAVE_AUTOGEN = no$/;"	m
HAVE_BODY	svx.c	/^	HAVE_BODY	= 0x08$/;"	e	enum:__anon2	file:
HAVE_BYTESWAP_H	config.h	26;"	d
HAVE_BYTESWAP_H	sfconfig.h	45;"	d
HAVE_CALLOC	config.h	29;"	d
HAVE_CEIL	config.h	32;"	d
HAVE_CHUNK	rf64.c	154;"	d	file:
HAVE_COMM	aiff.c	/^	HAVE_COMM		= 0x10,$/;"	e	enum:__anon8	file:
HAVE_DECL_S_IRGRP	config.h	35;"	d
HAVE_DECL_S_IRGRP	sfconfig.h	49;"	d
HAVE_DLFCN_H	config.h	38;"	d
HAVE_ENDIAN_H	config.h	41;"	d
HAVE_ENDIAN_H	sfconfig.h	53;"	d
HAVE_EXTERNAL_LIBS	config.h	44;"	d
HAVE_FLEXIBLE_ARRAY	config.h	47;"	d
HAVE_FLOOR	config.h	50;"	d
HAVE_FMOD	config.h	53;"	d
HAVE_FORM	aiff.c	/^{	HAVE_FORM		= 0x01,$/;"	e	enum:__anon8	file:
HAVE_FORM	svx.c	/^	HAVE_FORM	= 0x01,$/;"	e	enum:__anon2	file:
HAVE_FREE	config.h	56;"	d
HAVE_FSTAT	config.h	59;"	d
HAVE_FSYNC	config.h	62;"	d
HAVE_FSYNC	sfconfig.h	57;"	d
HAVE_FTRUNCATE	config.h	65;"	d
HAVE_FVER	aiff.c	/^	HAVE_FVER		= 0x08,$/;"	e	enum:__anon8	file:
HAVE_GETPAGESIZE	config.h	68;"	d
HAVE_GETTIMEOFDAY	config.h	71;"	d
HAVE_GMTIME	config.h	74;"	d
HAVE_GMTIME_R	config.h	77;"	d
HAVE_INTTYPES_H	config.h	80;"	d
HAVE_LIBM	config.h	83;"	d
HAVE_LOCALE_H	config.h	86;"	d
HAVE_LOCALE_H	sfconfig.h	61;"	d
HAVE_LOCALTIME	config.h	89;"	d
HAVE_LOCALTIME_R	config.h	92;"	d
HAVE_LRINT	config.h	95;"	d
HAVE_LRINT	sfconfig.h	65;"	d
HAVE_LRINTF	config.h	98;"	d
HAVE_LRINTF	sfconfig.h	69;"	d
HAVE_LSEEK	config.h	101;"	d
HAVE_MALLOC	config.h	104;"	d
HAVE_MEMORY_H	config.h	107;"	d
HAVE_MKOCTFILE	G72x/Makefile	/^HAVE_MKOCTFILE = no$/;"	m
HAVE_MKOCTFILE	GSM610/Makefile	/^HAVE_MKOCTFILE = no$/;"	m
HAVE_MKOCTFILE	Makefile	/^HAVE_MKOCTFILE = no$/;"	m
HAVE_MMAP	config.h	110;"	d
HAVE_MMAP	sfconfig.h	73;"	d
HAVE_OCTAVE	G72x/Makefile	/^HAVE_OCTAVE = no$/;"	m
HAVE_OCTAVE	GSM610/Makefile	/^HAVE_OCTAVE = no$/;"	m
HAVE_OCTAVE	Makefile	/^HAVE_OCTAVE = no$/;"	m
HAVE_OCTAVE_CONFIG	G72x/Makefile	/^HAVE_OCTAVE_CONFIG = no$/;"	m
HAVE_OCTAVE_CONFIG	GSM610/Makefile	/^HAVE_OCTAVE_CONFIG = no$/;"	m
HAVE_OCTAVE_CONFIG	Makefile	/^HAVE_OCTAVE_CONFIG = no$/;"	m
HAVE_OPEN	config.h	113;"	d
HAVE_PEAK	wav.c	/^	HAVE_PEAK	= 0x10,$/;"	e	enum:__anon42	file:
HAVE_PIPE	config.h	116;"	d
HAVE_PIPE	sfconfig.h	101;"	d
HAVE_PREAD	config.h	119;"	d
HAVE_PREAD	sfconfig.h	77;"	d
HAVE_PWRITE	config.h	122;"	d
HAVE_PWRITE	sfconfig.h	81;"	d
HAVE_READ	config.h	125;"	d
HAVE_REALLOC	config.h	128;"	d
HAVE_RIFF	wav.c	/^{	HAVE_RIFF	= 0x01,$/;"	e	enum:__anon42	file:
HAVE_SETLOCALE	config.h	131;"	d
HAVE_SETLOCALE	sfconfig.h	85;"	d
HAVE_SNPRINTF	config.h	137;"	d
HAVE_SQLITE3	config.h	140;"	d
HAVE_SQLITE3	sfconfig.h	89;"	d
HAVE_SSIZE_T	config.h	143;"	d
HAVE_SSND	aiff.c	/^	HAVE_SSND		= 0x20$/;"	e	enum:__anon8	file:
HAVE_STDINT_H	config.h	146;"	d
HAVE_STDINT_H	sfconfig.h	93;"	d
HAVE_STDLIB_H	config.h	149;"	d
HAVE_STRINGS_H	config.h	152;"	d
HAVE_STRING_H	config.h	155;"	d
HAVE_SVX	svx.c	/^	HAVE_SVX	= 0x02,$/;"	e	enum:__anon2	file:
HAVE_SYS_STAT_H	config.h	158;"	d
HAVE_SYS_TIME_H	config.h	161;"	d
HAVE_SYS_TYPES_H	config.h	164;"	d
HAVE_SYS_WAIT_H	config.h	167;"	d
HAVE_UNISTD_H	config.h	170;"	d
HAVE_UNISTD_H	sfconfig.h	97;"	d
HAVE_VHDR	svx.c	/^	HAVE_VHDR	= 0x04,$/;"	e	enum:__anon2	file:
HAVE_VSNPRINTF	config.h	173;"	d
HAVE_WAITPID	config.h	176;"	d
HAVE_WAITPID	sfconfig.h	105;"	d
HAVE_WAVE	wav.c	/^	HAVE_WAVE	= 0x02,$/;"	e	enum:__anon42	file:
HAVE_WINE	G72x/Makefile	/^HAVE_WINE = yes$/;"	m
HAVE_WINE	GSM610/Makefile	/^HAVE_WINE = yes$/;"	m
HAVE_WINE	Makefile	/^HAVE_WINE = yes$/;"	m
HAVE_WRITE	config.h	179;"	d
HAVE_bext	rf64.c	/^	HAVE_bext	= 0x04,$/;"	e	enum:__anon101	file:
HAVE_data	rf64.c	/^	HAVE_data	= 0x08$/;"	e	enum:__anon101	file:
HAVE_data	w64.c	/^	HAVE_data	= 0x20$/;"	e	enum:__anon39	file:
HAVE_data	wav.c	/^	HAVE_data	= 0x20,$/;"	e	enum:__anon42	file:
HAVE_ds64	rf64.c	/^{	HAVE_ds64	= 0x01,$/;"	e	enum:__anon101	file:
HAVE_fact	w64.c	/^	HAVE_fact	= 0x08,$/;"	e	enum:__anon39	file:
HAVE_fact	wav.c	/^	HAVE_fact	= 0x08,$/;"	e	enum:__anon42	file:
HAVE_fmt	rf64.c	/^	HAVE_fmt	= 0x02,$/;"	e	enum:__anon101	file:
HAVE_fmt	w64.c	/^	HAVE_fmt	= 0x04,$/;"	e	enum:__anon39	file:
HAVE_fmt	wav.c	/^	HAVE_fmt	= 0x04,$/;"	e	enum:__anon42	file:
HAVE_other	wav.c	/^	HAVE_other	= 0x80000000$/;"	e	enum:__anon42	file:
HAVE_riff	w64.c	/^{	HAVE_riff	= 0x01,$/;"	e	enum:__anon39	file:
HAVE_wave	w64.c	/^	HAVE_wave	= 0x02,$/;"	e	enum:__anon39	file:
HEADERS	G72x/Makefile	/^HEADERS = $(noinst_HEADERS)$/;"	m
HEADERS	GSM610/Makefile	/^HEADERS = $(noinst_HEADERS)$/;"	m
HEADERS	Makefile	/^HEADERS = $(include_HEADERS) $(nodist_include_HEADERS) \\$/;"	m
HEADER_LENGTH	mpc2k.c	46;"	d	file:
HEADER_NAME_LEN	mpc2k.c	47;"	d	file:
HIGHEST_BIT	dwvw.c	464;"	d	file:
HOST_TRIPLET	G72x/Makefile	/^HOST_TRIPLET = i686-pc-linux-gnu$/;"	m
HOST_TRIPLET	GSM610/Makefile	/^HOST_TRIPLET = i686-pc-linux-gnu$/;"	m
HOST_TRIPLET	Makefile	/^HOST_TRIPLET = i686-pc-linux-gnu$/;"	m
HTML_BGCOLOUR	G72x/Makefile	/^HTML_BGCOLOUR = black$/;"	m
HTML_BGCOLOUR	GSM610/Makefile	/^HTML_BGCOLOUR = black$/;"	m
HTML_BGCOLOUR	Makefile	/^HTML_BGCOLOUR = black$/;"	m
HTML_FGCOLOUR	G72x/Makefile	/^HTML_FGCOLOUR = white$/;"	m
HTML_FGCOLOUR	GSM610/Makefile	/^HTML_FGCOLOUR = white$/;"	m
HTML_FGCOLOUR	Makefile	/^HTML_FGCOLOUR = white$/;"	m
IARL_MARKER	wav.c	82;"	d	file:
IART_MARKER	wav.c	83;"	d	file:
IART_MARKER	wav.c	86;"	d	file:
IBM_FORMAT_ADPCM	wav_w64.h	/^	IBM_FORMAT_ADPCM					= 0x0103,		\/* IBM AVC Adaptive Differential PCM format *\/$/;"	e	enum:__anon23
IBM_FORMAT_ALAW	wav_w64.h	/^	IBM_FORMAT_ALAW						= 0x0102,		\/* IBM a-law format *\/$/;"	e	enum:__anon23
IBM_FORMAT_MULAW	wav_w64.h	/^	IBM_FORMAT_MULAW					= 0x0101,		\/* IBM mu-law format *\/$/;"	e	enum:__anon23
ICMT_MARKER	wav.c	92;"	d	file:
ICOP_MARKER	wav.c	81;"	d	file:
ICOP_MARKER	wav.c	88;"	d	file:
ICRD_MARKER	wav.c	80;"	d	file:
ID	wav_w64.c	/^{	int			ID ;$/;"	m	struct:__anon4	file:
IDELTA_COUNT	ms_adpcm.c	799;"	d	file:
IENG_MARKER	wav.c	85;"	d	file:
IGNR_MARKER	wav.c	87;"	d	file:
IMA_ADPCM_PRIVATE	ima_adpcm.c	/^} IMA_ADPCM_PRIVATE ;$/;"	t	typeref:struct:IMA_ADPCM_PRIVATE_tag	file:
IMA_ADPCM_PRIVATE_tag	ima_adpcm.c	/^typedef struct IMA_ADPCM_PRIVATE_tag$/;"	s	file:
IMA_ADPCM_WAV_FMT	wav_w64.h	/^} IMA_ADPCM_WAV_FMT ;$/;"	t	typeref:struct:__anon28
IMA_OKI_ADPCM	ima_oki_adpcm.h	/^} IMA_OKI_ADPCM ;$/;"	t	typeref:struct:__anon37
IMA_OKI_ADPCM_CODE_LEN	ima_oki_adpcm.h	23;"	d
IMA_OKI_ADPCM_PCM_LEN	ima_oki_adpcm.h	24;"	d
IMA_OKI_ADPCM_TYPE	ima_oki_adpcm.h	/^} IMA_OKI_ADPCM_TYPE ;$/;"	t	typeref:enum:__anon38
IMA_OKI_ADPCM_TYPE_IMA	ima_oki_adpcm.h	/^{	IMA_OKI_ADPCM_TYPE_IMA,$/;"	e	enum:__anon38
IMA_OKI_ADPCM_TYPE_OKI	ima_oki_adpcm.h	/^	IMA_OKI_ADPCM_TYPE_OKI$/;"	e	enum:__anon38
IM_MARKER	mat5.c	44;"	d	file:
INAM_MARKER	wav.c	84;"	d	file:
INCLUDES	Makefile	/^INCLUDES = $/;"	m
INFO_MARKER	wav.c	50;"	d	file:
INSTALL	G72x/Makefile	/^INSTALL = \/bin\/install -c$/;"	m
INSTALL	GSM610/Makefile	/^INSTALL = \/bin\/install -c$/;"	m
INSTALL	Makefile	/^INSTALL = \/bin\/install -c$/;"	m
INSTALL_DATA	G72x/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	GSM610/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_HEADER	G72x/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	GSM610/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_PROGRAM	G72x/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	GSM610/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_SCRIPT	G72x/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	GSM610/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_STRIP_PROGRAM	G72x/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	GSM610/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INST_CHUNK	aiff.c	/^} INST_CHUNK ;$/;"	t	typeref:struct:__anon12	file:
INST_LOOP	aiff.c	/^} INST_LOOP ;$/;"	t	typeref:struct:__anon11	file:
INST_MARKER	aiff.c	44;"	d	file:
INTERLEAVE_CHANNELS	interleave.c	26;"	d	file:
INTERLEAVE_DATA	interleave.c	/^} INTERLEAVE_DATA ;$/;"	t	typeref:struct:__anon85	file:
IPRD_MARKER	wav.c	89;"	d	file:
IRCAM_02B_MARKER	ircam.c	44;"	d	file:
IRCAM_03L_MARKER	ircam.c	45;"	d	file:
IRCAM_ALAW	ircam.c	/^	IRCAM_ALAW		= 0x10001,$/;"	e	enum:__anon36	file:
IRCAM_BE_MARKER	ircam.c	39;"	d	file:
IRCAM_BE_MASK	ircam.c	38;"	d	file:
IRCAM_DATA_OFFSET	ircam.c	47;"	d	file:
IRCAM_FLOAT	ircam.c	/^	IRCAM_FLOAT		= 0x00004,$/;"	e	enum:__anon36	file:
IRCAM_LE_MARKER	ircam.c	42;"	d	file:
IRCAM_LE_MASK	ircam.c	41;"	d	file:
IRCAM_PCM_16	ircam.c	/^{	IRCAM_PCM_16	= 0x00002,$/;"	e	enum:__anon36	file:
IRCAM_PCM_32	ircam.c	/^	IRCAM_PCM_32	= 0x40004$/;"	e	enum:__anon36	file:
IRCAM_ULAW	ircam.c	/^	IRCAM_ULAW		= 0x20001,$/;"	e	enum:__anon36	file:
ISBJ_MARKER	wav.c	91;"	d	file:
ISFT_MARKER	wav.c	79;"	d	file:
ISRC_MARKER	wav.c	90;"	d	file:
LARp_to_rp	GSM610/short_term.c	/^static void LARp_to_rp ($/;"	f	file:
LARpp	GSM610/gsm610_priv.h	/^	word			LARpp[2][8] ; 	\/*                              *\/$/;"	m	struct:gsm_state
LD	G72x/Makefile	/^LD = \/usr\/bin\/ld$/;"	m
LD	GSM610/Makefile	/^LD = \/usr\/bin\/ld$/;"	m
LD	Makefile	/^LD = \/usr\/bin\/ld$/;"	m
LDFLAGS	G72x/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	GSM610/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	Makefile	/^LDFLAGS = $/;"	m
LEI2H_INT	sfendian.h	80;"	d
LEI2H_INT	sfendian.h	90;"	d
LES2H_SHORT	sfendian.h	79;"	d
LES2H_SHORT	sfendian.h	89;"	d
LET2H_INT_PTR	sfendian.h	103;"	d
LET2H_SHORT_PTR	sfendian.h	102;"	d
LIBOBJS	G72x/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	GSM610/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	Makefile	/^LIBOBJS = $/;"	m
LIBS	G72x/Makefile	/^LIBS = -lm $/;"	m
LIBS	GSM610/Makefile	/^LIBS = -lm $/;"	m
LIBS	Makefile	/^LIBS = -lm $/;"	m
LIBTOOL	G72x/Makefile	/^LIBTOOL = \/bin\/sh \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23\/shave-libtool '$(SHELL) $(top_builddir)\/libtool'$/;"	m
LIBTOOL	GSM610/Makefile	/^LIBTOOL = \/bin\/sh \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23\/shave-libtool '$(SHELL) $(top_builddir)\/libtool'$/;"	m
LIBTOOL	Makefile	/^LIBTOOL = \/bin\/sh \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23\/shave-libtool '$(SHELL) $(top_builddir)\/libtool'$/;"	m
LIBTOOL_DEPS	G72x/Makefile	/^LIBTOOL_DEPS = Cfg\/ltmain.sh$/;"	m
LIBTOOL_DEPS	GSM610/Makefile	/^LIBTOOL_DEPS = Cfg\/ltmain.sh$/;"	m
LIBTOOL_DEPS	Makefile	/^LIBTOOL_DEPS = Cfg\/ltmain.sh$/;"	m
LINK	G72x/Makefile	/^LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\$/;"	m
LINK	GSM610/Makefile	/^LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\$/;"	m
LINK	Makefile	/^LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\$/;"	m
LIPO	G72x/Makefile	/^LIPO = $/;"	m
LIPO	GSM610/Makefile	/^LIPO = $/;"	m
LIPO	Makefile	/^LIPO = $/;"	m
LIST_MARKER	wav.c	47;"	d	file:
LN_S	G72x/Makefile	/^LN_S = ln -s$/;"	m
LN_S	GSM610/Makefile	/^LN_S = ln -s$/;"	m
LN_S	Makefile	/^LN_S = ln -s$/;"	m
LTCOMPILE	G72x/Makefile	/^LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\$/;"	m
LTCOMPILE	GSM610/Makefile	/^LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\$/;"	m
LTCOMPILE	Makefile	/^LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\$/;"	m
LTLIBOBJS	G72x/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	GSM610/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	Makefile	/^LTLIBOBJS = $/;"	m
LTLIBRARIES	G72x/Makefile	/^LTLIBRARIES = $(noinst_LTLIBRARIES)$/;"	m
LTLIBRARIES	GSM610/Makefile	/^LTLIBRARIES = $(noinst_LTLIBRARIES)$/;"	m
LTLIBRARIES	Makefile	/^LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)$/;"	m
LT_OBJDIR	config.h	183;"	d
L_z2	GSM610/gsm610_priv.h	/^	longword		L_z2;		\/*                  Offset_com. *\/$/;"	m	struct:gsm_state
Long_term_analysis_filtering	GSM610/long_term.c	/^static void Long_term_analysis_filtering ($/;"	f	file:
MAC3_MARKER	aiff.c	93;"	d	file:
MAC3_MARKER	caf.c	64;"	d	file:
MAC6_MARKER	aiff.c	94;"	d	file:
MAC6_MARKER	caf.c	65;"	d	file:
MAKEFLAGS	G72x/Makefile	/^MAKEFLAGS = -s$/;"	m
MAKEFLAGS	GSM610/Makefile	/^MAKEFLAGS = -s$/;"	m
MAKEFLAGS	Makefile	/^MAKEFLAGS = -s$/;"	m
MAKEINFO	G72x/Makefile	/^MAKEINFO = ${SHELL} \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23\/Cfg\/missing --run makeinfo$/;"	m
MAKEINFO	GSM610/Makefile	/^MAKEINFO = ${SHELL} \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23\/Cfg\/missing --run makeinfo$/;"	m
MAKEINFO	Makefile	/^MAKEINFO = ${SHELL} \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23\/Cfg\/missing --run makeinfo$/;"	m
MAKE_HASH16	w64.c	40;"	d	file:
MAKE_MARKER	sfendian.h	64;"	d
MAKE_MARKER	sfendian.h	66;"	d
MAKE_MARKER16	w64.c	46;"	d	file:
MAP_MAP	chanmap.c	/^} MAP_MAP ;$/;"	t	typeref:struct:__anon102	file:
MARKER_HASH16	w64.c	80;"	d	file:
MARK_ID_POS	aiff.c	/^} MARK_ID_POS ;$/;"	t	typeref:struct:__anon16	file:
MARK_MARKER	aiff.c	43;"	d	file:
MAT4_BE_DOUBLE	mat4.c	42;"	d	file:
MAT4_BE_FLOAT	mat4.c	45;"	d	file:
MAT4_BE_PCM_16	mat4.c	51;"	d	file:
MAT4_BE_PCM_32	mat4.c	48;"	d	file:
MAT4_BE_PCM_U8	mat4.c	55;"	d	file:
MAT4_LE_DOUBLE	mat4.c	43;"	d	file:
MAT4_LE_FLOAT	mat4.c	46;"	d	file:
MAT4_LE_PCM_16	mat4.c	52;"	d	file:
MAT4_LE_PCM_32	mat4.c	49;"	d	file:
MAT4_LE_PCM_U8	mat4.c	56;"	d	file:
MAT5_MATRIX	mat5.c	/^} MAT5_MATRIX ;$/;"	t	typeref:struct:__anon7	file:
MAT5_TYPE_ARRAY	mat5.c	/^	MAT5_TYPE_ARRAY			= 0xE,$/;"	e	enum:__anon6	file:
MAT5_TYPE_COMP_UINT	mat5.c	/^	MAT5_TYPE_COMP_UINT		= 0x00040006$/;"	e	enum:__anon6	file:
MAT5_TYPE_COMP_USHORT	mat5.c	/^	MAT5_TYPE_COMP_USHORT	= 0x00020004,$/;"	e	enum:__anon6	file:
MAT5_TYPE_DOUBLE	mat5.c	/^	MAT5_TYPE_DOUBLE		= 0x9,$/;"	e	enum:__anon6	file:
MAT5_TYPE_FLOAT	mat5.c	/^	MAT5_TYPE_FLOAT			= 0x7,$/;"	e	enum:__anon6	file:
MAT5_TYPE_INT16	mat5.c	/^	MAT5_TYPE_INT16			= 0x3,$/;"	e	enum:__anon6	file:
MAT5_TYPE_INT32	mat5.c	/^	MAT5_TYPE_INT32			= 0x5,$/;"	e	enum:__anon6	file:
MAT5_TYPE_SCHAR	mat5.c	/^{	MAT5_TYPE_SCHAR			= 0x1,$/;"	e	enum:__anon6	file:
MAT5_TYPE_UCHAR	mat5.c	/^	MAT5_TYPE_UCHAR			= 0x2,$/;"	e	enum:__anon6	file:
MAT5_TYPE_UINT16	mat5.c	/^	MAT5_TYPE_UINT16		= 0x4,$/;"	e	enum:__anon6	file:
MAT5_TYPE_UINT32	mat5.c	/^	MAT5_TYPE_UINT32		= 0x6,$/;"	e	enum:__anon6	file:
MATL_MARKER	mat5.c	42;"	d	file:
MAX_LONGWORD	GSM610/gsm610_priv.h	61;"	d
MAX_SAMPLE	ima_oki_adpcm.c	32;"	d	file:
MAX_WORD	GSM610/gsm610_priv.h	58;"	d
MAX_XI_SAMPLES	xi.c	32;"	d	file:
MCS	G72x/Makefile	/^MCS = \/bin\/sh \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23\/shave mcs $/;"	m
MCS	GSM610/Makefile	/^MCS = \/bin\/sh \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23\/shave mcs $/;"	m
MCS	Makefile	/^MCS = \/bin\/sh \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23\/shave mcs $/;"	m
MEXT_MARKER	wav.c	60;"	d	file:
MIN_LONGWORD	GSM610/gsm610_priv.h	60;"	d
MIN_SAMPLE	ima_oki_adpcm.c	31;"	d	file:
MIN_WAV_FMT	wav_w64.h	/^} MIN_WAV_FMT ;$/;"	t	typeref:struct:__anon24
MIN_WORD	GSM610/gsm610_priv.h	57;"	d
MI_MARKER	mat5.c	45;"	d	file:
MKDIR_P	G72x/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	GSM610/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKOCTFILE	G72x/Makefile	/^MKOCTFILE = $/;"	m
MKOCTFILE	GSM610/Makefile	/^MKOCTFILE = $/;"	m
MKOCTFILE	Makefile	/^MKOCTFILE = $/;"	m
MKOCTFILE_VERSION	G72x/Makefile	/^MKOCTFILE_VERSION = $/;"	m
MKOCTFILE_VERSION	GSM610/Makefile	/^MKOCTFILE_VERSION = $/;"	m
MKOCTFILE_VERSION	Makefile	/^MKOCTFILE_VERSION = $/;"	m
MSADPCM_ADAPT_COEFF_COUNT	wav_w64.h	276;"	d
MSADPCM_PRIVATE	ms_adpcm.c	/^} MSADPCM_PRIVATE ;$/;"	t	typeref:struct:__anon86	file:
MSGUID_SUBTYPE_ALAW	rf64.c	/^static const EXT_SUBFORMAT MSGUID_SUBTYPE_ALAW =$/;"	v	file:
MSGUID_SUBTYPE_ALAW	wav.c	/^static const EXT_SUBFORMAT MSGUID_SUBTYPE_ALAW =$/;"	v	file:
MSGUID_SUBTYPE_ALAW	wav_w64.c	/^static const EXT_SUBFORMAT MSGUID_SUBTYPE_ALAW =$/;"	v	file:
MSGUID_SUBTYPE_AMBISONIC_B_FORMAT_IEEE_FLOAT	rf64.c	/^static const EXT_SUBFORMAT MSGUID_SUBTYPE_AMBISONIC_B_FORMAT_IEEE_FLOAT =$/;"	v	file:
MSGUID_SUBTYPE_AMBISONIC_B_FORMAT_IEEE_FLOAT	wav.c	/^static const EXT_SUBFORMAT MSGUID_SUBTYPE_AMBISONIC_B_FORMAT_IEEE_FLOAT =$/;"	v	file:
MSGUID_SUBTYPE_AMBISONIC_B_FORMAT_IEEE_FLOAT	wav_w64.c	/^static const EXT_SUBFORMAT MSGUID_SUBTYPE_AMBISONIC_B_FORMAT_IEEE_FLOAT =$/;"	v	file:
MSGUID_SUBTYPE_AMBISONIC_B_FORMAT_PCM	rf64.c	/^static const EXT_SUBFORMAT MSGUID_SUBTYPE_AMBISONIC_B_FORMAT_PCM =$/;"	v	file:
MSGUID_SUBTYPE_AMBISONIC_B_FORMAT_PCM	wav.c	/^static const EXT_SUBFORMAT MSGUID_SUBTYPE_AMBISONIC_B_FORMAT_PCM =$/;"	v	file:
MSGUID_SUBTYPE_AMBISONIC_B_FORMAT_PCM	wav_w64.c	/^static const EXT_SUBFORMAT MSGUID_SUBTYPE_AMBISONIC_B_FORMAT_PCM =$/;"	v	file:
MSGUID_SUBTYPE_IEEE_FLOAT	rf64.c	/^static const EXT_SUBFORMAT MSGUID_SUBTYPE_IEEE_FLOAT =$/;"	v	file:
MSGUID_SUBTYPE_IEEE_FLOAT	wav.c	/^static const EXT_SUBFORMAT MSGUID_SUBTYPE_IEEE_FLOAT =$/;"	v	file:
MSGUID_SUBTYPE_IEEE_FLOAT	wav_w64.c	/^static const EXT_SUBFORMAT MSGUID_SUBTYPE_IEEE_FLOAT =$/;"	v	file:
MSGUID_SUBTYPE_MS_ADPCM	rf64.c	/^static const EXT_SUBFORMAT MSGUID_SUBTYPE_MS_ADPCM =$/;"	v	file:
MSGUID_SUBTYPE_MS_ADPCM	wav.c	/^static const EXT_SUBFORMAT MSGUID_SUBTYPE_MS_ADPCM =$/;"	v	file:
MSGUID_SUBTYPE_MS_ADPCM	wav_w64.c	/^static const EXT_SUBFORMAT MSGUID_SUBTYPE_MS_ADPCM =$/;"	v	file:
MSGUID_SUBTYPE_MULAW	rf64.c	/^static const EXT_SUBFORMAT MSGUID_SUBTYPE_MULAW =$/;"	v	file:
MSGUID_SUBTYPE_MULAW	wav.c	/^static const EXT_SUBFORMAT MSGUID_SUBTYPE_MULAW =$/;"	v	file:
MSGUID_SUBTYPE_MULAW	wav_w64.c	/^static const EXT_SUBFORMAT MSGUID_SUBTYPE_MULAW =$/;"	v	file:
MSGUID_SUBTYPE_PCM	rf64.c	/^static const EXT_SUBFORMAT MSGUID_SUBTYPE_PCM =$/;"	v	file:
MSGUID_SUBTYPE_PCM	wav.c	/^static const EXT_SUBFORMAT MSGUID_SUBTYPE_PCM =$/;"	v	file:
MSGUID_SUBTYPE_PCM	wav_w64.c	/^static const EXT_SUBFORMAT MSGUID_SUBTYPE_PCM =$/;"	v	file:
MS_ADPCM_WAV_FMT	wav_w64.h	/^} MS_ADPCM_WAV_FMT ;$/;"	t	typeref:struct:__anon26
M_PI	G72x/g72x_test.c	29;"	d	file:
Magick	common.h	/^	int				Magick ;$/;"	m	struct:sf_private_tag
Makefile	G72x/Makefile	1;"	F
Makefile	GSM610/Makefile	1;"	F
Makefile	Makefile	1;"	F
NAME_MARKER	aiff.c	49;"	d	file:
NAME_MARKER	svx.c	45;"	d	file:
NEXTI	GSM610/lpc.c	99;"	d	file:
NIST_HEADER_LENGTH	nist.c	40;"	d	file:
NM	G72x/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	GSM610/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NMEDIT	G72x/Makefile	/^NMEDIT = $/;"	m
NMEDIT	GSM610/Makefile	/^NMEDIT = $/;"	m
NMEDIT	Makefile	/^NMEDIT = $/;"	m
NONE_MARKER	aiff.c	60;"	d	file:
NORMAL_INSTALL	G72x/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	GSM610/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_UNINSTALL	G72x/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	GSM610/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NOT	common.h	93;"	d
OBJC	G72x/Makefile	/^OBJC = \/bin\/sh \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23\/shave objc $/;"	m
OBJC	GSM610/Makefile	/^OBJC = \/bin\/sh \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23\/shave objc $/;"	m
OBJC	Makefile	/^OBJC = \/bin\/sh \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23\/shave objc $/;"	m
OBJDUMP	G72x/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	GSM610/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	Makefile	/^OBJDUMP = objdump$/;"	m
OBJEXT	G72x/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	GSM610/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	Makefile	/^OBJEXT = o$/;"	m
OCTAVE	G72x/Makefile	/^OCTAVE = $/;"	m
OCTAVE	GSM610/Makefile	/^OCTAVE = $/;"	m
OCTAVE	Makefile	/^OCTAVE = $/;"	m
OCTAVE_CONFIG	G72x/Makefile	/^OCTAVE_CONFIG = $/;"	m
OCTAVE_CONFIG	GSM610/Makefile	/^OCTAVE_CONFIG = $/;"	m
OCTAVE_CONFIG	Makefile	/^OCTAVE_CONFIG = $/;"	m
OCTAVE_CONFIG_VERSION	G72x/Makefile	/^OCTAVE_CONFIG_VERSION = $/;"	m
OCTAVE_CONFIG_VERSION	GSM610/Makefile	/^OCTAVE_CONFIG_VERSION = $/;"	m
OCTAVE_CONFIG_VERSION	Makefile	/^OCTAVE_CONFIG_VERSION = $/;"	m
OCTAVE_DEST_MDIR	G72x/Makefile	/^OCTAVE_DEST_MDIR = $/;"	m
OCTAVE_DEST_MDIR	GSM610/Makefile	/^OCTAVE_DEST_MDIR = $/;"	m
OCTAVE_DEST_MDIR	Makefile	/^OCTAVE_DEST_MDIR = $/;"	m
OCTAVE_DEST_ODIR	G72x/Makefile	/^OCTAVE_DEST_ODIR = $/;"	m
OCTAVE_DEST_ODIR	GSM610/Makefile	/^OCTAVE_DEST_ODIR = $/;"	m
OCTAVE_DEST_ODIR	Makefile	/^OCTAVE_DEST_ODIR = $/;"	m
OCTAVE_VERSION	G72x/Makefile	/^OCTAVE_VERSION = $/;"	m
OCTAVE_VERSION	GSM610/Makefile	/^OCTAVE_VERSION = $/;"	m
OCTAVE_VERSION	Makefile	/^OCTAVE_VERSION = $/;"	m
OGG_CFLAGS	G72x/Makefile	/^OGG_CFLAGS = $/;"	m
OGG_CFLAGS	GSM610/Makefile	/^OGG_CFLAGS = $/;"	m
OGG_CFLAGS	Makefile	/^OGG_CFLAGS = $/;"	m
OGG_LIBS	G72x/Makefile	/^OGG_LIBS = $/;"	m
OGG_LIBS	GSM610/Makefile	/^OGG_LIBS = $/;"	m
OGG_LIBS	Makefile	/^OGG_LIBS = $/;"	m
OGG_PRIVATE	ogg.c	/^} OGG_PRIVATE ;$/;"	t	typeref:struct:__anon80	file:
OS_IS_MACOSX	config.h	189;"	d
OS_IS_WIN32	config.h	192;"	d
OS_SPECIFIC_CFLAGS	G72x/Makefile	/^OS_SPECIFIC_CFLAGS = $/;"	m
OS_SPECIFIC_CFLAGS	GSM610/Makefile	/^OS_SPECIFIC_CFLAGS = $/;"	m
OS_SPECIFIC_CFLAGS	Makefile	/^OS_SPECIFIC_CFLAGS = $/;"	m
OS_SPECIFIC_LINKS	G72x/Makefile	/^OS_SPECIFIC_LINKS = $/;"	m
OS_SPECIFIC_LINKS	GSM610/Makefile	/^OS_SPECIFIC_LINKS = $/;"	m
OS_SPECIFIC_LINKS	Makefile	/^OS_SPECIFIC_LINKS = $/;"	m
OTOOL	G72x/Makefile	/^OTOOL = $/;"	m
OTOOL	GSM610/Makefile	/^OTOOL = $/;"	m
OTOOL	Makefile	/^OTOOL = $/;"	m
OTOOL64	G72x/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	GSM610/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	Makefile	/^OTOOL64 = $/;"	m
O_BINARY	file_io.c	64;"	d	file:
OggS_MARKER	rf64.c	52;"	d	file:
OggS_MARKER	wav.c	96;"	d	file:
PACKAGE	G72x/Makefile	/^PACKAGE = libsndfile$/;"	m
PACKAGE	GSM610/Makefile	/^PACKAGE = libsndfile$/;"	m
PACKAGE	Makefile	/^PACKAGE = libsndfile$/;"	m
PACKAGE	config.h	195;"	d
PACKAGE_BUGREPORT	G72x/Makefile	/^PACKAGE_BUGREPORT = sndfile@mega-nerd.com$/;"	m
PACKAGE_BUGREPORT	GSM610/Makefile	/^PACKAGE_BUGREPORT = sndfile@mega-nerd.com$/;"	m
PACKAGE_BUGREPORT	Makefile	/^PACKAGE_BUGREPORT = sndfile@mega-nerd.com$/;"	m
PACKAGE_BUGREPORT	config.h	198;"	d
PACKAGE_NAME	G72x/Makefile	/^PACKAGE_NAME = libsndfile$/;"	m
PACKAGE_NAME	GSM610/Makefile	/^PACKAGE_NAME = libsndfile$/;"	m
PACKAGE_NAME	Makefile	/^PACKAGE_NAME = libsndfile$/;"	m
PACKAGE_NAME	config.h	201;"	d
PACKAGE_STRING	G72x/Makefile	/^PACKAGE_STRING = libsndfile 1.0.23$/;"	m
PACKAGE_STRING	GSM610/Makefile	/^PACKAGE_STRING = libsndfile 1.0.23$/;"	m
PACKAGE_STRING	Makefile	/^PACKAGE_STRING = libsndfile 1.0.23$/;"	m
PACKAGE_STRING	config.h	204;"	d
PACKAGE_TARNAME	G72x/Makefile	/^PACKAGE_TARNAME = libsndfile$/;"	m
PACKAGE_TARNAME	GSM610/Makefile	/^PACKAGE_TARNAME = libsndfile$/;"	m
PACKAGE_TARNAME	Makefile	/^PACKAGE_TARNAME = libsndfile$/;"	m
PACKAGE_TARNAME	config.h	207;"	d
PACKAGE_URL	G72x/Makefile	/^PACKAGE_URL = http:\/\/www.mega-nerd.com\/libsndfile\/$/;"	m
PACKAGE_URL	GSM610/Makefile	/^PACKAGE_URL = http:\/\/www.mega-nerd.com\/libsndfile\/$/;"	m
PACKAGE_URL	Makefile	/^PACKAGE_URL = http:\/\/www.mega-nerd.com\/libsndfile\/$/;"	m
PACKAGE_URL	config.h	210;"	d
PACKAGE_VERSION	G72x/Makefile	/^PACKAGE_VERSION = 1.0.23$/;"	m
PACKAGE_VERSION	GSM610/Makefile	/^PACKAGE_VERSION = 1.0.23$/;"	m
PACKAGE_VERSION	Makefile	/^PACKAGE_VERSION = 1.0.23$/;"	m
PACKAGE_VERSION	config.h	213;"	d
PAD_MARKER	wav.c	64;"	d	file:
PAF24_BLOCK_SIZE	paf.c	46;"	d	file:
PAF24_PRIVATE	paf.c	/^} PAF24_PRIVATE ;$/;"	t	typeref:struct:__anon94	file:
PAF24_SAMPLES_PER_BLOCK	paf.c	45;"	d	file:
PAF_FMT	paf.c	/^} PAF_FMT ;$/;"	t	typeref:struct:__anon93	file:
PAF_HEADER_LENGTH	paf.c	43;"	d	file:
PAF_MARKER	paf.c	37;"	d	file:
PAF_PCM_16	paf.c	/^{	PAF_PCM_16 = 0,$/;"	e	enum:__anon95	file:
PAF_PCM_24	paf.c	/^	PAF_PCM_24 = 1,$/;"	e	enum:__anon95	file:
PAF_PCM_S8	paf.c	/^	PAF_PCM_S8 = 2$/;"	e	enum:__anon95	file:
PATH_SEPARATOR	G72x/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	GSM610/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	Makefile	/^PATH_SEPARATOR = :$/;"	m
PEAK_INFO	common.h	/^} PEAK_INFO ;$/;"	t	typeref:struct:__anon64
PEAK_MARKER	aiff.c	56;"	d	file:
PEAK_MARKER	wav.c	44;"	d	file:
PEAK_POS	common.h	/^} PEAK_POS ;$/;"	t	typeref:struct:__anon63
PFLAC_PCM	flac.c	/^} PFLAC_PCM ;$/;"	t	typeref:enum:__anon87	file:
PFLAC_PCM_DOUBLE	flac.c	/^	PFLAC_PCM_DOUBLE = 53$/;"	e	enum:__anon87	file:
PFLAC_PCM_FLOAT	flac.c	/^	PFLAC_PCM_FLOAT = 52,$/;"	e	enum:__anon87	file:
PFLAC_PCM_INT	flac.c	/^	PFLAC_PCM_INT = 51,$/;"	e	enum:__anon87	file:
PFLAC_PCM_SHORT	flac.c	/^{	PFLAC_PCM_SHORT = 50,$/;"	e	enum:__anon87	file:
PKG_CONFIG	G72x/Makefile	/^PKG_CONFIG = \/usr\/bin\/pkg-config$/;"	m
PKG_CONFIG	GSM610/Makefile	/^PKG_CONFIG = \/usr\/bin\/pkg-config$/;"	m
PKG_CONFIG	Makefile	/^PKG_CONFIG = \/usr\/bin\/pkg-config$/;"	m
PKG_CONFIG_LIBDIR	G72x/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	GSM610/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_PATH	G72x/Makefile	/^PKG_CONFIG_PATH = \/usr\/lib\/pkgconfig$/;"	m
PKG_CONFIG_PATH	GSM610/Makefile	/^PKG_CONFIG_PATH = \/usr\/lib\/pkgconfig$/;"	m
PKG_CONFIG_PATH	Makefile	/^PKG_CONFIG_PATH = \/usr\/lib\/pkgconfig$/;"	m
POST_INSTALL	G72x/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	GSM610/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	Makefile	/^POST_INSTALL = :$/;"	m
POST_UNINSTALL	G72x/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	GSM610/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	Makefile	/^POST_UNINSTALL = :$/;"	m
PRE_INSTALL	G72x/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	GSM610/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	Makefile	/^PRE_INSTALL = :$/;"	m
PRE_UNINSTALL	G72x/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	GSM610/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	Makefile	/^PRE_UNINSTALL = :$/;"	m
PRIVATE_H	GSM610/gsm610_priv.h	8;"	d
PRIV_CHUNK4	common.h	/^} PRIV_CHUNK4 ;$/;"	t	typeref:struct:__anon73
PROGRAMS	G72x/Makefile	/^PROGRAMS = $(noinst_PROGRAMS)$/;"	m
PROGRAMS	Makefile	/^PROGRAMS = $(noinst_PROGRAMS)$/;"	m
PSF_FILE	common.h	/^} PSF_FILE ;$/;"	t	typeref:struct:__anon66
PSF_SEEK_ERROR	common.h	80;"	d
PSION_DATAOFFSET	wve.c	40;"	d	file:
PSION_VERSION	wve.c	39;"	d	file:
PVF1_MARKER	pvf.c	34;"	d	file:
Postprocessing	GSM610/decode.c	/^static void Postprocessing ($/;"	f	file:
Q	G72x/Makefile	/^Q = $(V:1=)$/;"	m
Q	GSM610/Makefile	/^Q = $(V:1=)$/;"	m
Q	Makefile	/^Q = $(V:1=)$/;"	m
Quantization_and_coding	GSM610/lpc.c	/^static void Quantization_and_coding ($/;"	f	file:
RANLIB	G72x/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	GSM610/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	Makefile	/^RANLIB = ranlib$/;"	m
RC	G72x/Makefile	/^RC = $/;"	m
RC	GSM610/Makefile	/^RC = $/;"	m
RC	Makefile	/^RC = $/;"	m
RECURSIVE_CLEAN_TARGETS	Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_TARGETS	Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \\$/;"	m
RECY_MARKER	rx2.c	48;"	d	file:
RF64_MARKER	rf64.c	43;"	d	file:
RIFF_MARKER	ms_adpcm.c	33;"	d	file:
RIFF_MARKER	wav.c	38;"	d	file:
RIFX_MARKER	wav.c	39;"	d	file:
RLSE_MARKER	svx.c	42;"	d	file:
RPE_grid_positioning	GSM610/rpe.c	/^static void RPE_grid_positioning ($/;"	f	file:
RPE_grid_selection	GSM610/rpe.c	/^static void RPE_grid_selection ($/;"	f	file:
RSRC_BIN	sd2.c	/^	RSRC_BIN$/;"	e	enum:__anon90	file:
RSRC_STR	sd2.c	/^{	RSRC_STR = 111,$/;"	e	enum:__anon90	file:
Reflection_coefficients	GSM610/lpc.c	/^static void Reflection_coefficients ($/;"	f	file:
SAMPLE_RATE	G72x/g72x_test.c	33;"	d	file:
SASR_L	GSM610/gsm610_priv.h	/^SASR_L (longword x, word by)$/;"	f
SASR_W	GSM610/gsm610_priv.h	/^SASR_W (word x, word by)$/;"	f
SCALE	GSM610/lpc.c	60;"	d	file:
SCALE	GSM610/lpc.c	78;"	d	file:
SD2_RSRC	sd2.c	/^} SD2_RSRC ;$/;"	t	typeref:struct:__anon91	file:
SDAT_MARKER	rx2.c	60;"	d	file:
SDS_3BYTE_TO_INT_DECODE	sds.c	40;"	d	file:
SDS_AUDIO_BYTES_PER_BLOCK	sds.c	38;"	d	file:
SDS_BLOCK_SIZE	sds.c	36;"	d	file:
SDS_DATA_OFFSET	sds.c	35;"	d	file:
SDS_INT_TO_3BYTE_ENCODE	sds.c	41;"	d	file:
SDS_PRIVATE	sds.c	/^} SDS_PRIVATE ;$/;"	t	typeref:struct:tag_SDS_PRIVATE	file:
SED	G72x/Makefile	/^SED = \/bin\/sed$/;"	m
SED	GSM610/Makefile	/^SED = \/bin\/sed$/;"	m
SED	Makefile	/^SED = \/bin\/sed$/;"	m
SENSIBLE_LEN	double64.c	40;"	d	file:
SENSIBLE_SIZE	file_io.c	56;"	d	file:
SET_MAKE	G72x/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	GSM610/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	Makefile	/^SET_MAKE = $/;"	m
SFCONFIG_H	sfconfig.h	33;"	d
SFC_CALC_MAX_ALL_CHANNELS	sndfile.h	/^	SFC_CALC_MAX_ALL_CHANNELS		= 0x1042,$/;"	e	enum:__anon47
SFC_CALC_NORM_MAX_ALL_CHANNELS	sndfile.h	/^	SFC_CALC_NORM_MAX_ALL_CHANNELS	= 0x1043,$/;"	e	enum:__anon47
SFC_CALC_NORM_SIGNAL_MAX	sndfile.h	/^	SFC_CALC_NORM_SIGNAL_MAX		= 0x1041,$/;"	e	enum:__anon47
SFC_CALC_SIGNAL_MAX	sndfile.h	/^	SFC_CALC_SIGNAL_MAX				= 0x1040,$/;"	e	enum:__anon47
SFC_FILE_TRUNCATE	sndfile.h	/^	SFC_FILE_TRUNCATE				= 0x1080,$/;"	e	enum:__anon47
SFC_GET_BROADCAST_INFO	sndfile.h	/^	SFC_GET_BROADCAST_INFO			= 0x10F0,$/;"	e	enum:__anon47
SFC_GET_CHANNEL_MAP_INFO	sndfile.h	/^	SFC_GET_CHANNEL_MAP_INFO		= 0x1100,$/;"	e	enum:__anon47
SFC_GET_CLIPPING	sndfile.h	/^	SFC_GET_CLIPPING				= 0x10C1,$/;"	e	enum:__anon47
SFC_GET_CURRENT_SF_INFO	sndfile.h	/^	SFC_GET_CURRENT_SF_INFO			= 0x1002,$/;"	e	enum:__anon47
SFC_GET_DITHER_INFO	sndfile.h	/^	SFC_GET_DITHER_INFO				= 0x10A3,$/;"	e	enum:__anon47
SFC_GET_DITHER_INFO_COUNT	sndfile.h	/^	SFC_GET_DITHER_INFO_COUNT		= 0x10A2,$/;"	e	enum:__anon47
SFC_GET_EMBED_FILE_INFO	sndfile.h	/^	SFC_GET_EMBED_FILE_INFO			= 0x10B0,$/;"	e	enum:__anon47
SFC_GET_FORMAT_INFO	sndfile.h	/^	SFC_GET_FORMAT_INFO				= 0x1028,$/;"	e	enum:__anon47
SFC_GET_FORMAT_MAJOR	sndfile.h	/^	SFC_GET_FORMAT_MAJOR			= 0x1031,$/;"	e	enum:__anon47
SFC_GET_FORMAT_MAJOR_COUNT	sndfile.h	/^	SFC_GET_FORMAT_MAJOR_COUNT		= 0x1030,$/;"	e	enum:__anon47
SFC_GET_FORMAT_SUBTYPE	sndfile.h	/^	SFC_GET_FORMAT_SUBTYPE			= 0x1033,$/;"	e	enum:__anon47
SFC_GET_FORMAT_SUBTYPE_COUNT	sndfile.h	/^	SFC_GET_FORMAT_SUBTYPE_COUNT	= 0x1032,$/;"	e	enum:__anon47
SFC_GET_INSTRUMENT	sndfile.h	/^	SFC_GET_INSTRUMENT				= 0x10D0,$/;"	e	enum:__anon47
SFC_GET_LIB_VERSION	sndfile.h	/^{	SFC_GET_LIB_VERSION				= 0x1000,$/;"	e	enum:__anon47
SFC_GET_LOG_INFO	sndfile.h	/^	SFC_GET_LOG_INFO				= 0x1001,$/;"	e	enum:__anon47
SFC_GET_LOOP_INFO	sndfile.h	/^	SFC_GET_LOOP_INFO				= 0x10E0,$/;"	e	enum:__anon47
SFC_GET_MAX_ALL_CHANNELS	sndfile.h	/^	SFC_GET_MAX_ALL_CHANNELS		= 0x1045,$/;"	e	enum:__anon47
SFC_GET_NORM_DOUBLE	sndfile.h	/^	SFC_GET_NORM_DOUBLE				= 0x1010,$/;"	e	enum:__anon47
SFC_GET_NORM_FLOAT	sndfile.h	/^	SFC_GET_NORM_FLOAT				= 0x1011,$/;"	e	enum:__anon47
SFC_GET_SIGNAL_MAX	sndfile.h	/^	SFC_GET_SIGNAL_MAX				= 0x1044,$/;"	e	enum:__anon47
SFC_GET_SIMPLE_FORMAT	sndfile.h	/^	SFC_GET_SIMPLE_FORMAT			= 0x1021,$/;"	e	enum:__anon47
SFC_GET_SIMPLE_FORMAT_COUNT	sndfile.h	/^	SFC_GET_SIMPLE_FORMAT_COUNT		= 0x1020,$/;"	e	enum:__anon47
SFC_RAW_DATA_NEEDS_ENDSWAP	sndfile.h	/^	SFC_RAW_DATA_NEEDS_ENDSWAP		= 0x1110,$/;"	e	enum:__anon47
SFC_SET_ADD_DITHER_ON_READ	sndfile.h	/^	SFC_SET_ADD_DITHER_ON_READ		= 0x1071$/;"	e	enum:__anon47
SFC_SET_ADD_DITHER_ON_WRITE	sndfile.h	/^	SFC_SET_ADD_DITHER_ON_WRITE		= 0x1070,$/;"	e	enum:__anon47
SFC_SET_ADD_HEADER_PAD_CHUNK	sndfile.h	/^	SFC_SET_ADD_HEADER_PAD_CHUNK	= 0x1051,$/;"	e	enum:__anon47
SFC_SET_ADD_PEAK_CHUNK	sndfile.h	/^	SFC_SET_ADD_PEAK_CHUNK			= 0x1050,$/;"	e	enum:__anon47
SFC_SET_BROADCAST_INFO	sndfile.h	/^	SFC_SET_BROADCAST_INFO			= 0x10F1,$/;"	e	enum:__anon47
SFC_SET_CHANNEL_MAP_INFO	sndfile.h	/^	SFC_SET_CHANNEL_MAP_INFO		= 0x1101,$/;"	e	enum:__anon47
SFC_SET_CLIPPING	sndfile.h	/^	SFC_SET_CLIPPING				= 0x10C0,$/;"	e	enum:__anon47
SFC_SET_DITHER_ON_READ	sndfile.h	/^	SFC_SET_DITHER_ON_READ			= 0x10A1,$/;"	e	enum:__anon47
SFC_SET_DITHER_ON_WRITE	sndfile.h	/^	SFC_SET_DITHER_ON_WRITE			= 0x10A0,$/;"	e	enum:__anon47
SFC_SET_INSTRUMENT	sndfile.h	/^	SFC_SET_INSTRUMENT				= 0x10D1,$/;"	e	enum:__anon47
SFC_SET_NORM_DOUBLE	sndfile.h	/^	SFC_SET_NORM_DOUBLE				= 0x1012,$/;"	e	enum:__anon47
SFC_SET_NORM_FLOAT	sndfile.h	/^	SFC_SET_NORM_FLOAT				= 0x1013,$/;"	e	enum:__anon47
SFC_SET_RAW_START_OFFSET	sndfile.h	/^	SFC_SET_RAW_START_OFFSET		= 0x1090,$/;"	e	enum:__anon47
SFC_SET_SCALE_FLOAT_INT_READ	sndfile.h	/^	SFC_SET_SCALE_FLOAT_INT_READ	= 0x1014,$/;"	e	enum:__anon47
SFC_SET_SCALE_INT_FLOAT_WRITE	sndfile.h	/^	SFC_SET_SCALE_INT_FLOAT_WRITE	= 0x1015,$/;"	e	enum:__anon47
SFC_SET_UPDATE_HEADER_AUTO	sndfile.h	/^	SFC_SET_UPDATE_HEADER_AUTO		= 0x1061,$/;"	e	enum:__anon47
SFC_SET_VBR_ENCODING_QUALITY	sndfile.h	/^	SFC_SET_VBR_ENCODING_QUALITY	= 0x1300,$/;"	e	enum:__anon47
SFC_TEST_AIFF_ADD_INST_CHUNK	common.h	/^{	SFC_TEST_AIFF_ADD_INST_CHUNK	= 0x2000,$/;"	e	enum:__anon76
SFC_TEST_IEEE_FLOAT_REPLACE	sndfile.h	/^	SFC_TEST_IEEE_FLOAT_REPLACE		= 0x6001,$/;"	e	enum:__anon47
SFC_TEST_WAV_ADD_INFO_CHUNK	common.h	/^	SFC_TEST_WAV_ADD_INFO_CHUNK		= 0x2010$/;"	e	enum:__anon76
SFC_UPDATE_HEADER_NOW	sndfile.h	/^	SFC_UPDATE_HEADER_NOW			= 0x1060,$/;"	e	enum:__anon47
SFC_WAVEX_GET_AMBISONIC	sndfile.h	/^	SFC_WAVEX_GET_AMBISONIC			= 0x1201,$/;"	e	enum:__anon47
SFC_WAVEX_SET_AMBISONIC	sndfile.h	/^	SFC_WAVEX_SET_AMBISONIC			= 0x1200,$/;"	e	enum:__anon47
SFD_CUSTOM_LEVEL	sndfile.h	/^	SFD_CUSTOM_LEVEL	= 0x40000000,$/;"	e	enum:__anon53
SFD_DEFAULT_LEVEL	sndfile.h	/^{	SFD_DEFAULT_LEVEL	= 0,$/;"	e	enum:__anon53
SFD_NO_DITHER	sndfile.h	/^	SFD_NO_DITHER		= 500,$/;"	e	enum:__anon53
SFD_TRIANGULAR_PDF	sndfile.h	/^	SFD_TRIANGULAR_PDF	= 502$/;"	e	enum:__anon53
SFD_TYPEMASK	common.h	/^	SFD_TYPEMASK		= 0x0FFFFFFF$/;"	e	enum:__anon61
SFD_WHITE	sndfile.h	/^	SFD_WHITE			= 501,$/;"	e	enum:__anon53
SFENDIAN_INCLUDED	sfendian.h	20;"	d
SFE_AIFF_AIFF_NO_FORM	common.h	/^	SFE_AIFF_AIFF_NO_FORM,$/;"	e	enum:__anon72
SFE_AIFF_BAD_COMM_CHUNK	common.h	/^	SFE_AIFF_BAD_COMM_CHUNK,$/;"	e	enum:__anon72
SFE_AIFF_BAD_PEAK	common.h	/^	SFE_AIFF_BAD_PEAK,$/;"	e	enum:__anon72
SFE_AIFF_COMM_CHUNK_SIZE	common.h	/^	SFE_AIFF_COMM_CHUNK_SIZE,$/;"	e	enum:__anon72
SFE_AIFF_COMM_NO_FORM	common.h	/^	SFE_AIFF_COMM_NO_FORM,$/;"	e	enum:__anon72
SFE_AIFF_NO_DATA	common.h	/^	SFE_AIFF_NO_DATA,$/;"	e	enum:__anon72
SFE_AIFF_NO_FORM	common.h	/^	SFE_AIFF_NO_FORM,$/;"	e	enum:__anon72
SFE_AIFF_NO_SSND	common.h	/^	SFE_AIFF_NO_SSND,$/;"	e	enum:__anon72
SFE_AIFF_PEAK_B4_COMM	common.h	/^	SFE_AIFF_PEAK_B4_COMM,$/;"	e	enum:__anon72
SFE_AIFF_RW_SSND_NOT_LAST	common.h	/^	SFE_AIFF_RW_SSND_NOT_LAST,$/;"	e	enum:__anon72
SFE_AIFF_SSND_NO_COMM	common.h	/^	SFE_AIFF_SSND_NO_COMM,$/;"	e	enum:__anon72
SFE_AIFF_UNKNOWN_CHUNK	common.h	/^	SFE_AIFF_UNKNOWN_CHUNK,$/;"	e	enum:__anon72
SFE_AMBIGUOUS_SEEK	common.h	/^	SFE_AMBIGUOUS_SEEK,$/;"	e	enum:__anon72
SFE_AU_EMBED_BAD_LEN	common.h	/^	SFE_AU_EMBED_BAD_LEN,$/;"	e	enum:__anon72
SFE_AU_NO_DOTSND	common.h	/^	SFE_AU_NO_DOTSND,$/;"	e	enum:__anon72
SFE_AU_UNKNOWN_FORMAT	common.h	/^	SFE_AU_UNKNOWN_FORMAT,$/;"	e	enum:__anon72
SFE_AVR_X	avr.c	31;"	d	file:
SFE_BAD_BROADCAST_INFO_SIZE	common.h	/^	SFE_BAD_BROADCAST_INFO_SIZE,$/;"	e	enum:__anon72
SFE_BAD_BROADCAST_INFO_TOO_BIG	common.h	/^	SFE_BAD_BROADCAST_INFO_TOO_BIG,$/;"	e	enum:__anon72
SFE_BAD_COMMAND_PARAM	common.h	/^	SFE_BAD_COMMAND_PARAM,$/;"	e	enum:__anon72
SFE_BAD_ENDIAN	common.h	/^	SFE_BAD_ENDIAN,$/;"	e	enum:__anon72
SFE_BAD_FILE	common.h	/^	SFE_BAD_FILE,$/;"	e	enum:__anon72
SFE_BAD_FILE_PTR	common.h	/^	SFE_BAD_FILE_PTR,$/;"	e	enum:__anon72
SFE_BAD_FILE_READ	common.h	/^	SFE_BAD_FILE_READ,$/;"	e	enum:__anon72
SFE_BAD_INT_PTR	common.h	/^	SFE_BAD_INT_PTR,$/;"	e	enum:__anon72
SFE_BAD_MODE_RW	common.h	/^	SFE_BAD_MODE_RW,$/;"	e	enum:__anon72
SFE_BAD_OFFSET	common.h	/^	SFE_BAD_OFFSET,$/;"	e	enum:__anon72
SFE_BAD_OPEN_FORMAT	common.h	/^	SFE_BAD_OPEN_FORMAT			= SF_ERR_UNRECOGNISED_FORMAT,$/;"	e	enum:__anon72
SFE_BAD_OPEN_MODE	common.h	/^	SFE_BAD_OPEN_MODE,$/;"	e	enum:__anon72
SFE_BAD_READ_ALIGN	common.h	/^	SFE_BAD_READ_ALIGN,$/;"	e	enum:__anon72
SFE_BAD_SEEK	common.h	/^	SFE_BAD_SEEK,$/;"	e	enum:__anon72
SFE_BAD_SF_INCOMPLETE	common.h	/^	SFE_BAD_SF_INCOMPLETE,$/;"	e	enum:__anon72
SFE_BAD_SF_INFO	common.h	/^	SFE_BAD_SF_INFO,$/;"	e	enum:__anon72
SFE_BAD_SF_INFO_PTR	common.h	/^	SFE_BAD_SF_INFO_PTR,$/;"	e	enum:__anon72
SFE_BAD_SNDFILE_PTR	common.h	/^	SFE_BAD_SNDFILE_PTR,$/;"	e	enum:__anon72
SFE_BAD_STAT_SIZE	common.h	/^	SFE_BAD_STAT_SIZE,$/;"	e	enum:__anon72
SFE_BAD_VIRTUAL_IO	common.h	/^	SFE_BAD_VIRTUAL_IO,$/;"	e	enum:__anon72
SFE_BAD_WRITE_ALIGN	common.h	/^	SFE_BAD_WRITE_ALIGN,$/;"	e	enum:__anon72
SFE_CAF_BAD_PEAK	caf.c	71;"	d	file:
SFE_CAF_NOT_CAF	caf.c	69;"	d	file:
SFE_CAF_NO_DESC	caf.c	70;"	d	file:
SFE_CHANNEL_COUNT	common.h	/^	SFE_CHANNEL_COUNT,$/;"	e	enum:__anon72
SFE_CHANNEL_COUNT_ZERO	common.h	/^	SFE_CHANNEL_COUNT_ZERO,$/;"	e	enum:__anon72
SFE_CMD_HAS_DATA	common.h	/^	SFE_CMD_HAS_DATA,$/;"	e	enum:__anon72
SFE_DITHER_BAD_PTR	dither.c	56;"	d	file:
SFE_DITHER_BAD_TYPE	dither.c	57;"	d	file:
SFE_DWD_BAND_BIT_WIDTH	dwd.c	46;"	d	file:
SFE_DWD_COMPRESSION	dwd.c	47;"	d	file:
SFE_DWD_NO_DWD	dwd.c	45;"	d	file:
SFE_DWVW_BAD_BITWIDTH	common.h	/^	SFE_DWVW_BAD_BITWIDTH,$/;"	e	enum:__anon72
SFE_FLAC_BAD_HEADER	common.h	/^	SFE_FLAC_BAD_HEADER,$/;"	e	enum:__anon72
SFE_FLAC_BAD_SAMPLE_RATE	common.h	/^	SFE_FLAC_BAD_SAMPLE_RATE,$/;"	e	enum:__anon72
SFE_FLAC_INIT_DECODER	common.h	/^	SFE_FLAC_INIT_DECODER,$/;"	e	enum:__anon72
SFE_FLAC_LOST_SYNC	common.h	/^	SFE_FLAC_LOST_SYNC,$/;"	e	enum:__anon72
SFE_FLAC_NEW_DECODER	common.h	/^	SFE_FLAC_NEW_DECODER,$/;"	e	enum:__anon72
SFE_FLAC_UNKOWN_ERROR	common.h	/^	SFE_FLAC_UNKOWN_ERROR,$/;"	e	enum:__anon72
SFE_G72X_NOT_MONO	common.h	/^	SFE_G72X_NOT_MONO,$/;"	e	enum:__anon72
SFE_HTK_BAD_FILE_LEN	htk.c	34;"	d	file:
SFE_HTK_NOT_WAVEFORM	htk.c	35;"	d	file:
SFE_HTK_NO_PIPE	common.h	/^	SFE_HTK_NO_PIPE,$/;"	e	enum:__anon72
SFE_INTERLEAVE_MODE	common.h	/^	SFE_INTERLEAVE_MODE,$/;"	e	enum:__anon72
SFE_INTERLEAVE_READ	common.h	/^	SFE_INTERLEAVE_READ,$/;"	e	enum:__anon72
SFE_INTERLEAVE_SEEK	common.h	/^	SFE_INTERLEAVE_SEEK,$/;"	e	enum:__anon72
SFE_INTERNAL	common.h	/^	SFE_INTERNAL,$/;"	e	enum:__anon72
SFE_IRCAM_BAD_CHANNELS	common.h	/^	SFE_IRCAM_BAD_CHANNELS,$/;"	e	enum:__anon72
SFE_IRCAM_NO_MARKER	common.h	/^	SFE_IRCAM_NO_MARKER,$/;"	e	enum:__anon72
SFE_IRCAM_UNKNOWN_FORMAT	common.h	/^	SFE_IRCAM_UNKNOWN_FORMAT,$/;"	e	enum:__anon72
SFE_MALFORMED_FILE	common.h	/^	SFE_MALFORMED_FILE			= SF_ERR_MALFORMED_FILE,$/;"	e	enum:__anon72
SFE_MALLOC_FAILED	common.h	/^	SFE_MALLOC_FAILED,$/;"	e	enum:__anon72
SFE_MAT4_BAD_NAME	common.h	/^	SFE_MAT4_BAD_NAME,$/;"	e	enum:__anon72
SFE_MAT4_NO_SAMPLERATE	common.h	/^	SFE_MAT4_NO_SAMPLERATE,$/;"	e	enum:__anon72
SFE_MAT5_BAD_ENDIAN	common.h	/^	SFE_MAT5_BAD_ENDIAN,$/;"	e	enum:__anon72
SFE_MAT5_NO_BLOCK	common.h	/^	SFE_MAT5_NO_BLOCK,$/;"	e	enum:__anon72
SFE_MAT5_SAMPLE_RATE	common.h	/^	SFE_MAT5_SAMPLE_RATE,$/;"	e	enum:__anon72
SFE_MAX_ERROR	common.h	/^	SFE_MAX_ERROR			\/* This must be last in list. *\/$/;"	e	enum:__anon72
SFE_MPC_NO_MARKER	mpc2k.c	49;"	d	file:
SFE_NIST_BAD_ENCODING	common.h	/^	SFE_NIST_BAD_ENCODING,$/;"	e	enum:__anon72
SFE_NIST_BAD_HEADER	common.h	/^	SFE_NIST_BAD_HEADER,$/;"	e	enum:__anon72
SFE_NIST_CRLF_CONVERISON	common.h	/^	SFE_NIST_CRLF_CONVERISON,$/;"	e	enum:__anon72
SFE_NOT_READMODE	common.h	/^	SFE_NOT_READMODE,$/;"	e	enum:__anon72
SFE_NOT_SEEKABLE	common.h	/^	SFE_NOT_SEEKABLE,$/;"	e	enum:__anon72
SFE_NOT_WRITEMODE	common.h	/^	SFE_NOT_WRITEMODE,$/;"	e	enum:__anon72
SFE_NO_EMBEDDED_RDWR	common.h	/^	SFE_NO_EMBEDDED_RDWR,$/;"	e	enum:__anon72
SFE_NO_EMBED_SUPPORT	common.h	/^	SFE_NO_EMBED_SUPPORT,$/;"	e	enum:__anon72
SFE_NO_ERROR	common.h	/^{	SFE_NO_ERROR				= SF_ERR_NO_ERROR,$/;"	e	enum:__anon72
SFE_NO_PIPE_WRITE	common.h	/^	SFE_NO_PIPE_WRITE,$/;"	e	enum:__anon72
SFE_OPEN_FAILED	common.h	/^	SFE_OPEN_FAILED,$/;"	e	enum:__anon72
SFE_OPEN_PIPE_RDWR	common.h	/^	SFE_OPEN_PIPE_RDWR,$/;"	e	enum:__anon72
SFE_PAF_NO_MARKER	common.h	/^	SFE_PAF_NO_MARKER,$/;"	e	enum:__anon72
SFE_PAF_SHORT_HEADER	common.h	/^	SFE_PAF_SHORT_HEADER,$/;"	e	enum:__anon72
SFE_PAF_UNKNOWN_FORMAT	common.h	/^	SFE_PAF_UNKNOWN_FORMAT,$/;"	e	enum:__anon72
SFE_PAF_VERSION	common.h	/^	SFE_PAF_VERSION,$/;"	e	enum:__anon72
SFE_PVF_BAD_BITWIDTH	common.h	/^	SFE_PVF_BAD_BITWIDTH,$/;"	e	enum:__anon72
SFE_PVF_BAD_HEADER	common.h	/^	SFE_PVF_BAD_HEADER,$/;"	e	enum:__anon72
SFE_PVF_NO_PVF1	common.h	/^	SFE_PVF_NO_PVF1,$/;"	e	enum:__anon72
SFE_RAW_BAD_BITWIDTH	common.h	/^	SFE_RAW_BAD_BITWIDTH,$/;"	e	enum:__anon72
SFE_RAW_BAD_FORMAT	common.h	/^	SFE_RAW_BAD_FORMAT,$/;"	e	enum:__anon72
SFE_RAW_READ_BAD_SPEC	common.h	/^	SFE_RAW_READ_BAD_SPEC,$/;"	e	enum:__anon72
SFE_RDWR_BAD_HEADER	common.h	/^	SFE_RDWR_BAD_HEADER,$/;"	e	enum:__anon72
SFE_RDWR_POSITION	common.h	/^	SFE_RDWR_POSITION,$/;"	e	enum:__anon72
SFE_RF64_NOT_RF64	common.h	/^	SFE_RF64_NOT_RF64,$/;"	e	enum:__anon72
SFE_SD2_BAD_DATA_LENGTH	common.h	/^	SFE_SD2_BAD_DATA_LENGTH,$/;"	e	enum:__anon72
SFE_SD2_BAD_DATA_OFFSET	common.h	/^	SFE_SD2_BAD_DATA_OFFSET,$/;"	e	enum:__anon72
SFE_SD2_BAD_MAP_LENGTH	common.h	/^	SFE_SD2_BAD_MAP_LENGTH,$/;"	e	enum:__anon72
SFE_SD2_BAD_MAP_OFFSET	common.h	/^	SFE_SD2_BAD_MAP_OFFSET,$/;"	e	enum:__anon72
SFE_SD2_BAD_RSRC	common.h	/^	SFE_SD2_BAD_RSRC,$/;"	e	enum:__anon72
SFE_SD2_BAD_SAMPLE_SIZE	common.h	/^	SFE_SD2_BAD_SAMPLE_SIZE,$/;"	e	enum:__anon72
SFE_SD2_FD_DISALLOWED	common.h	/^	SFE_SD2_FD_DISALLOWED,$/;"	e	enum:__anon72
SFE_SDS_BAD_BIT_WIDTH	common.h	/^	SFE_SDS_BAD_BIT_WIDTH,$/;"	e	enum:__anon72
SFE_SDS_NOT_SDS	common.h	/^	SFE_SDS_NOT_SDS,$/;"	e	enum:__anon72
SFE_SEEK_FAILED	common.h	/^	SFE_SEEK_FAILED,$/;"	e	enum:__anon72
SFE_STR_BAD_STRING	common.h	/^	SFE_STR_BAD_STRING,$/;"	e	enum:__anon72
SFE_STR_BAD_TYPE	common.h	/^	SFE_STR_BAD_TYPE,$/;"	e	enum:__anon72
SFE_STR_MAX_COUNT	common.h	/^	SFE_STR_MAX_COUNT,$/;"	e	enum:__anon72
SFE_STR_MAX_DATA	common.h	/^	SFE_STR_MAX_DATA,$/;"	e	enum:__anon72
SFE_STR_NOT_WRITE	common.h	/^	SFE_STR_NOT_WRITE,$/;"	e	enum:__anon72
SFE_STR_NO_ADD_END	common.h	/^	SFE_STR_NO_ADD_END,$/;"	e	enum:__anon72
SFE_STR_NO_SUPPORT	common.h	/^	SFE_STR_NO_SUPPORT,$/;"	e	enum:__anon72
SFE_STR_WEIRD	common.h	/^	SFE_STR_WEIRD,$/;"	e	enum:__anon72
SFE_SVX_BAD_COMP	common.h	/^	SFE_SVX_BAD_COMP,$/;"	e	enum:__anon72
SFE_SVX_BAD_NAME_LENGTH	common.h	/^	SFE_SVX_BAD_NAME_LENGTH,$/;"	e	enum:__anon72
SFE_SVX_NO_BODY	common.h	/^	SFE_SVX_NO_BODY,$/;"	e	enum:__anon72
SFE_SVX_NO_DATA	common.h	/^	SFE_SVX_NO_DATA,$/;"	e	enum:__anon72
SFE_SVX_NO_FORM	common.h	/^	SFE_SVX_NO_FORM,$/;"	e	enum:__anon72
SFE_SYSTEM	common.h	/^	SFE_SYSTEM					= SF_ERR_SYSTEM,$/;"	e	enum:__anon72
SFE_UNIMPLEMENTED	common.h	/^	SFE_UNIMPLEMENTED,$/;"	e	enum:__anon72
SFE_UNKNOWN_FORMAT	common.h	/^	SFE_UNKNOWN_FORMAT,$/;"	e	enum:__anon72
SFE_UNSUPPORTED_ENCODING	common.h	/^	SFE_UNSUPPORTED_ENCODING	= SF_ERR_UNSUPPORTED_ENCODING,$/;"	e	enum:__anon72
SFE_VOC_BAD_FORMAT	common.h	/^	SFE_VOC_BAD_FORMAT,$/;"	e	enum:__anon72
SFE_VOC_BAD_MARKER	common.h	/^	SFE_VOC_BAD_MARKER,$/;"	e	enum:__anon72
SFE_VOC_BAD_SECTIONS	common.h	/^	SFE_VOC_BAD_SECTIONS,$/;"	e	enum:__anon72
SFE_VOC_BAD_VERSION	common.h	/^	SFE_VOC_BAD_VERSION,$/;"	e	enum:__anon72
SFE_VOC_MULTI_PARAM	common.h	/^	SFE_VOC_MULTI_PARAM,$/;"	e	enum:__anon72
SFE_VOC_MULTI_SAMPLERATE	common.h	/^	SFE_VOC_MULTI_SAMPLERATE,$/;"	e	enum:__anon72
SFE_VOC_MULTI_SECTION	common.h	/^	SFE_VOC_MULTI_SECTION,$/;"	e	enum:__anon72
SFE_VOC_NO_CREATIVE	common.h	/^	SFE_VOC_NO_CREATIVE,$/;"	e	enum:__anon72
SFE_VOC_NO_PIPE	common.h	/^	SFE_VOC_NO_PIPE,$/;"	e	enum:__anon72
SFE_VOC_SECTION_COUNT	common.h	/^	SFE_VOC_SECTION_COUNT,$/;"	e	enum:__anon72
SFE_VORBIS_ENCODER_BUG	common.h	/^	SFE_VORBIS_ENCODER_BUG,$/;"	e	enum:__anon72
SFE_W64_64_BIT	common.h	/^	SFE_W64_64_BIT,$/;"	e	enum:__anon72
SFE_W64_ADPCM_CHANNELS	common.h	/^	SFE_W64_ADPCM_CHANNELS,$/;"	e	enum:__anon72
SFE_W64_ADPCM_NOT4BIT	common.h	/^	SFE_W64_ADPCM_NOT4BIT,$/;"	e	enum:__anon72
SFE_W64_GSM610_FORMAT	common.h	/^	SFE_W64_GSM610_FORMAT,$/;"	e	enum:__anon72
SFE_W64_NO_DATA	common.h	/^	SFE_W64_NO_DATA,$/;"	e	enum:__anon72
SFE_W64_NO_RIFF	common.h	/^	SFE_W64_NO_RIFF,$/;"	e	enum:__anon72
SFE_W64_NO_WAVE	common.h	/^	SFE_W64_NO_WAVE,$/;"	e	enum:__anon72
SFE_WAV_ADPCM_CHANNELS	common.h	/^	SFE_WAV_ADPCM_CHANNELS,$/;"	e	enum:__anon72
SFE_WAV_ADPCM_NOT4BIT	common.h	/^	SFE_WAV_ADPCM_NOT4BIT,$/;"	e	enum:__anon72
SFE_WAV_BAD_BLOCKALIGN	common.h	/^	SFE_WAV_BAD_BLOCKALIGN,$/;"	e	enum:__anon72
SFE_WAV_BAD_FACT	common.h	/^	SFE_WAV_BAD_FACT,$/;"	e	enum:__anon72
SFE_WAV_BAD_FMT	common.h	/^	SFE_WAV_BAD_FMT,$/;"	e	enum:__anon72
SFE_WAV_BAD_FORMAT	common.h	/^	SFE_WAV_BAD_FORMAT,$/;"	e	enum:__anon72
SFE_WAV_BAD_LIST	common.h	/^	SFE_WAV_BAD_LIST,$/;"	e	enum:__anon72
SFE_WAV_BAD_PEAK	common.h	/^	SFE_WAV_BAD_PEAK,$/;"	e	enum:__anon72
SFE_WAV_FMT_SHORT	common.h	/^	SFE_WAV_FMT_SHORT,$/;"	e	enum:__anon72
SFE_WAV_GSM610_FORMAT	common.h	/^	SFE_WAV_GSM610_FORMAT,$/;"	e	enum:__anon72
SFE_WAV_NO_DATA	common.h	/^	SFE_WAV_NO_DATA,$/;"	e	enum:__anon72
SFE_WAV_NO_FMT	common.h	/^	SFE_WAV_NO_FMT,$/;"	e	enum:__anon72
SFE_WAV_NO_RIFF	common.h	/^	SFE_WAV_NO_RIFF,$/;"	e	enum:__anon72
SFE_WAV_NO_WAVE	common.h	/^	SFE_WAV_NO_WAVE,$/;"	e	enum:__anon72
SFE_WAV_PEAK_B4_FMT	common.h	/^	SFE_WAV_PEAK_B4_FMT,$/;"	e	enum:__anon72
SFE_WAV_UNKNOWN_CHUNK	common.h	/^	SFE_WAV_UNKNOWN_CHUNK,$/;"	e	enum:__anon72
SFE_WAV_WVPK_DATA	common.h	/^	SFE_WAV_WVPK_DATA,$/;"	e	enum:__anon72
SFE_WRONG_SEEK	common.h	/^	SFE_WRONG_SEEK,$/;"	e	enum:__anon72
SFE_WVE_NOT_WVE	common.h	/^	SFE_WVE_NOT_WVE,$/;"	e	enum:__anon72
SFE_WVE_NO_PIPE	common.h	/^	SFE_WVE_NO_PIPE,$/;"	e	enum:__anon72
SFE_XI_BAD_HEADER	common.h	/^	SFE_XI_BAD_HEADER,$/;"	e	enum:__anon72
SFE_XI_EXCESS_SAMPLES	common.h	/^	SFE_XI_EXCESS_SAMPLES,$/;"	e	enum:__anon72
SFE_XI_NO_PIPE	common.h	/^	SFE_XI_NO_PIPE,$/;"	e	enum:__anon72
SFE_ZERO_MAJOR_FORMAT	common.h	/^	SFE_ZERO_MAJOR_FORMAT,$/;"	e	enum:__anon72
SFE_ZERO_MINOR_FORMAT	common.h	/^	SFE_ZERO_MINOR_FORMAT,$/;"	e	enum:__anon72
SFM_MASK	common.h	151;"	d
SFM_RDWR	sndfile.h	/^	SFM_RDWR	= 0x30,$/;"	e	enum:__anon49
SFM_READ	sndfile.h	/^	SFM_READ	= 0x10,$/;"	e	enum:__anon49
SFM_UNMASK	common.h	152;"	d
SFM_WRITE	sndfile.h	/^	SFM_WRITE	= 0x20,$/;"	e	enum:__anon49
SFX_MARKER	aiff.c	54;"	d	file:
SF_AMBISONIC_B_FORMAT	sndfile.h	/^	SF_AMBISONIC_B_FORMAT	= 0x41$/;"	e	enum:__anon49
SF_AMBISONIC_NONE	sndfile.h	/^	SF_AMBISONIC_NONE		= 0x40,$/;"	e	enum:__anon49
SF_ASSERT	common.h	116;"	d
SF_BROADCAST_INFO_512	test_broadcast_var.c	/^typedef SF_BROADCAST_INFO_VAR (BCAST_MAX) SF_BROADCAST_INFO_512 ;$/;"	t	file:
SF_BROADCAST_INFO_VAR	sndfile.h	439;"	d
SF_BUFFER_LEN	common.h	73;"	d
SF_CHANNEL_MAP_AMBISONIC_B_W	sndfile.h	/^	SF_CHANNEL_MAP_AMBISONIC_B_W,$/;"	e	enum:__anon51
SF_CHANNEL_MAP_AMBISONIC_B_X	sndfile.h	/^	SF_CHANNEL_MAP_AMBISONIC_B_X,$/;"	e	enum:__anon51
SF_CHANNEL_MAP_AMBISONIC_B_Y	sndfile.h	/^	SF_CHANNEL_MAP_AMBISONIC_B_Y,$/;"	e	enum:__anon51
SF_CHANNEL_MAP_AMBISONIC_B_Z	sndfile.h	/^	SF_CHANNEL_MAP_AMBISONIC_B_Z,$/;"	e	enum:__anon51
SF_CHANNEL_MAP_CENTER	sndfile.h	/^	SF_CHANNEL_MAP_CENTER,					\/* Apple calls this 'Center' *\/$/;"	e	enum:__anon51
SF_CHANNEL_MAP_FRONT_CENTER	sndfile.h	/^	SF_CHANNEL_MAP_FRONT_CENTER,$/;"	e	enum:__anon51
SF_CHANNEL_MAP_FRONT_LEFT	sndfile.h	/^	SF_CHANNEL_MAP_FRONT_LEFT,$/;"	e	enum:__anon51
SF_CHANNEL_MAP_FRONT_LEFT_OF_CENTER	sndfile.h	/^	SF_CHANNEL_MAP_FRONT_LEFT_OF_CENTER,	\/* Apple calls this 'Left Center' *\/$/;"	e	enum:__anon51
SF_CHANNEL_MAP_FRONT_RIGHT	sndfile.h	/^	SF_CHANNEL_MAP_FRONT_RIGHT,$/;"	e	enum:__anon51
SF_CHANNEL_MAP_FRONT_RIGHT_OF_CENTER	sndfile.h	/^	SF_CHANNEL_MAP_FRONT_RIGHT_OF_CENTER,	\/* Apple calls this 'Right Center *\/$/;"	e	enum:__anon51
SF_CHANNEL_MAP_INVALID	sndfile.h	/^{	SF_CHANNEL_MAP_INVALID = 0,$/;"	e	enum:__anon51
SF_CHANNEL_MAP_LEFT	sndfile.h	/^	SF_CHANNEL_MAP_LEFT,					\/* Apple calls this 'Left' *\/$/;"	e	enum:__anon51
SF_CHANNEL_MAP_LFE	sndfile.h	/^	SF_CHANNEL_MAP_LFE,						\/* Apple calls this 'LFEScreen', Msft calls this 'Low Frequency'  *\/$/;"	e	enum:__anon51
SF_CHANNEL_MAP_MAX	sndfile.h	/^	SF_CHANNEL_MAP_MAX$/;"	e	enum:__anon51
SF_CHANNEL_MAP_MONO	sndfile.h	/^	SF_CHANNEL_MAP_MONO = 1,$/;"	e	enum:__anon51
SF_CHANNEL_MAP_REAR_CENTER	sndfile.h	/^	SF_CHANNEL_MAP_REAR_CENTER,				\/* Apple calls this 'Center Surround', Msft calls this 'Back Center' *\/$/;"	e	enum:__anon51
SF_CHANNEL_MAP_REAR_LEFT	sndfile.h	/^	SF_CHANNEL_MAP_REAR_LEFT,				\/* Apple calls this 'Left Surround', Msft calls this 'Back Left' *\/$/;"	e	enum:__anon51
SF_CHANNEL_MAP_REAR_RIGHT	sndfile.h	/^	SF_CHANNEL_MAP_REAR_RIGHT,				\/* Apple calls this 'Right Surround', Msft calls this 'Back Right' *\/$/;"	e	enum:__anon51
SF_CHANNEL_MAP_RIGHT	sndfile.h	/^	SF_CHANNEL_MAP_RIGHT,					\/* Apple calls this 'Right' *\/$/;"	e	enum:__anon51
SF_CHANNEL_MAP_SIDE_LEFT	sndfile.h	/^	SF_CHANNEL_MAP_SIDE_LEFT,				\/* Apple calls this 'Left Surround Direct' *\/$/;"	e	enum:__anon51
SF_CHANNEL_MAP_SIDE_RIGHT	sndfile.h	/^	SF_CHANNEL_MAP_SIDE_RIGHT,				\/* Apple calls this 'Right Surround Direct' *\/$/;"	e	enum:__anon51
SF_CHANNEL_MAP_TOP_CENTER	sndfile.h	/^	SF_CHANNEL_MAP_TOP_CENTER,				\/* Apple calls this 'Top Center Surround' *\/$/;"	e	enum:__anon51
SF_CHANNEL_MAP_TOP_FRONT_CENTER	sndfile.h	/^	SF_CHANNEL_MAP_TOP_FRONT_CENTER,		\/* Apple calls this 'Vertical Height Center' *\/$/;"	e	enum:__anon51
SF_CHANNEL_MAP_TOP_FRONT_LEFT	sndfile.h	/^	SF_CHANNEL_MAP_TOP_FRONT_LEFT,			\/* Apple calls this 'Vertical Height Left' *\/$/;"	e	enum:__anon51
SF_CHANNEL_MAP_TOP_FRONT_RIGHT	sndfile.h	/^	SF_CHANNEL_MAP_TOP_FRONT_RIGHT,			\/* Apple calls this 'Vertical Height Right' *\/$/;"	e	enum:__anon51
SF_CHANNEL_MAP_TOP_REAR_CENTER	sndfile.h	/^	SF_CHANNEL_MAP_TOP_REAR_CENTER,			\/* Apple and MS call this 'Top Back Center' *\/$/;"	e	enum:__anon51
SF_CHANNEL_MAP_TOP_REAR_LEFT	sndfile.h	/^	SF_CHANNEL_MAP_TOP_REAR_LEFT,			\/* Apple and MS call this 'Top Back Left' *\/$/;"	e	enum:__anon51
SF_CHANNEL_MAP_TOP_REAR_RIGHT	sndfile.h	/^	SF_CHANNEL_MAP_TOP_REAR_RIGHT,			\/* Apple and MS call this 'Top Back Right' *\/$/;"	e	enum:__anon51
SF_CHARS_SIGNED	pcm.c	/^	SF_CHARS_SIGNED		= 200,$/;"	e	enum:__anon5	file:
SF_CHARS_UNSIGNED	pcm.c	/^	SF_CHARS_UNSIGNED	= 201$/;"	e	enum:__anon5	file:
SF_CODEC	common.h	128;"	d
SF_CONTAINER	common.h	127;"	d
SF_COUNT_MAX	G72x/Makefile	/^SF_COUNT_MAX = 0x7FFFFFFFFFFFFFFFLL$/;"	m
SF_COUNT_MAX	GSM610/Makefile	/^SF_COUNT_MAX = 0x7FFFFFFFFFFFFFFFLL$/;"	m
SF_COUNT_MAX	Makefile	/^SF_COUNT_MAX = 0x7FFFFFFFFFFFFFFFLL$/;"	m
SF_COUNT_MAX	config.h	216;"	d
SF_COUNT_MAX	sndfile.h	315;"	d
SF_COUNT_MAX	sndfile.h	318;"	d
SF_DITHER_INFO	sndfile.h	/^} SF_DITHER_INFO ;$/;"	t	typeref:struct:__anon54
SF_EMBED_FILE_INFO	sndfile.h	/^} SF_EMBED_FILE_INFO ;$/;"	t	typeref:struct:__anon55
SF_ENDIAN	common.h	129;"	d
SF_ENDIAN_BIG	sndfile.h	/^	SF_ENDIAN_BIG			= 0x20000000,	\/* Force big endian-ness. *\/$/;"	e	enum:__anon46
SF_ENDIAN_CPU	sndfile.h	/^	SF_ENDIAN_CPU			= 0x30000000,	\/* Force CPU endian-ness. *\/$/;"	e	enum:__anon46
SF_ENDIAN_FILE	sndfile.h	/^	SF_ENDIAN_FILE			= 0x00000000,	\/* Default file endian-ness. *\/$/;"	e	enum:__anon46
SF_ENDIAN_LITTLE	sndfile.h	/^	SF_ENDIAN_LITTLE		= 0x10000000,	\/* Force little endian-ness. *\/$/;"	e	enum:__anon46
SF_ERR_MALFORMED_FILE	sndfile.h	/^	SF_ERR_MALFORMED_FILE		= 3,$/;"	e	enum:__anon50
SF_ERR_NO_ERROR	sndfile.h	/^{	SF_ERR_NO_ERROR				= 0,$/;"	e	enum:__anon50
SF_ERR_SYSTEM	sndfile.h	/^	SF_ERR_SYSTEM				= 2,$/;"	e	enum:__anon50
SF_ERR_UNRECOGNISED_FORMAT	sndfile.h	/^	SF_ERR_UNRECOGNISED_FORMAT	= 1,$/;"	e	enum:__anon50
SF_ERR_UNSUPPORTED_ENCODING	sndfile.h	/^	SF_ERR_UNSUPPORTED_ENCODING	= 4$/;"	e	enum:__anon50
SF_FALSE	sndfile.h	/^	SF_FALSE	= 0,$/;"	e	enum:__anon49
SF_FILENAME_LEN	common.h	74;"	d
SF_FORMAT_AIFF	sndfile.h	/^	SF_FORMAT_AIFF			= 0x020000,		\/* Apple\/SGI AIFF format (big endian). *\/$/;"	e	enum:__anon46
SF_FORMAT_ALAW	sndfile.h	/^	SF_FORMAT_ALAW			= 0x0011,		\/* A-Law encoded. *\/$/;"	e	enum:__anon46
SF_FORMAT_AU	sndfile.h	/^	SF_FORMAT_AU			= 0x030000,		\/* Sun\/NeXT AU format (big endian). *\/$/;"	e	enum:__anon46
SF_FORMAT_AVR	sndfile.h	/^	SF_FORMAT_AVR			= 0x120000,		\/* Audio Visual Research *\/$/;"	e	enum:__anon46
SF_FORMAT_CAF	sndfile.h	/^	SF_FORMAT_CAF			= 0x180000,		\/* Core Audio File format *\/$/;"	e	enum:__anon46
SF_FORMAT_DOUBLE	sndfile.h	/^	SF_FORMAT_DOUBLE		= 0x0007,		\/* 64 bit float data *\/$/;"	e	enum:__anon46
SF_FORMAT_DPCM_16	sndfile.h	/^	SF_FORMAT_DPCM_16		= 0x0051,		\/* 16 bit differential PCM (XI only) *\/$/;"	e	enum:__anon46
SF_FORMAT_DPCM_8	sndfile.h	/^	SF_FORMAT_DPCM_8		= 0x0050,		\/* 8 bit differential PCM (XI only) *\/$/;"	e	enum:__anon46
SF_FORMAT_DWD	common.h	/^	SF_FORMAT_DWD			= 0x4040000,		\/* DiamondWare Digirized *\/$/;"	e	enum:__anon62
SF_FORMAT_DWVW_12	sndfile.h	/^	SF_FORMAT_DWVW_12		= 0x0040, 		\/* 12 bit Delta Width Variable Word encoding. *\/$/;"	e	enum:__anon46
SF_FORMAT_DWVW_16	sndfile.h	/^	SF_FORMAT_DWVW_16		= 0x0041, 		\/* 16 bit Delta Width Variable Word encoding. *\/$/;"	e	enum:__anon46
SF_FORMAT_DWVW_24	sndfile.h	/^	SF_FORMAT_DWVW_24		= 0x0042, 		\/* 24 bit Delta Width Variable Word encoding. *\/$/;"	e	enum:__anon46
SF_FORMAT_DWVW_N	sndfile.h	/^	SF_FORMAT_DWVW_N		= 0x0043, 		\/* N bit Delta Width Variable Word encoding. *\/$/;"	e	enum:__anon46
SF_FORMAT_ENDMASK	sndfile.h	/^	SF_FORMAT_ENDMASK		= 0x30000000$/;"	e	enum:__anon46
SF_FORMAT_FLAC	sndfile.h	/^	SF_FORMAT_FLAC			= 0x170000,		\/* FLAC lossless file format *\/$/;"	e	enum:__anon46
SF_FORMAT_FLOAT	sndfile.h	/^	SF_FORMAT_FLOAT			= 0x0006,		\/* 32 bit float data *\/$/;"	e	enum:__anon46
SF_FORMAT_G721_32	sndfile.h	/^	SF_FORMAT_G721_32		= 0x0030,		\/* 32kbs G721 ADPCM encoding. *\/$/;"	e	enum:__anon46
SF_FORMAT_G723_24	sndfile.h	/^	SF_FORMAT_G723_24		= 0x0031,		\/* 24kbs G723 ADPCM encoding. *\/$/;"	e	enum:__anon46
SF_FORMAT_G723_40	sndfile.h	/^	SF_FORMAT_G723_40		= 0x0032,		\/* 40kbs G723 ADPCM encoding. *\/$/;"	e	enum:__anon46
SF_FORMAT_GSM610	sndfile.h	/^	SF_FORMAT_GSM610		= 0x0020,		\/* GSM 6.10 encoding. *\/$/;"	e	enum:__anon46
SF_FORMAT_HTK	sndfile.h	/^	SF_FORMAT_HTK			= 0x100000,		\/* HMM Tool Kit format *\/$/;"	e	enum:__anon46
SF_FORMAT_IMA_ADPCM	sndfile.h	/^	SF_FORMAT_IMA_ADPCM		= 0x0012,		\/* IMA ADPCM. *\/$/;"	e	enum:__anon46
SF_FORMAT_INFO	sndfile.h	/^} SF_FORMAT_INFO ;$/;"	t	typeref:struct:__anon52
SF_FORMAT_IRCAM	sndfile.h	/^	SF_FORMAT_IRCAM			= 0x0A0000,		\/* Berkeley\/IRCAM\/CARL *\/$/;"	e	enum:__anon46
SF_FORMAT_KRZ	common.h	/^	SF_FORMAT_KRZ			= 0x40E0000,		\/* Kurzweil sampler file *\/$/;"	e	enum:__anon62
SF_FORMAT_MAT4	sndfile.h	/^	SF_FORMAT_MAT4			= 0x0C0000,		\/* Matlab (tm) V4.2 \/ GNU Octave 2.0 *\/$/;"	e	enum:__anon46
SF_FORMAT_MAT5	sndfile.h	/^	SF_FORMAT_MAT5			= 0x0D0000,		\/* Matlab (tm) V5.0 \/ GNU Octave 2.1 *\/$/;"	e	enum:__anon46
SF_FORMAT_MPC2K	sndfile.h	/^	SF_FORMAT_MPC2K			= 0x210000,		\/* Akai MPC 2000 sampler *\/$/;"	e	enum:__anon46
SF_FORMAT_MS_ADPCM	sndfile.h	/^	SF_FORMAT_MS_ADPCM		= 0x0013,		\/* Microsoft ADPCM. *\/$/;"	e	enum:__anon46
SF_FORMAT_NIST	sndfile.h	/^	SF_FORMAT_NIST			= 0x070000,		\/* Sphere NIST format. *\/$/;"	e	enum:__anon46
SF_FORMAT_OGG	sndfile.h	/^	SF_FORMAT_OGG			= 0x200000,		\/* Xiph OGG container *\/$/;"	e	enum:__anon46
SF_FORMAT_PAF	sndfile.h	/^	SF_FORMAT_PAF			= 0x050000,		\/* Ensoniq PARIS file format. *\/$/;"	e	enum:__anon46
SF_FORMAT_PCM_16	sndfile.h	/^	SF_FORMAT_PCM_16		= 0x0002,		\/* Signed 16 bit data *\/$/;"	e	enum:__anon46
SF_FORMAT_PCM_24	sndfile.h	/^	SF_FORMAT_PCM_24		= 0x0003,		\/* Signed 24 bit data *\/$/;"	e	enum:__anon46
SF_FORMAT_PCM_32	sndfile.h	/^	SF_FORMAT_PCM_32		= 0x0004,		\/* Signed 32 bit data *\/$/;"	e	enum:__anon46
SF_FORMAT_PCM_N	common.h	/^	SF_FORMAT_PCM_N			= 0x1030$/;"	e	enum:__anon62
SF_FORMAT_PCM_S8	sndfile.h	/^	SF_FORMAT_PCM_S8		= 0x0001,		\/* Signed 8 bit data *\/$/;"	e	enum:__anon46
SF_FORMAT_PCM_U8	sndfile.h	/^	SF_FORMAT_PCM_U8		= 0x0005,		\/* Unsigned 8 bit data (WAV and RAW only) *\/$/;"	e	enum:__anon46
SF_FORMAT_PVF	sndfile.h	/^	SF_FORMAT_PVF			= 0x0E0000,		\/* Portable Voice Format *\/$/;"	e	enum:__anon46
SF_FORMAT_RAW	sndfile.h	/^	SF_FORMAT_RAW			= 0x040000,		\/* RAW PCM data. *\/$/;"	e	enum:__anon46
SF_FORMAT_REX	common.h	/^	SF_FORMAT_REX			= 0x40A0000,		\/* Propellorheads Rex\/Rcy *\/$/;"	e	enum:__anon62
SF_FORMAT_REX2	common.h	/^	SF_FORMAT_REX2			= 0x40D0000,		\/* Propellorheads Rex2 *\/$/;"	e	enum:__anon62
SF_FORMAT_RF64	sndfile.h	/^	SF_FORMAT_RF64			= 0x220000,		\/* RF64 WAV file *\/$/;"	e	enum:__anon46
SF_FORMAT_SD2	sndfile.h	/^	SF_FORMAT_SD2			= 0x160000,		\/* Sound Designer 2 *\/$/;"	e	enum:__anon46
SF_FORMAT_SDS	sndfile.h	/^	SF_FORMAT_SDS			= 0x110000,		\/* Midi Sample Dump Standard *\/$/;"	e	enum:__anon46
SF_FORMAT_SHN	common.h	/^	SF_FORMAT_SHN			= 0x4110000,		\/* Shorten. *\/$/;"	e	enum:__anon62
SF_FORMAT_SUBMASK	sndfile.h	/^	SF_FORMAT_SUBMASK		= 0x0000FFFF,$/;"	e	enum:__anon46
SF_FORMAT_SVX	sndfile.h	/^	SF_FORMAT_SVX			= 0x060000,		\/* Amiga IFF \/ SVX8 \/ SV16 format. *\/$/;"	e	enum:__anon46
SF_FORMAT_SVX_EXP	common.h	/^	SF_FORMAT_SVX_EXP		= 0x1021, 		\/* SVX Exponential Delta encoding. *\/$/;"	e	enum:__anon62
SF_FORMAT_SVX_FIB	common.h	/^	SF_FORMAT_SVX_FIB		= 0x1020, 		\/* SVX Fibonacci Delta encoding. *\/$/;"	e	enum:__anon62
SF_FORMAT_TXW	common.h	/^	SF_FORMAT_TXW			= 0x4030000,		\/* Yamaha TX16 sampler file *\/$/;"	e	enum:__anon62
SF_FORMAT_TYPEMASK	sndfile.h	/^	SF_FORMAT_TYPEMASK		= 0x0FFF0000,$/;"	e	enum:__anon46
SF_FORMAT_ULAW	sndfile.h	/^	SF_FORMAT_ULAW			= 0x0010,		\/* U-Law encoded. *\/$/;"	e	enum:__anon46
SF_FORMAT_VOC	sndfile.h	/^	SF_FORMAT_VOC			= 0x080000,		\/* VOC files. *\/$/;"	e	enum:__anon46
SF_FORMAT_VORBIS	sndfile.h	/^	SF_FORMAT_VORBIS		= 0x0060,		\/* Xiph Vorbis encoding. *\/$/;"	e	enum:__anon46
SF_FORMAT_VOX_ADPCM	sndfile.h	/^	SF_FORMAT_VOX_ADPCM		= 0x0021,		\/* OKI \/ Dialogix ADPCM *\/$/;"	e	enum:__anon46
SF_FORMAT_W64	sndfile.h	/^	SF_FORMAT_W64			= 0x0B0000,		\/* Sonic Foundry's 64 bit RIFF\/WAV *\/$/;"	e	enum:__anon46
SF_FORMAT_WAV	sndfile.h	/^	SF_FORMAT_WAV			= 0x010000,		\/* Microsoft WAV format (little endian default). *\/$/;"	e	enum:__anon46
SF_FORMAT_WAVEX	sndfile.h	/^	SF_FORMAT_WAVEX			= 0x130000,		\/* MS WAVE with WAVEFORMATEX *\/$/;"	e	enum:__anon46
SF_FORMAT_WMA	common.h	/^	SF_FORMAT_WMA			= 0x4100000,		\/* Windows Media Audio. *\/$/;"	e	enum:__anon62
SF_FORMAT_WVE	sndfile.h	/^	SF_FORMAT_WVE			= 0x190000,		\/* Psion WVE format *\/$/;"	e	enum:__anon46
SF_FORMAT_XI	sndfile.h	/^	SF_FORMAT_XI			= 0x0F0000,		\/* Fasttracker 2 Extended Instrument *\/$/;"	e	enum:__anon46
SF_HEADER_LEN	common.h	78;"	d
SF_INFO	sndfile.h	/^struct SF_INFO$/;"	s
SF_INFO	sndfile.h	/^typedef	struct SF_INFO SF_INFO ;$/;"	t	typeref:struct:SF_INFO
SF_INSTRUMENT	sndfile.h	/^} SF_INSTRUMENT ;$/;"	t	typeref:struct:__anon57
SF_LOOP_ALTERNATING	sndfile.h	/^	SF_LOOP_ALTERNATING$/;"	e	enum:__anon56
SF_LOOP_BACKWARD	sndfile.h	/^	SF_LOOP_BACKWARD,$/;"	e	enum:__anon56
SF_LOOP_FORWARD	sndfile.h	/^	SF_LOOP_FORWARD,$/;"	e	enum:__anon56
SF_LOOP_INFO	sndfile.h	/^} SF_LOOP_INFO ;$/;"	t	typeref:struct:__anon59
SF_LOOP_NONE	sndfile.h	/^	SF_LOOP_NONE = 800,$/;"	e	enum:__anon56
SF_MAX	common.h	108;"	d
SF_MAX	common.h	96;"	d
SF_MAX_CHANNELS	common.h	113;"	d
SF_MAX_STRINGS	common.h	76;"	d
SF_MIN	common.h	102;"	d
SF_MIN	common.h	109;"	d
SF_PEAK_END	common.h	/^	SF_PEAK_END			= 43,$/;"	e	enum:__anon61
SF_PEAK_START	common.h	/^	SF_PEAK_START		= 42,$/;"	e	enum:__anon61
SF_PLATFORM_S64	common.h	42;"	d
SF_PLATFORM_S64	common.h	44;"	d
SF_PLATFORM_S64	common.h	46;"	d
SF_PLATFORM_S64	common.h	48;"	d
SF_PRIVATE	common.h	/^} SF_PRIVATE ;$/;"	t	typeref:struct:sf_private_tag
SF_SCALE_MAX	common.h	/^	SF_SCALE_MAX		= 52,$/;"	e	enum:__anon61
SF_SCALE_MIN	common.h	/^	SF_SCALE_MIN		= 53,$/;"	e	enum:__anon61
SF_STR_ALBUM	sndfile.h	/^	SF_STR_ALBUM					= 0x07,$/;"	e	enum:__anon48
SF_STR_ALLOW_END	common.h	/^	SF_STR_ALLOW_END	= 0x0200,$/;"	e	enum:__anon61
SF_STR_ALLOW_START	common.h	/^	SF_STR_ALLOW_START	= 0x0100,$/;"	e	enum:__anon61
SF_STR_ARTIST	sndfile.h	/^	SF_STR_ARTIST					= 0x04,$/;"	e	enum:__anon48
SF_STR_BUFFER_LEN	common.h	77;"	d
SF_STR_COMMENT	sndfile.h	/^	SF_STR_COMMENT					= 0x05,$/;"	e	enum:__anon48
SF_STR_COPYRIGHT	sndfile.h	/^	SF_STR_COPYRIGHT				= 0x02,$/;"	e	enum:__anon48
SF_STR_DATE	sndfile.h	/^	SF_STR_DATE						= 0x06,$/;"	e	enum:__anon48
SF_STR_FIRST	sndfile.h	234;"	d
SF_STR_GENRE	sndfile.h	/^	SF_STR_GENRE					= 0x10$/;"	e	enum:__anon48
SF_STR_LAST	sndfile.h	235;"	d
SF_STR_LICENSE	sndfile.h	/^	SF_STR_LICENSE					= 0x08,$/;"	e	enum:__anon48
SF_STR_LOCATE_END	common.h	/^	SF_STR_LOCATE_END	= 0x0800,$/;"	e	enum:__anon61
SF_STR_LOCATE_START	common.h	/^	SF_STR_LOCATE_START	= 0x0400,$/;"	e	enum:__anon61
SF_STR_SOFTWARE	sndfile.h	/^	SF_STR_SOFTWARE					= 0x03,$/;"	e	enum:__anon48
SF_STR_TITLE	sndfile.h	/^{	SF_STR_TITLE					= 0x01,$/;"	e	enum:__anon48
SF_STR_TRACKNUMBER	sndfile.h	/^	SF_STR_TRACKNUMBER				= 0x09,$/;"	e	enum:__anon48
SF_SYSERR_LEN	common.h	75;"	d
SF_TRUE	sndfile.h	/^	SF_TRUE		= 1,$/;"	e	enum:__anon49
SF_VIRTUAL_IO	sndfile.h	/^struct SF_VIRTUAL_IO$/;"	s
SF_VIRTUAL_IO	sndfile.h	/^typedef	struct SF_VIRTUAL_IO SF_VIRTUAL_IO ;$/;"	t	typeref:struct:SF_VIRTUAL_IO
SHARED_VERSION_INFO	G72x/Makefile	/^SHARED_VERSION_INFO = 1:23:0$/;"	m
SHARED_VERSION_INFO	GSM610/Makefile	/^SHARED_VERSION_INFO = 1:23:0$/;"	m
SHARED_VERSION_INFO	Makefile	/^SHARED_VERSION_INFO = 1:23:0$/;"	m
SHELL	G72x/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	GSM610/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	Makefile	/^SHELL = \/bin\/sh$/;"	m
SHLIB_VERSION_ARG	G72x/Makefile	/^SHLIB_VERSION_ARG = -Wl,--version-script=$(srcdir)\/Symbols.gnu-binutils$/;"	m
SHLIB_VERSION_ARG	GSM610/Makefile	/^SHLIB_VERSION_ARG = -Wl,--version-script=$(srcdir)\/Symbols.gnu-binutils$/;"	m
SHLIB_VERSION_ARG	Makefile	/^SHLIB_VERSION_ARG = -Wl,--version-script=$(srcdir)\/Symbols.gnu-binutils$/;"	m
SIGNAL_MAXVAL	G72x/g72x_test.c	144;"	d	file:
SIGNED_SIZEOF	common.h	89;"	d
SINF_MARKER	rx2.c	59;"	d	file:
SIZEOF_AIFC_COMM	aiff.c	100;"	d	file:
SIZEOF_AIFC_COMM_MIN	aiff.c	99;"	d	file:
SIZEOF_AIFF_COMM	aiff.c	98;"	d	file:
SIZEOF_DOUBLE	config.h	219;"	d
SIZEOF_FLOAT	config.h	222;"	d
SIZEOF_INST_CHUNK	aiff.c	102;"	d	file:
SIZEOF_INT	config.h	225;"	d
SIZEOF_INT64_T	config.h	228;"	d
SIZEOF_LOFF_T	config.h	231;"	d
SIZEOF_LONG	config.h	234;"	d
SIZEOF_LONG_LONG	config.h	237;"	d
SIZEOF_OFF64_T	config.h	240;"	d
SIZEOF_OFF_T	config.h	243;"	d
SIZEOF_SF_COUNT_T	G72x/Makefile	/^SIZEOF_SF_COUNT_T = 8$/;"	m
SIZEOF_SF_COUNT_T	GSM610/Makefile	/^SIZEOF_SF_COUNT_T = 8$/;"	m
SIZEOF_SF_COUNT_T	Makefile	/^SIZEOF_SF_COUNT_T = 8$/;"	m
SIZEOF_SF_COUNT_T	config.h	246;"	d
SIZEOF_SHORT	config.h	249;"	d
SIZEOF_SIZE_T	config.h	252;"	d
SIZEOF_SSIZE_T	config.h	255;"	d
SIZEOF_SSND_CHUNK	aiff.c	101;"	d	file:
SIZEOF_TRIBYTE	pcm.c	33;"	d	file:
SIZEOF_VOIDP	config.h	258;"	d
SIZEOF_WCHAR_T	config.h	261;"	d
SLCE_MARKER	rx2.c	51;"	d	file:
SLCL_MARKER	rx2.c	50;"	d	file:
SNDFILE	sndfile.h	/^typedef	struct SNDFILE_tag	SNDFILE ;$/;"	t	typeref:struct:SNDFILE_tag
SNDFILE_1	sndfile.h	30;"	d
SNDFILE_COMMON_H	common.h	20;"	d
SNDFILE_H	sndfile.h	27;"	d
SNDFILE_HH	sndfile.hh	53;"	d
SNDFILE_MAGICK	sndfile.c	29;"	d	file:
SNDFILE_ref	sndfile.hh	/^		struct SNDFILE_ref$/;"	s	class:SndfileHandle
SNDFILE_ref	sndfile.hh	/^SndfileHandle::SNDFILE_ref::SNDFILE_ref (void)$/;"	f	class:SndfileHandle::SNDFILE_ref
SNDIO_LIBS	G72x/Makefile	/^SNDIO_LIBS = $/;"	m
SNDIO_LIBS	GSM610/Makefile	/^SNDIO_LIBS = $/;"	m
SNDIO_LIBS	Makefile	/^SNDIO_LIBS = $/;"	m
SND_DATA_BLOCKS	voc.c	/^} SND_DATA_BLOCKS ;$/;"	t	typeref:struct:__anon97	file:
SOUN_MARKER	wve.c	36;"	d	file:
SOURCES	G72x/Makefile	/^SOURCES = $(libg72x_la_SOURCES) $(g72x_test_SOURCES)$/;"	m
SOURCES	GSM610/Makefile	/^SOURCES = $(libgsm_la_SOURCES)$/;"	m
SOURCES	Makefile	/^SOURCES = $(libcommon_la_SOURCES) $(libsndfile_la_SOURCES) \\$/;"	m
SQLITE3_CFLAGS	G72x/Makefile	/^SQLITE3_CFLAGS = $/;"	m
SQLITE3_CFLAGS	GSM610/Makefile	/^SQLITE3_CFLAGS = $/;"	m
SQLITE3_CFLAGS	Makefile	/^SQLITE3_CFLAGS = $/;"	m
SQLITE3_LIBS	G72x/Makefile	/^SQLITE3_LIBS = $/;"	m
SQLITE3_LIBS	GSM610/Makefile	/^SQLITE3_LIBS = $/;"	m
SQLITE3_LIBS	Makefile	/^SQLITE3_LIBS = $/;"	m
SSND_CHUNK	aiff.c	/^} SSND_CHUNK ;$/;"	t	typeref:struct:__anon10	file:
SSND_MARKER	aiff.c	42;"	d	file:
STDC_HEADERS	config.h	264;"	d
STEP	GSM610/long_term.c	200;"	d	file:
STEP	GSM610/long_term.c	201;"	d	file:
STEP	GSM610/long_term.c	364;"	d	file:
STEP	GSM610/long_term.c	365;"	d	file:
STEP	GSM610/long_term.c	539;"	d	file:
STEP	GSM610/long_term.c	540;"	d	file:
STEP	GSM610/long_term.c	761;"	d	file:
STEP	GSM610/long_term.c	762;"	d	file:
STEP	GSM610/long_term.c	863;"	d	file:
STEP	GSM610/long_term.c	864;"	d	file:
STEP	GSM610/lpc.c	294;"	d	file:
STEP	GSM610/lpc.c	295;"	d	file:
STEP	GSM610/lpc.c	313;"	d	file:
STEP	GSM610/lpc.c	91;"	d	file:
STEP	GSM610/rpe.c	153;"	d	file:
STEP	GSM610/rpe.c	154;"	d	file:
STEP	GSM610/rpe.c	57;"	d	file:
STEP	GSM610/rpe.c	58;"	d	file:
STEP	GSM610/short_term.c	47;"	d	file:
STEP	GSM610/short_term.c	48;"	d	file:
STEP_A	GSM610/long_term.c	378;"	d	file:
STEP_A	GSM610/long_term.c	402;"	d	file:
STEP_A	GSM610/long_term.c	553;"	d	file:
STEP_A	GSM610/long_term.c	577;"	d	file:
STEP_A	GSM610/long_term.c	775;"	d	file:
STEP_B	GSM610/long_term.c	379;"	d	file:
STEP_B	GSM610/long_term.c	403;"	d	file:
STEP_B	GSM610/long_term.c	554;"	d	file:
STEP_B	GSM610/long_term.c	578;"	d	file:
STEP_B	GSM610/long_term.c	776;"	d	file:
STEP_C	GSM610/long_term.c	380;"	d	file:
STEP_C	GSM610/long_term.c	404;"	d	file:
STEP_C	GSM610/long_term.c	555;"	d	file:
STEP_C	GSM610/long_term.c	579;"	d	file:
STEP_C	GSM610/long_term.c	777;"	d	file:
STEP_D	GSM610/long_term.c	381;"	d	file:
STEP_D	GSM610/long_term.c	405;"	d	file:
STEP_D	GSM610/long_term.c	556;"	d	file:
STEP_D	GSM610/long_term.c	580;"	d	file:
STEP_D	GSM610/long_term.c	778;"	d	file:
STEP_E	GSM610/long_term.c	382;"	d	file:
STEP_E	GSM610/long_term.c	406;"	d	file:
STEP_E	GSM610/long_term.c	557;"	d	file:
STEP_E	GSM610/long_term.c	581;"	d	file:
STEP_E	GSM610/long_term.c	779;"	d	file:
STEP_F	GSM610/long_term.c	383;"	d	file:
STEP_F	GSM610/long_term.c	407;"	d	file:
STEP_F	GSM610/long_term.c	558;"	d	file:
STEP_F	GSM610/long_term.c	582;"	d	file:
STEP_F	GSM610/long_term.c	780;"	d	file:
STEP_G	GSM610/long_term.c	384;"	d	file:
STEP_G	GSM610/long_term.c	408;"	d	file:
STEP_G	GSM610/long_term.c	559;"	d	file:
STEP_G	GSM610/long_term.c	583;"	d	file:
STEP_G	GSM610/long_term.c	781;"	d	file:
STEP_H	GSM610/long_term.c	385;"	d	file:
STEP_H	GSM610/long_term.c	409;"	d	file:
STEP_H	GSM610/long_term.c	560;"	d	file:
STEP_H	GSM610/long_term.c	584;"	d	file:
STEP_H	GSM610/long_term.c	782;"	d	file:
STR	wav_w64.c	528;"	d	file:
STRINGS_DEBUG	strings.c	28;"	d	file:
STRIP	G72x/Makefile	/^STRIP = strip$/;"	m
STRIP	GSM610/Makefile	/^STRIP = strip$/;"	m
STRIP	Makefile	/^STRIP = strip$/;"	m
STR_DATA	common.h	/^} STR_DATA ;$/;"	t	typeref:struct:__anon65
STR_MARKER	macos.c	29;"	d	file:
STR_MARKER	sd2.c	50;"	d	file:
STR_PAIRS	ogg.c	/^} STR_PAIRS ;$/;"	t	typeref:struct:__anon79	file:
STR_RSRC	sd2.c	/^} STR_RSRC ;$/;"	t	typeref:struct:__anon92	file:
SUBDIRS	Makefile	/^SUBDIRS = GSM610 G72x$/;"	m
SUMLIST_HASH16	w64.c	83;"	d	file:
SV16_MARKER	svx.c	37;"	d	file:
SVX8_MARKER	svx.c	36;"	d	file:
SYMBOL_FILES	Makefile	/^SYMBOL_FILES = Symbols.gnu-binutils Symbols.darwin libsndfile-1.def Symbols.os2 Symbols.static$/;"	m
S_IRGRP	sf_unistd.h	39;"	d
S_IROTH	sf_unistd.h	45;"	d
S_IRUSR	sf_unistd.h	26;"	d
S_IRWXG	sf_unistd.h	38;"	d
S_IRWXO	sf_unistd.h	44;"	d
S_IRWXU	sf_unistd.h	22;"	d
S_ISFIFO	sf_unistd.h	50;"	d
S_ISREG	sf_unistd.h	54;"	d
S_IWGRP	sf_unistd.h	40;"	d
S_IWOTH	sf_unistd.h	46;"	d
S_IWUSR	sf_unistd.h	30;"	d
S_IXGRP	sf_unistd.h	41;"	d
S_IXOTH	sf_unistd.h	47;"	d
S_IXUSR	sf_unistd.h	34;"	d
Sd2a_MARKER	sd2.c	46;"	d	file:
Sd2f_MARKER	sd2.c	45;"	d	file:
Short_term_analysis_filtering	GSM610/short_term.c	/^static void Short_term_analysis_filtering ($/;"	f	file:
Short_term_synthesis_filtering	GSM610/short_term.c	/^static void Short_term_synthesis_filtering ($/;"	f	file:
SndfileErrors	sndfile.c	/^ErrorStruct SndfileErrors [] =$/;"	v	file:
SndfileHandle	sndfile.hh	/^			SndfileHandle (void) : p (NULL) {} ;$/;"	f	class:SndfileHandle
SndfileHandle	sndfile.hh	/^SndfileHandle::SndfileHandle (LPCWSTR wpath, int mode, int fmt, int chans, int srate)$/;"	f	class:SndfileHandle
SndfileHandle	sndfile.hh	/^SndfileHandle::SndfileHandle (const SndfileHandle &orig)$/;"	f	class:SndfileHandle
SndfileHandle	sndfile.hh	/^SndfileHandle::SndfileHandle (const char *path, int mode, int fmt, int chans, int srate)$/;"	f	class:SndfileHandle
SndfileHandle	sndfile.hh	/^SndfileHandle::SndfileHandle (int fd, bool close_desc, int mode, int fmt, int chans, int srate)$/;"	f	class:SndfileHandle
SndfileHandle	sndfile.hh	/^SndfileHandle::SndfileHandle (std::string const & path, int mode, int fmt, int chans, int srate)$/;"	f	class:SndfileHandle
SndfileHandle	sndfile.hh	/^class SndfileHandle$/;"	c
TRSH_MARKER	rx2.c	54;"	d	file:
TWOBIT_MARKER	avr.c	28;"	d	file:
TXW_DATA_OFFSET	txw.c	52;"	d	file:
TXW_HEADER	txw.c	/^} TXW_HEADER ;$/;"	t	typeref:struct:__anon60	file:
TXW_LOOPED	txw.c	54;"	d	file:
TXW_NO_LOOP	txw.c	55;"	d	file:
TYPEOF_SF_COUNT_T	G72x/Makefile	/^TYPEOF_SF_COUNT_T = loff_t$/;"	m
TYPEOF_SF_COUNT_T	GSM610/Makefile	/^TYPEOF_SF_COUNT_T = loff_t$/;"	m
TYPEOF_SF_COUNT_T	Makefile	/^TYPEOF_SF_COUNT_T = loff_t$/;"	m
TYPEOF_SF_COUNT_T	config.h	267;"	d
Transformation_to_Log_Area_Ratios	GSM610/lpc.c	/^static void Transformation_to_Log_Area_Ratios ($/;"	f	file:
ULAW_MARKER	aiff.c	75;"	d	file:
UNUSED	common.h	60;"	d
UNUSED	common.h	62;"	d
UNUSED	common.h	64;"	d
UNUSED	dwd.c	/^dwd_close	(SF_PRIVATE * UNUSED (psf))$/;"	f	file:
UNUSED	flac.c	/^flac_command (SF_PRIVATE * UNUSED (psf), int UNUSED (command), void * UNUSED (data), int UNUSED (datasize))$/;"	f	file:
UNUSED	macbinary3.c	/^macbinary3_open (SF_PRIVATE * UNUSED (psf))$/;"	f
UNUSED	pvf.c	/^pvf_close	(SF_PRIVATE * UNUSED (psf))$/;"	f	file:
UNUSED	xi.c	/^xi_close	(SF_PRIVATE * UNUSED (psf))$/;"	f	file:
USE_FLOAT_MUL	GSM610/gsm610_priv.h	11;"	d
USE_WINDOWS_API	config.h	270;"	d
V	G72x/Makefile	/^V = @$/;"	m
V	GSM610/Makefile	/^V = @$/;"	m
V	Makefile	/^V = @$/;"	m
VALIDATE_SNDFILE_AND_ASSIGN_PSF	sndfile.c	283;"	d	file:
VERSION	G72x/Makefile	/^VERSION = 1.0.23$/;"	m
VERSION	GSM610/Makefile	/^VERSION = 1.0.23$/;"	m
VERSION	Makefile	/^VERSION = 1.0.23$/;"	m
VERSION	config.h	273;"	d
VHDR_CHUNK	svx.c	/^} VHDR_CHUNK ;$/;"	t	typeref:struct:__anon1	file:
VHDR_MARKER	svx.c	38;"	d	file:
VOC_ASCII	voc.c	/^	VOC_ASCII			= 5,$/;"	e	enum:__anon96	file:
VOC_DATA	voc.c	/^} VOC_DATA ;$/;"	t	typeref:struct:__anon98	file:
VOC_END_REPEAT	voc.c	/^	VOC_END_REPEAT		= 7,$/;"	e	enum:__anon96	file:
VOC_EXTENDED	voc.c	/^	VOC_EXTENDED		= 8,$/;"	e	enum:__anon96	file:
VOC_EXTENDED_II	voc.c	/^	VOC_EXTENDED_II		= 9$/;"	e	enum:__anon96	file:
VOC_MARKER	voc.c	/^	VOC_MARKER			= 4,$/;"	e	enum:__anon96	file:
VOC_MAX_SECTIONS	voc.c	42;"	d	file:
VOC_REPEAT	voc.c	/^	VOC_REPEAT			= 6,$/;"	e	enum:__anon96	file:
VOC_SILENCE	voc.c	/^	VOC_SILENCE			= 3,$/;"	e	enum:__anon96	file:
VOC_SOUND_CONTINUE	voc.c	/^	VOC_SOUND_CONTINUE	= 2,$/;"	e	enum:__anon96	file:
VOC_SOUND_DATA	voc.c	/^	VOC_SOUND_DATA		= 1,$/;"	e	enum:__anon96	file:
VOC_TERMINATOR	voc.c	/^{	VOC_TERMINATOR		= 0,$/;"	e	enum:__anon96	file:
VORBISENC_CFLAGS	G72x/Makefile	/^VORBISENC_CFLAGS = $/;"	m
VORBISENC_CFLAGS	GSM610/Makefile	/^VORBISENC_CFLAGS = $/;"	m
VORBISENC_CFLAGS	Makefile	/^VORBISENC_CFLAGS = $/;"	m
VORBISENC_LIBS	G72x/Makefile	/^VORBISENC_LIBS = $/;"	m
VORBISENC_LIBS	GSM610/Makefile	/^VORBISENC_LIBS = $/;"	m
VORBISENC_LIBS	Makefile	/^VORBISENC_LIBS = $/;"	m
VORBIS_CFLAGS	G72x/Makefile	/^VORBIS_CFLAGS = $/;"	m
VORBIS_CFLAGS	GSM610/Makefile	/^VORBIS_CFLAGS = $/;"	m
VORBIS_CFLAGS	Makefile	/^VORBIS_CFLAGS = $/;"	m
VORBIS_LIBS	G72x/Makefile	/^VORBIS_LIBS = $/;"	m
VORBIS_LIBS	GSM610/Makefile	/^VORBIS_LIBS = $/;"	m
VORBIS_LIBS	Makefile	/^VORBIS_LIBS = $/;"	m
VORBIS_PRIVATE	ogg.c	/^} VORBIS_PRIVATE ;$/;"	t	typeref:struct:__anon81	file:
VOTE	audio_detect.c	/^} VOTE ;$/;"	t	typeref:struct:__anon21	file:
WARN_UNUSED	common.h	68;"	d
WARN_UNUSED	common.h	70;"	d
WAV49	GSM610/gsm610_priv.h	13;"	d
WAVE_FORMAT_ALAW	wav_w64.h	/^	WAVE_FORMAT_ALAW					= 0x0006,		\/* Microsoft Corporation *\/$/;"	e	enum:__anon23
WAVE_FORMAT_ANTEX_ADPCME	wav_w64.h	/^	WAVE_FORMAT_ANTEX_ADPCME			= 0x0033, 		\/* Antex Electronics Corporation *\/$/;"	e	enum:__anon23
WAVE_FORMAT_APTX	wav_w64.h	/^	WAVE_FORMAT_APTX					= 0x0025,		\/* Audio Processing Technology *\/$/;"	e	enum:__anon23
WAVE_FORMAT_AUDIOFILE_AF10	wav_w64.h	/^	WAVE_FORMAT_AUDIOFILE_AF10			= 0x0026,		\/* Audiofile, Inc. *\/$/;"	e	enum:__anon23
WAVE_FORMAT_AUDIOFILE_AF36	wav_w64.h	/^	WAVE_FORMAT_AUDIOFILE_AF36			= 0x0024,		\/* Audiofile, Inc. *\/$/;"	e	enum:__anon23
WAVE_FORMAT_BZV_DIGITAL	wav_w64.h	/^	WAVE_FORMAT_BZV_DIGITAL				= 0x0400,		\/* Brooktree Corporation *\/$/;"	e	enum:__anon23
WAVE_FORMAT_CANOPUS_ATRAC	wav_w64.h	/^	WAVE_FORMAT_CANOPUS_ATRAC			= 0x0063,		\/* Canopus, Co., Ltd. *\/$/;"	e	enum:__anon23
WAVE_FORMAT_CIRRUS	wav_w64.h	/^	WAVE_FORMAT_CIRRUS					= 0x0060,		\/* Cirrus Logic *\/$/;"	e	enum:__anon23
WAVE_FORMAT_CONTROL_RES_CR10	wav_w64.h	/^	WAVE_FORMAT_CONTROL_RES_CR10		= 0x0037,		\/* Control Resources Limited *\/$/;"	e	enum:__anon23
WAVE_FORMAT_CONTROL_RES_VQLPC	wav_w64.h	/^	WAVE_FORMAT_CONTROL_RES_VQLPC		= 0x0034,		\/* Control Resources Limited *\/$/;"	e	enum:__anon23
WAVE_FORMAT_CREATIVE_ADPCM	wav_w64.h	/^	WAVE_FORMAT_CREATIVE_ADPCM			= 0x0200,		\/* Creative Labs, Inc *\/$/;"	e	enum:__anon23
WAVE_FORMAT_CREATIVE_FASTSPEECH10	wav_w64.h	/^	WAVE_FORMAT_CREATIVE_FASTSPEECH10 	= 0x0203,		\/* Creative Labs, Inc *\/$/;"	e	enum:__anon23
WAVE_FORMAT_CREATIVE_FASTSPEECH8	wav_w64.h	/^	WAVE_FORMAT_CREATIVE_FASTSPEECH8 	= 0x0202,		\/* Creative Labs, Inc *\/$/;"	e	enum:__anon23
WAVE_FORMAT_CU_CODEC	wav_w64.h	/^	WAVE_FORMAT_CU_CODEC				= 0x0019,		\/* Hewlett-Packard Company *\/$/;"	e	enum:__anon23
WAVE_FORMAT_DF_G726	wav_w64.h	/^	WAVE_FORMAT_DF_G726					= 0x0085,		\/* DataFusion Systems (Pty) (Ltd) *\/$/;"	e	enum:__anon23
WAVE_FORMAT_DF_GSM610	wav_w64.h	/^	WAVE_FORMAT_DF_GSM610				= 0x0086,		\/* DataFusion Systems (Pty) (Ltd) *\/$/;"	e	enum:__anon23
WAVE_FORMAT_DIALOGIC_OKI_ADPCM	wav_w64.h	/^	WAVE_FORMAT_DIALOGIC_OKI_ADPCM		= 0x0017,		\/*  Dialogic Corporation  *\/$/;"	e	enum:__anon23
WAVE_FORMAT_DIGIADPCM	wav_w64.h	/^	WAVE_FORMAT_DIGIADPCM				= 0x0036,		\/* DSP Solutions, Inc. *\/$/;"	e	enum:__anon23
WAVE_FORMAT_DIGIFIX	wav_w64.h	/^	WAVE_FORMAT_DIGIFIX					= 0x0016,		\/* DSP Solutions, Inc. *\/$/;"	e	enum:__anon23
WAVE_FORMAT_DIGIREAL	wav_w64.h	/^	WAVE_FORMAT_DIGIREAL				= 0x0035,		\/* DSP Solutions, Inc. *\/$/;"	e	enum:__anon23
WAVE_FORMAT_DIGISTD	wav_w64.h	/^	WAVE_FORMAT_DIGISTD					= 0x0015,		\/* DSP Solutions, Inc. *\/$/;"	e	enum:__anon23
WAVE_FORMAT_DIGITAL_G723	wav_w64.h	/^	WAVE_FORMAT_DIGITAL_G723			= 0x0123,		\/* Digital Equipment Corporation *\/$/;"	e	enum:__anon23
WAVE_FORMAT_DOLBY_AC2	wav_w64.h	/^	WAVE_FORMAT_DOLBY_AC2				= 0x0030,		\/* Dolby Laboratories *\/$/;"	e	enum:__anon23
WAVE_FORMAT_DOLBY_AC3_SPDIF	wav_w64.h	/^	WAVE_FORMAT_DOLBY_AC3_SPDIF			= 0x0092,		\/* Sonic Foundry *\/$/;"	e	enum:__anon23
WAVE_FORMAT_DSAT	wav_w64.h	/^	WAVE_FORMAT_DSAT					= 0x0066,		\/* Microsoft Corporation *\/$/;"	e	enum:__anon23
WAVE_FORMAT_DSAT_DISPLAY	wav_w64.h	/^	WAVE_FORMAT_DSAT_DISPLAY			= 0x0067,		\/* Microsoft Corporation *\/$/;"	e	enum:__anon23
WAVE_FORMAT_DSPGROUP_TRUESPEECH	wav_w64.h	/^	WAVE_FORMAT_DSPGROUP_TRUESPEECH 	= 0x0022,		\/* DSP Group, Inc *\/$/;"	e	enum:__anon23
WAVE_FORMAT_DVM	wav_w64.h	/^	WAVE_FORMAT_DVM						= 0x2000,		\/* FAST Multimedia AG *\/$/;"	e	enum:__anon23
WAVE_FORMAT_ECHOSC1	wav_w64.h	/^	WAVE_FORMAT_ECHOSC1					= 0x0023,		\/* Echo Speech Corporation *\/$/;"	e	enum:__anon23
WAVE_FORMAT_ECHOSC3	wav_w64.h	/^	WAVE_FORMAT_ECHOSC3					= 0x003A,		\/* Echo Speech Corporation *\/$/;"	e	enum:__anon23
WAVE_FORMAT_ESPCM	wav_w64.h	/^	WAVE_FORMAT_ESPCM					= 0x0061,		\/* ESS Technology *\/$/;"	e	enum:__anon23
WAVE_FORMAT_EXTENSIBLE	wav_w64.h	/^	WAVE_FORMAT_EXTENSIBLE				= 0xFFFE$/;"	e	enum:__anon23
WAVE_FORMAT_FM_TOWNS_SND	wav_w64.h	/^	WAVE_FORMAT_FM_TOWNS_SND			= 0x0300,		\/* Fujitsu Corporation *\/$/;"	e	enum:__anon23
WAVE_FORMAT_G721_ADPCM	wav_w64.h	/^	WAVE_FORMAT_G721_ADPCM				= 0x0040,		\/* Antex Electronics Corporation *\/$/;"	e	enum:__anon23
WAVE_FORMAT_G722_ADPCM	wav_w64.h	/^	WAVE_FORMAT_G722_ADPCM				= 0x0065,		\/* APICOM *\/$/;"	e	enum:__anon23
WAVE_FORMAT_G723_ADPCM	wav_w64.h	/^	WAVE_FORMAT_G723_ADPCM				= 0x0014,		\/* Antex Electronics Corporation *\/$/;"	e	enum:__anon23
WAVE_FORMAT_G726_ADPCM	wav_w64.h	/^	WAVE_FORMAT_G726_ADPCM				= 0x0064,		\/* APICOM *\/$/;"	e	enum:__anon23
WAVE_FORMAT_G728_CELP	wav_w64.h	/^	WAVE_FORMAT_G728_CELP				= 0x0041,		\/* Antex Electronics Corporation *\/$/;"	e	enum:__anon23
WAVE_FORMAT_G729A	wav_w64.h	/^	WAVE_FORMAT_G729A					= 0x0083,		\/* AT&T Laboratories *\/$/;"	e	enum:__anon23
WAVE_FORMAT_GSM610	wav_w64.h	/^	WAVE_FORMAT_GSM610					= 0x0031,		\/* Microsoft Corporation *\/$/;"	e	enum:__anon23
WAVE_FORMAT_IBM_CVSD	wav_w64.h	/^	WAVE_FORMAT_IBM_CVSD				= 0x0005,		\/* IBM Corporation *\/$/;"	e	enum:__anon23
WAVE_FORMAT_IEEE_FLOAT	wav_w64.h	/^	WAVE_FORMAT_IEEE_FLOAT				= 0x0003,		\/* Micrososft 32 bit float format *\/$/;"	e	enum:__anon23
WAVE_FORMAT_IMA_ADPCM	wav_w64.h	/^	WAVE_FORMAT_IMA_ADPCM				= 0x0011,		\/* Intel Corporation *\/$/;"	e	enum:__anon23
WAVE_FORMAT_INTERWAV_VSC112	wav_w64.h	/^	WAVE_FORMAT_INTERWAV_VSC112			= 0x7150,		\/* ????? *\/$/;"	e	enum:__anon23
WAVE_FORMAT_IPP_ITU_G_723_1	wav_w64.h	/^	WAVE_FORMAT_IPP_ITU_G_723_1			= 0x7230,		\/* Intel Performance Primitives g723 codec. *\/$/;"	e	enum:__anon23
WAVE_FORMAT_LH_CODEC	wav_w64.h	/^	WAVE_FORMAT_LH_CODEC				= 0x1100,		\/* Lernout & Hauspie *\/$/;"	e	enum:__anon23
WAVE_FORMAT_LRC	wav_w64.h	/^	WAVE_FORMAT_LRC						= 0x0028,		\/* Merging Technologies S.A. *\/$/;"	e	enum:__anon23
WAVE_FORMAT_LUCENT_G723	wav_w64.h	/^	WAVE_FORMAT_LUCENT_G723				= 0x0059,		\/* Lucent Technologies *\/$/;"	e	enum:__anon23
WAVE_FORMAT_MEDIASPACE_ADPCM	wav_w64.h	/^	WAVE_FORMAT_MEDIASPACE_ADPCM		= 0x0012,		\/* Videologic *\/$/;"	e	enum:__anon23
WAVE_FORMAT_MEDIAVISION_ADPCM	wav_w64.h	/^	WAVE_FORMAT_MEDIAVISION_ADPCM		= 0x0018,		\/*  Media Vision, Inc. *\/$/;"	e	enum:__anon23
WAVE_FORMAT_MPEG	wav_w64.h	/^	WAVE_FORMAT_MPEG					= 0x0050,		\/* Microsoft Corporation *\/$/;"	e	enum:__anon23
WAVE_FORMAT_MPEGLAYER3	wav_w64.h	/^	WAVE_FORMAT_MPEGLAYER3				= 0x0055,		\/* MPEG 3 Layer 1 *\/$/;"	e	enum:__anon23
WAVE_FORMAT_MSG723	wav_w64.h	/^	WAVE_FORMAT_MSG723					= 0x0042,		\/* Microsoft Corporation *\/$/;"	e	enum:__anon23
WAVE_FORMAT_MSNAUDIO	wav_w64.h	/^	WAVE_FORMAT_MSNAUDIO				= 0x0032,		\/* Microsoft Corporation *\/$/;"	e	enum:__anon23
WAVE_FORMAT_MSRT24	wav_w64.h	/^	WAVE_FORMAT_MSRT24					= 0x0082,		\/* Microsoft Corporation *\/$/;"	e	enum:__anon23
WAVE_FORMAT_MS_ADPCM	ms_adpcm.c	39;"	d	file:
WAVE_FORMAT_MS_ADPCM	wav_w64.h	/^	WAVE_FORMAT_MS_ADPCM				= 0x0002,		\/* Microsoft ADPCM *\/$/;"	e	enum:__anon23
WAVE_FORMAT_MULAW	wav_w64.h	/^	WAVE_FORMAT_MULAW					= 0x0007,		\/* Microsoft Corporation *\/$/;"	e	enum:__anon23
WAVE_FORMAT_MVI_MV12	wav_w64.h	/^	WAVE_FORMAT_MVI_MV12				= 0x0084,		\/* Motion Pixels *\/$/;"	e	enum:__anon23
WAVE_FORMAT_NMS_VBXADPCM	wav_w64.h	/^	WAVE_FORMAT_NMS_VBXADPCM			= 0x0038,		\/* Natural MicroSystems *\/$/;"	e	enum:__anon23
WAVE_FORMAT_NORRIS	wav_w64.h	/^	WAVE_FORMAT_NORRIS					= 0x1400,		\/* Norris Communications, Inc. *\/$/;"	e	enum:__anon23
WAVE_FORMAT_OKI_ADPCM	wav_w64.h	/^	WAVE_FORMAT_OKI_ADPCM				= 0x0010,		\/* OKI *\/$/;"	e	enum:__anon23
WAVE_FORMAT_OLIADPCM	wav_w64.h	/^	WAVE_FORMAT_OLIADPCM				= 0x1001,		\/* Ing C. Olivetti & C., S.p.A. *\/$/;"	e	enum:__anon23
WAVE_FORMAT_OLICELP	wav_w64.h	/^	WAVE_FORMAT_OLICELP					= 0x1002,		\/* Ing C. Olivetti & C., S.p.A. *\/$/;"	e	enum:__anon23
WAVE_FORMAT_OLIGSM	wav_w64.h	/^	WAVE_FORMAT_OLIGSM					= 0x1000,		\/* Ing C. Olivetti & C., S.p.A. *\/$/;"	e	enum:__anon23
WAVE_FORMAT_OLIOPR	wav_w64.h	/^	WAVE_FORMAT_OLIOPR					= 0x1004,		\/* Ing C. Olivetti & C., S.p.A. *\/$/;"	e	enum:__anon23
WAVE_FORMAT_OLISBC	wav_w64.h	/^	WAVE_FORMAT_OLISBC					= 0x1003,		\/* Ing C. Olivetti & C., S.p.A. *\/$/;"	e	enum:__anon23
WAVE_FORMAT_ONLIVE	wav_w64.h	/^	WAVE_FORMAT_ONLIVE					= 0x0089,		\/* OnLive! Technologies, Inc. *\/$/;"	e	enum:__anon23
WAVE_FORMAT_PAC	wav_w64.h	/^	WAVE_FORMAT_PAC						= 0x0053,		\/* InSoft Inc. *\/$/;"	e	enum:__anon23
WAVE_FORMAT_PACKED	wav_w64.h	/^	WAVE_FORMAT_PACKED					= 0x0099,		\/* Studer Professional Audio AG *\/$/;"	e	enum:__anon23
WAVE_FORMAT_PCM	wav_w64.h	/^	WAVE_FORMAT_PCM	 					= 0x0001, 		\/* Microsoft PCM format *\/$/;"	e	enum:__anon23
WAVE_FORMAT_PHILIPS_LPCBB	wav_w64.h	/^	WAVE_FORMAT_PHILIPS_LPCBB			= 0x0098,		\/* Philips Speech Processing *\/$/;"	e	enum:__anon23
WAVE_FORMAT_PROSODY_1612	wav_w64.h	/^	WAVE_FORMAT_PROSODY_1612			= 0x0027,		\/* Aculab plc *\/$/;"	e	enum:__anon23
WAVE_FORMAT_QUARTERDECK	wav_w64.h	/^	WAVE_FORMAT_QUARTERDECK				= 0x0220,		\/* Quarterdeck Corporation *\/$/;"	e	enum:__anon23
WAVE_FORMAT_RHETOREX_ADPCM	wav_w64.h	/^	WAVE_FORMAT_RHETOREX_ADPCM			= 0x0100,		\/* Rhetorex, Inc. *\/$/;"	e	enum:__anon23
WAVE_FORMAT_ROCKWELL_ADPCM	wav_w64.h	/^	WAVE_FORMAT_ROCKWELL_ADPCM			= 0x003B,		\/* Rockwell International *\/$/;"	e	enum:__anon23
WAVE_FORMAT_ROCKWELL_DIGITALK	wav_w64.h	/^	WAVE_FORMAT_ROCKWELL_DIGITALK		= 0x003C, 		\/* Rockwell International *\/$/;"	e	enum:__anon23
WAVE_FORMAT_ROLAND_RDAC	wav_w64.h	/^	WAVE_FORMAT_ROLAND_RDAC				= 0x0039,		\/* Roland *\/$/;"	e	enum:__anon23
WAVE_FORMAT_RT24	wav_w64.h	/^	WAVE_FORMAT_RT24					= 0x0052,		\/* InSoft Inc. *\/$/;"	e	enum:__anon23
WAVE_FORMAT_SBC24	wav_w64.h	/^	WAVE_FORMAT_SBC24					= 0x0091,		\/* Siemens Business Communications Systems *\/$/;"	e	enum:__anon23
WAVE_FORMAT_SIERRA_ADPCM	wav_w64.h	/^	WAVE_FORMAT_SIERRA_ADPCM			= 0x0013,		\/* Sierra Semiconductor Corp *\/$/;"	e	enum:__anon23
WAVE_FORMAT_SOFTSOUND	wav_w64.h	/^	WAVE_FORMAT_SOFTSOUND				= 0x0080,		\/* Softsound, Ltd. *\/$/;"	e	enum:__anon23
WAVE_FORMAT_SONARC	wav_w64.h	/^	WAVE_FORMAT_SONARC					= 0x0021,		\/* Speech Compression *\/$/;"	e	enum:__anon23
WAVE_FORMAT_SOUNDSPACE_MUSICOMPRESS	wav_w64.h	/^	WAVE_FORMAT_SOUNDSPACE_MUSICOMPRESS	= 0x1500,		\/* AT&T Labs, Inc. *\/$/;"	e	enum:__anon23
WAVE_FORMAT_UNKNOWN	wav_w64.h	/^	WAVE_FORMAT_UNKNOWN					= 0x0000,		\/* Microsoft Corporation *\/$/;"	e	enum:__anon23
WAVE_FORMAT_VIVO_G723	wav_w64.h	/^	WAVE_FORMAT_VIVO_G723				= 0x0111,		\/* Vivo Software *\/$/;"	e	enum:__anon23
WAVE_FORMAT_VIVO_SIREN	wav_w64.h	/^	WAVE_FORMAT_VIVO_SIREN				= 0x0112,		\/* Vivo Software *\/$/;"	e	enum:__anon23
WAVE_FORMAT_VME_VMPCM	wav_w64.h	/^	WAVE_FORMAT_VME_VMPCM				= 0x0680,		\/* AT&T Labs, Inc. *\/$/;"	e	enum:__anon23
WAVE_FORMAT_VOXARE_TQ60	wav_w64.h	/^	WAVE_FORMAT_VOXARE_TQ60				= 0x0081,		\/* Voxware Inc. *\/$/;"	e	enum:__anon23
WAVE_FORMAT_VOXWARE	wav_w64.h	/^	WAVE_FORMAT_VOXWARE					= 0x0062,		\/* Voxware Inc *\/$/;"	e	enum:__anon23
WAVE_FORMAT_VOXWARE_AC10	wav_w64.h	/^	WAVE_FORMAT_VOXWARE_AC10			= 0x0071,		\/* Voxware Inc. *\/$/;"	e	enum:__anon23
WAVE_FORMAT_VOXWARE_AC16	wav_w64.h	/^	WAVE_FORMAT_VOXWARE_AC16			= 0x0072,		\/* Voxware Inc. *\/$/;"	e	enum:__anon23
WAVE_FORMAT_VOXWARE_AC20	wav_w64.h	/^	WAVE_FORMAT_VOXWARE_AC20			= 0x0073,		\/* Voxware Inc. *\/$/;"	e	enum:__anon23
WAVE_FORMAT_VOXWARE_AC8	wav_w64.h	/^	WAVE_FORMAT_VOXWARE_AC8				= 0x0070,		\/* Voxware Inc. *\/$/;"	e	enum:__anon23
WAVE_FORMAT_VOXWARE_BYTE_ALIGNED	wav_w64.h	/^	WAVE_FORMAT_VOXWARE_BYTE_ALIGNED	= 0x0069,		\/* Voxware Inc. *\/$/;"	e	enum:__anon23
WAVE_FORMAT_VOXWARE_RT24	wav_w64.h	/^	WAVE_FORMAT_VOXWARE_RT24			= 0x0074,		\/* Voxware Inc. *\/$/;"	e	enum:__anon23
WAVE_FORMAT_VOXWARE_RT29	wav_w64.h	/^	WAVE_FORMAT_VOXWARE_RT29			= 0x0075,		\/* Voxware Inc. *\/$/;"	e	enum:__anon23
WAVE_FORMAT_VOXWARE_RT29HW	wav_w64.h	/^	WAVE_FORMAT_VOXWARE_RT29HW			= 0x0076,		\/* Voxware Inc. *\/$/;"	e	enum:__anon23
WAVE_FORMAT_VOXWARE_TQ40	wav_w64.h	/^	WAVE_FORMAT_VOXWARE_TQ40			= 0x0079,		\/* Voxware Inc. *\/$/;"	e	enum:__anon23
WAVE_FORMAT_VOXWARE_VR12	wav_w64.h	/^	WAVE_FORMAT_VOXWARE_VR12			= 0x0077,		\/* Voxware Inc. *\/$/;"	e	enum:__anon23
WAVE_FORMAT_VOXWARE_VR18	wav_w64.h	/^	WAVE_FORMAT_VOXWARE_VR18			= 0x0078,		\/* Voxware Inc. *\/$/;"	e	enum:__anon23
WAVE_FORMAT_VSELP	wav_w64.h	/^	WAVE_FORMAT_VSELP					= 0x0004,		\/* Compaq Computer Corporation *\/$/;"	e	enum:__anon23
WAVE_FORMAT_XEBEC	wav_w64.h	/^	WAVE_FORMAT_XEBEC					= 0x003D,		\/* Xebec Multimedia Solutions Limited *\/$/;"	e	enum:__anon23
WAVE_FORMAT_YAMAHA_ADPCM	wav_w64.h	/^	WAVE_FORMAT_YAMAHA_ADPCM			= 0x0020,		\/* Yamaha Corporation of America *\/$/;"	e	enum:__anon23
WAVE_FORMAT_ZYXEL_ADPCM	wav_w64.h	/^	WAVE_FORMAT_ZYXEL_ADPCM				= 0x0097,		\/* ZyXEL Communications, Inc. *\/$/;"	e	enum:__anon23
WAVE_MARKER	ms_adpcm.c	34;"	d	file:
WAVE_MARKER	rf64.c	45;"	d	file:
WAVE_MARKER	wav.c	40;"	d	file:
WAV_BEXT_MAX_CHUNK_SIZE	wav.c	100;"	d	file:
WAV_BEXT_MIN_CHUNK_SIZE	wav.c	99;"	d	file:
WAV_FMT	wav_w64.h	/^} WAV_FMT ;$/;"	t	typeref:union:__anon33
WAV_FMT_SIZE20	wav_w64.h	/^} WAV_FMT_SIZE20 ;$/;"	t	typeref:struct:__anon25
WAV_FORMAT_DESC	wav_w64.c	/^} WAV_FORMAT_DESC ;$/;"	t	typeref:struct:__anon4	file:
WAV_PEAK_CHUNK_SIZE	wav.c	98;"	d	file:
WAV_PRIVATE	wav_w64.h	/^} WAV_PRIVATE ;$/;"	t	typeref:struct:__anon35
WAV_W64_GSM610_BLOCKSIZE	wav_w64.h	269;"	d
WAV_W64_GSM610_SAMPLES	wav_w64.h	270;"	d
WAV_W64_H_INCLUDED	wav_w64.h	23;"	d
WIN32_TARGET_DLL	config.h	276;"	d
WIN_RC_VERSION	G72x/Makefile	/^WIN_RC_VERSION = 1,0,23$/;"	m
WIN_RC_VERSION	GSM610/Makefile	/^WIN_RC_VERSION = 1,0,23$/;"	m
WIN_RC_VERSION	Makefile	/^WIN_RC_VERSION = 1,0,23$/;"	m
WIN_VERSION_FILE	Makefile	/^WIN_VERSION_FILE = $/;"	m
WORDS_BIGENDIAN	config.h	279;"	d
Weighting_filter	GSM610/rpe.c	/^static void Weighting_filter ($/;"	f	file:
XI_PRIVATE	xi.c	/^} XI_PRIVATE ;$/;"	t	typeref:struct:__anon84	file:
_FILE_OFFSET_BITS	config.h	282;"	d
_LARGEFILE_SOURCE	config.h	285;"	d
_dqlntab	G72x/g721.c	/^static short	_dqlntab[16] = {-2048, 4, 135, 213, 273, 323, 373, 425,$/;"	v	file:
_dqlntab	G72x/g723_16.c	/^static short   _dqlntab[4] = { 116, 365, 365, 116}; $/;"	v	file:
_dqlntab	G72x/g723_24.c	/^static short	_dqlntab[8] = {-2048, 135, 273, 373, 373, 273, 135, -2048};$/;"	v	file:
_dqlntab	G72x/g723_40.c	/^static short	_dqlntab[32] = {-2048, -66, 28, 104, 169, 224, 274, 318,$/;"	v	file:
_fitab	G72x/g721.c	/^static short	_fitab[16] = {0, 0, 0, 0x200, 0x200, 0x200, 0x600, 0xE00,$/;"	v	file:
_fitab	G72x/g723_16.c	/^static short   _fitab[4] = {0, 0xE00, 0xE00, 0};$/;"	v	file:
_fitab	G72x/g723_24.c	/^static short	_fitab[8] = {0, 0x200, 0x400, 0xE00, 0xE00, 0x400, 0x200, 0};$/;"	v	file:
_fitab	G72x/g723_40.c	/^static short	_fitab[32] = {0, 0, 0, 0, 0, 0x200, 0x200, 0x200,$/;"	v	file:
_whitespace_re	binheader_writef_check.py	/^_whitespace_re = re.compile ("\\s+", re.MULTILINE)$/;"	v
_witab	G72x/g721.c	/^static short	_witab[16] = {-12, 18, 41, 64, 112, 198, 355, 1122,$/;"	v	file:
_witab	G72x/g723_16.c	/^static short   _witab[4] = {-704, 14048, 14048, -704};$/;"	v	file:
_witab	G72x/g723_24.c	/^static short	_witab[8] = {-128, 960, 4384, 18624, 18624, 4384, 960, -128};$/;"	v	file:
_witab	G72x/g723_40.c	/^static short	_witab[32] = {448, 448, 768, 1248, 1280, 1312, 1856, 3200,$/;"	v	file:
a	G72x/g72x_priv.h	/^	short a[2];	\/* Coefficients of pole portion of prediction filter. *\/$/;"	m	struct:g72x_state
aac_MARKER	caf.c	37;"	d	file:
abs_builddir	G72x/Makefile	/^abs_builddir = \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23\/src\/G72x$/;"	m
abs_builddir	GSM610/Makefile	/^abs_builddir = \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23\/src\/GSM610$/;"	m
abs_builddir	Makefile	/^abs_builddir = \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23\/src$/;"	m
abs_srcdir	G72x/Makefile	/^abs_srcdir = \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23\/src\/G72x$/;"	m
abs_srcdir	GSM610/Makefile	/^abs_srcdir = \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23\/src\/GSM610$/;"	m
abs_srcdir	Makefile	/^abs_srcdir = \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23\/src$/;"	m
abs_top_builddir	G72x/Makefile	/^abs_top_builddir = \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23$/;"	m
abs_top_builddir	GSM610/Makefile	/^abs_top_builddir = \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23$/;"	m
abs_top_builddir	Makefile	/^abs_top_builddir = \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23$/;"	m
abs_top_srcdir	G72x/Makefile	/^abs_top_srcdir = \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23$/;"	m
abs_top_srcdir	GSM610/Makefile	/^abs_top_srcdir = \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23$/;"	m
abs_top_srcdir	Makefile	/^abs_top_srcdir = \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23$/;"	m
absolute_byte_offset	flac.c	/^sf_flac_enc_seek_callback (const FLAC__StreamEncoder * UNUSED (encoder), FLAC__uint64 absolute_byte_offset, void *client_data)$/;"	v	file:
absolute_byte_offset	flac.c	/^sf_flac_enc_tell_callback (const FLAC__StreamEncoder *UNUSED (encoder), FLAC__uint64 *absolute_byte_offset, void *client_data)$/;"	v	file:
absolute_byte_offset	flac.c	/^sf_flac_seek_callback (const FLAC__StreamDecoder * UNUSED (decoder), FLAC__uint64 absolute_byte_offset, void *client_data)$/;"	v	file:
absolute_byte_offset	flac.c	/^sf_flac_tell_callback (const FLAC__StreamDecoder * UNUSED (decoder), FLAC__uint64 *absolute_byte_offset, void *client_data)$/;"	v	file:
ac_ct_CC	G72x/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	GSM610/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CXX	G72x/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	GSM610/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_DUMPBIN	G72x/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	GSM610/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	Makefile	/^ac_ct_DUMPBIN = $/;"	m
acid_MARKER	wav.c	62;"	d	file:
add.c	GSM610/add.c	1;"	F
add_clipping	common.h	/^	int				add_clipping ;$/;"	m	struct:sf_private_tag
adpcm_decode	ima_oki_adpcm.c	/^adpcm_decode (IMA_OKI_ADPCM * state, int code)$/;"	f
adpcm_encode	ima_oki_adpcm.c	/^adpcm_encode (IMA_OKI_ADPCM * state, int sample)$/;"	f
adtl_MARKER	wav.c	52;"	d	file:
afsp_MARKER	wav.c	65;"	d	file:
aiff.c	aiff.c	1;"	F
aiff_caf_find_channel_layout_tag	chanmap.c	/^aiff_caf_find_channel_layout_tag (const int *chan_map, int channels)$/;"	f
aiff_caf_of_channel_layout_tag	chanmap.c	/^aiff_caf_of_channel_layout_tag (int tag)$/;"	f
aiff_close	aiff.c	/^aiff_close (SF_PRIVATE *psf)$/;"	f	file:
aiff_command	aiff.c	/^aiff_command (SF_PRIVATE * psf, int command, void * UNUSED (data), int UNUSED (datasize))$/;"	f	file:
aiff_ima_decode_block	ima_adpcm.c	/^aiff_ima_decode_block (SF_PRIVATE *psf, IMA_ADPCM_PRIVATE *pima)$/;"	f	file:
aiff_ima_encode_block	ima_adpcm.c	/^aiff_ima_encode_block (SF_PRIVATE *psf, IMA_ADPCM_PRIVATE *pima)$/;"	f	file:
aiff_ima_init	ima_adpcm.c	/^aiff_ima_init (SF_PRIVATE *psf, int blockalign, int samplesperblock)$/;"	f
aiff_open	aiff.c	/^aiff_open (SF_PRIVATE *psf)$/;"	f
aiff_read_basc_chunk	aiff.c	/^aiff_read_basc_chunk (SF_PRIVATE * psf, int datasize)$/;"	f	file:
aiff_read_chanmap	aiff.c	/^aiff_read_chanmap (SF_PRIVATE * psf, unsigned dword)$/;"	f	file:
aiff_read_comm_chunk	aiff.c	/^aiff_read_comm_chunk (SF_PRIVATE *psf, COMM_CHUNK *comm_fmt)$/;"	f	file:
aiff_read_header	aiff.c	/^aiff_read_header (SF_PRIVATE *psf, COMM_CHUNK *comm_fmt)$/;"	f	file:
aiff_rewrite_header	aiff.c	/^aiff_rewrite_header (SF_PRIVATE *psf, AIFF_PRIVATE * paiff)$/;"	f	file:
aiff_write_header	aiff.c	/^aiff_write_header (SF_PRIVATE *psf, int calc_length)$/;"	f	file:
aiff_write_strings	aiff.c	/^aiff_write_strings (SF_PRIVATE *psf, int location)$/;"	f	file:
aiff_write_tailer	aiff.c	/^aiff_write_tailer (SF_PRIVATE *psf)$/;"	f	file:
alac_MARKER	caf.c	38;"	d	file:
alaw.c	alaw.c	1;"	F
alaw2d_array	alaw.c	/^alaw2d_array (unsigned char *buffer, int count, double *ptr, double normfact)$/;"	f	file:
alaw2f_array	alaw.c	/^alaw2f_array (unsigned char *buffer, int count, float *ptr, float normfact)$/;"	f	file:
alaw2i_array	alaw.c	/^alaw2i_array (unsigned char *buffer, int count, int *ptr)$/;"	f	file:
alaw2s_array	alaw.c	/^alaw2s_array (unsigned char *buffer, int count, short *ptr)$/;"	f	file:
alaw_MARKER	aiff.c	76;"	d	file:
alaw_MARKER	caf.c	39;"	d	file:
alaw_decode	alaw.c	/^short alaw_decode [256] =$/;"	v	file:
alaw_encode	alaw.c	/^unsigned char alaw_encode [2048 + 1] =$/;"	v	file:
alaw_init	alaw.c	/^alaw_init (SF_PRIVATE *psf)$/;"	f
alaw_read_alaw2d	alaw.c	/^alaw_read_alaw2d (SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:
alaw_read_alaw2f	alaw.c	/^alaw_read_alaw2f (SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:
alaw_read_alaw2i	alaw.c	/^alaw_read_alaw2i (SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:
alaw_read_alaw2s	alaw.c	/^alaw_read_alaw2s (SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:
alaw_write_d2alaw	alaw.c	/^alaw_write_d2alaw	(SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:
alaw_write_f2alaw	alaw.c	/^alaw_write_f2alaw	(SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:
alaw_write_i2alaw	alaw.c	/^alaw_write_i2alaw	(SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:
alaw_write_s2alaw	alaw.c	/^alaw_write_s2alaw	(SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:
allocated	ogg.c	/^	int allocated ;$/;"	m	struct:__anon83	file:
am__aclocal_m4_deps	G72x/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/M4\/add_cflags.m4 \\$/;"	m
am__aclocal_m4_deps	GSM610/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/M4\/add_cflags.m4 \\$/;"	m
am__aclocal_m4_deps	Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/M4\/add_cflags.m4 \\$/;"	m
am__base_list	Makefile	/^am__base_list = \\$/;"	m
am__cd	G72x/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	GSM610/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__configure_deps	G72x/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	GSM610/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__depfiles_maybe	G72x/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	GSM610/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__include	G72x/Makefile	/^am__include = include$/;"	m
am__include	GSM610/Makefile	/^am__include = include$/;"	m
am__include	Makefile	/^am__include = include$/;"	m
am__install_max	Makefile	/^am__install_max = 40$/;"	m
am__installdirs	Makefile	/^am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)" \\$/;"	m
am__leading_dot	G72x/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	GSM610/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	Makefile	/^am__leading_dot = .$/;"	m
am__libcommon_la_SOURCES_DIST	Makefile	/^am__libcommon_la_SOURCES_DIST = common.c file_io.c command.c pcm.c \\$/;"	m
am__mv	G72x/Makefile	/^am__mv = mv -f$/;"	m
am__mv	GSM610/Makefile	/^am__mv = mv -f$/;"	m
am__mv	Makefile	/^am__mv = mv -f$/;"	m
am__nobase_list	Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_strip	Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip_setup	Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__objects_1	G72x/Makefile	/^am__objects_1 = g72x.lo g721.lo g723_16.lo g723_24.lo g723_40.lo$/;"	m
am__objects_1	GSM610/Makefile	/^am__objects_1 = add.lo decode.lo gsm_decode.lo gsm_encode.lo \\$/;"	m
am__objects_2	G72x/Makefile	/^am__objects_2 =$/;"	m
am__objects_2	GSM610/Makefile	/^am__objects_2 =$/;"	m
am__objects_2	Makefile	/^am__objects_2 = common.lo file_io.lo command.lo pcm.lo ulaw.lo alaw.lo \\$/;"	m
am__objects_3	Makefile	/^am__objects_3 = sndfile.lo aiff.lo au.lo avr.lo caf.lo dwd.lo flac.lo \\$/;"	m
am__objects_4	Makefile	/^am__objects_4 =$/;"	m
am__quote	G72x/Makefile	/^am__quote = $/;"	m
am__quote	GSM610/Makefile	/^am__quote = $/;"	m
am__quote	Makefile	/^am__quote = $/;"	m
am__relativize	Makefile	/^am__relativize = \\$/;"	m
am__strip_dir	Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__tar	G72x/Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__tar	GSM610/Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__tar	Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__untar	G72x/Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
am__untar	GSM610/Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
am__untar	Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
am__vpath_adj	Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj_setup	Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am_g72x_test_OBJECTS	G72x/Makefile	/^am_g72x_test_OBJECTS = g72x_test.$(OBJEXT)$/;"	m
am_libcommon_la_OBJECTS	Makefile	/^am_libcommon_la_OBJECTS = $(am__objects_2)$/;"	m
am_libg72x_la_OBJECTS	G72x/Makefile	/^am_libg72x_la_OBJECTS = $(am__objects_1) $(am__objects_2)$/;"	m
am_libgsm_la_OBJECTS	GSM610/Makefile	/^am_libgsm_la_OBJECTS = $(am__objects_1) $(am__objects_2)$/;"	m
am_libsndfile_la_OBJECTS	Makefile	/^am_libsndfile_la_OBJECTS = $(am__objects_3) $(am__objects_4)$/;"	m
am_test_main_OBJECTS	Makefile	/^am_test_main_OBJECTS = test_main.$(OBJEXT) test_conversions.$(OBJEXT) \\$/;"	m
ap	G72x/g72x_priv.h	/^	short ap;	\/* Linear weighting coefficient of 'yl' and 'yu'. *\/$/;"	m	struct:g72x_state
append_snprintf	common.c	/^append_snprintf (char * dest, size_t maxlen, const char * fmt, ...)$/;"	f
attacklen	txw.c	/^	unsigned int	attacklen, repeatlen ;$/;"	m	struct:__anon60	file:
au.c	au.c	1;"	F
au_close	au.c	/^au_close	(SF_PRIVATE *psf)$/;"	f	file:
au_format_to_encoding	au.c	/^au_format_to_encoding (int format)$/;"	f	file:
au_open	au.c	/^au_open	(SF_PRIVATE *psf)$/;"	f
au_read_header	au.c	/^au_read_header (SF_PRIVATE *psf)$/;"	f	file:
au_write_header	au.c	/^au_write_header (SF_PRIVATE *psf, int calc_length)$/;"	f	file:
audio_detect	audio_detect.c	/^audio_detect (SF_PRIVATE * psf, AUDIO_DETECT *ad, const unsigned char * data, int datalen)$/;"	f
audio_detect.c	audio_detect.c	1;"	F
auto_header	common.h	/^	int				auto_header ;$/;"	m	struct:sf_private_tag
auxblocksize	wav_w64.h	/^	unsigned short	auxblocksize ;$/;"	m	struct:__anon29
avr.c	avr.c	1;"	F
avr_close	avr.c	/^avr_close (SF_PRIVATE *psf)$/;"	f	file:
avr_open	avr.c	/^avr_open	(SF_PRIVATE *psf)$/;"	f
avr_read_header	avr.c	/^avr_read_header (SF_PRIVATE *psf)$/;"	f	file:
avr_write_header	avr.c	/^avr_write_header (SF_PRIVATE *psf, int calc_length)$/;"	f	file:
b	G72x/g72x_priv.h	/^	short b[6];	\/* Coefficients of zero portion of prediction filter. *\/$/;"	m	struct:g72x_state
b	dwvw.c	/^	} b ;$/;"	m	struct:__anon19	typeref:struct:__anon19::__anon20	file:
bad_header	nist.c	/^static char bad_header [] =$/;"	v	file:
basc_CHUNK	aiff.c	/^} basc_CHUNK ;$/;"	t	typeref:struct:__anon15	file:
basc_MARKER	aiff.c	57;"	d	file:
basc_SCALE_BOTH	aiff.c	/^	basc_SCALE_BOTH$/;"	e	enum:__anon13	file:
basc_SCALE_MAJOR	aiff.c	/^	basc_SCALE_MAJOR,$/;"	e	enum:__anon13	file:
basc_SCALE_MINOR	aiff.c	/^{	basc_SCALE_MINOR = 1,$/;"	e	enum:__anon13	file:
basc_SCALE_NEITHER	aiff.c	/^	basc_SCALE_NEITHER,$/;"	e	enum:__anon13	file:
basc_TYPE_LOOP	aiff.c	/^{	basc_TYPE_LOOP = 0,$/;"	e	enum:__anon14	file:
basc_TYPE_ONE_SHOT	aiff.c	/^	basc_TYPE_ONE_SHOT$/;"	e	enum:__anon14	file:
baseNote	aiff.c	/^{	char		baseNote ;		\/* all notes are MIDI note numbers *\/$/;"	m	struct:__anon12	file:
basenote	sndfile.h	/^	char basenote, detune ;$/;"	m	struct:__anon57
bc_min_size	broadcast.c	/^bc_min_size (const SF_BROADCAST_INFO* info)$/;"	f	file:
bd2d_write	double64.c	/^bd2d_write (double *buffer, int count)$/;"	f	file:
be_float	audio_detect.c	/^	int be_float ;$/;"	m	struct:__anon21	file:
be_int_24_32	audio_detect.c	/^	int be_int_24_32 ;$/;"	m	struct:__anon21	file:
beginLoop	aiff.c	/^	unsigned short	beginLoop ;$/;"	m	struct:__anon11	file:
bei2d_array	pcm.c	/^bei2d_array (int *src, int count, double *dest, double normfact)$/;"	f	file:
bei2f_array	pcm.c	/^bei2f_array (int *src, int count, float *dest, float normfact)$/;"	f	file:
bei2s_array	pcm.c	/^bei2s_array (int *src, int count, short *dest)$/;"	f	file:
bes2d_array	pcm.c	/^bes2d_array (short *src, int count, double *dest, double normfact)$/;"	f	file:
bes2f_array	pcm.c	/^bes2f_array (short *src, int count, float *dest, float normfact)$/;"	f	file:
bes2i_array	pcm.c	/^bes2i_array (short *src, int count, int *dest)$/;"	f	file:
bet2d_array	pcm.c	/^bet2d_array (tribyte *src, int count, double *dest, double normfact)$/;"	f	file:
bet2f_array	pcm.c	/^bet2f_array (tribyte *src, int count, float *dest, float normfact)$/;"	f	file:
bet2i_array	pcm.c	/^bet2i_array (tribyte *src, int count, int *dest)$/;"	f	file:
bet2s_array	pcm.c	/^bet2s_array (tribyte *src, int count, short *dest)$/;"	f	file:
bext_MARKER	rf64.c	51;"	d	file:
bext_MARKER	w64.c	77;"	d	file:
bext_MARKER	wav.c	57;"	d	file:
bf2f_array	float32.c	/^bf2f_array (float *buffer, int count)$/;"	f	file:
bindir	G72x/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	GSM610/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
binheader_writef_check.py	binheader_writef_check.py	1;"	F
bit_count	dwvw.c	/^	int		bit_count, bits, last_delta_width, last_sample ;$/;"	m	struct:__anon19	file:
bit_width	dwvw.c	/^{	int		dwm_maxsize, bit_width, max_delta, span ;$/;"	m	struct:__anon19	file:
bitoff	GSM610/add.c	/^static unsigned char const bitoff[ 256 ] = {$/;"	v	file:
bits	dwvw.c	/^	int		bit_count, bits, last_delta_width, last_sample ;$/;"	m	struct:__anon19	file:
bits_per_chan	caf.c	/^	unsigned int bits_per_chan ;$/;"	m	struct:__anon77	file:
bitwidth	dwd.c	/^{	unsigned char major, minor, compression, channels, bitwidth ;$/;"	m	struct:__anon103	file:
bitwidth	sds.c	/^{	int bitwidth, frames ;$/;"	m	struct:tag_SDS_PRIVATE	file:
bitwidth	voc.c	/^	int				samplerate, channels, bitwidth ;$/;"	m	struct:__anon98	file:
bitwidth	wav_w64.h	/^	unsigned short	bitwidth ;$/;"	m	struct:__anon24
bitwidth	wav_w64.h	/^	unsigned short	bitwidth ;$/;"	m	struct:__anon25
bitwidth	wav_w64.h	/^	unsigned short	bitwidth ;$/;"	m	struct:__anon26
bitwidth	wav_w64.h	/^	unsigned short	bitwidth ;$/;"	m	struct:__anon28
bitwidth	wav_w64.h	/^	unsigned short	bitwidth ;$/;"	m	struct:__anon29
bitwidth	wav_w64.h	/^	unsigned short	bitwidth ;$/;"	m	struct:__anon30
bitwidth	wav_w64.h	/^	unsigned short	bitwidth ;$/;"	m	struct:__anon32
block	g72x.c	/^	unsigned char	block	[G72x_BLOCK_SIZE] ;$/;"	m	struct:__anon100	file:
block	gsm610.c	/^	unsigned char	block [WAV_W64_GSM610_BLOCKSIZE] ;$/;"	m	struct:gsm610_tag	file:
block	ima_adpcm.c	/^	unsigned char	*block ;$/;"	m	struct:IMA_ADPCM_PRIVATE_tag	file:
block	ms_adpcm.c	/^	unsigned char	*block ;$/;"	m	struct:__anon86	file:
block	paf.c	/^	unsigned char	*block ;$/;"	m	struct:__anon94	file:
block_curr	g72x.c	/^	int				blocks_total, block_curr, sample_curr ;$/;"	m	struct:__anon100	file:
blockalign	wav_w64.h	/^	unsigned short	blockalign ;$/;"	m	struct:__anon24
blockalign	wav_w64.h	/^	unsigned short	blockalign ;$/;"	m	struct:__anon25
blockalign	wav_w64.h	/^	unsigned short	blockalign ;$/;"	m	struct:__anon26
blockalign	wav_w64.h	/^	unsigned short	blockalign ;$/;"	m	struct:__anon28
blockalign	wav_w64.h	/^	unsigned short	blockalign ;$/;"	m	struct:__anon29
blockalign	wav_w64.h	/^	unsigned short	blockalign ;$/;"	m	struct:__anon30
blockalign	wav_w64.h	/^	unsigned short	blockalign ;$/;"	m	struct:__anon32
blockcount	gsm610.c	/^	int				blockcount, samplecount ;$/;"	m	struct:gsm610_tag	file:
blockcount	ima_adpcm.c	/^	int				blockcount, samplecount ;$/;"	m	struct:IMA_ADPCM_PRIVATE_tag	file:
blockcount	ms_adpcm.c	/^	int				blockcount ;$/;"	m	struct:__anon86	file:
blocks	gsm610.c	/^{	int				blocks ;$/;"	m	struct:gsm610_tag	file:
blocks	ima_adpcm.c	/^	int				channels, blocksize, samplesperblock, blocks ;$/;"	m	struct:IMA_ADPCM_PRIVATE_tag	file:
blocks	ms_adpcm.c	/^{	int				channels, blocksize, samplesperblock, blocks, dataremaining ;$/;"	m	struct:__anon86	file:
blocks	voc.c	/^	SND_DATA_BLOCKS	blocks [VOC_MAX_SECTIONS] ;$/;"	m	struct:__anon98	file:
blocks_total	g72x.c	/^	int				blocks_total, block_curr, sample_curr ;$/;"	m	struct:__anon100	file:
blocksize	G72x/g72x_priv.h	/^	int		codec_bits, blocksize, samplesperblock ;$/;"	m	struct:g72x_state
blocksize	aiff.c	/^	unsigned int	blocksize ;$/;"	m	struct:__anon10	file:
blocksize	g72x.c	/^	int				blocksize, samplesperblock, bytesperblock ;$/;"	m	struct:__anon100	file:
blocksize	gsm610.c	/^	int				samplesperblock, blocksize ;$/;"	m	struct:gsm610_tag	file:
blocksize	ima_adpcm.c	/^	int				channels, blocksize, samplesperblock, blocks ;$/;"	m	struct:IMA_ADPCM_PRIVATE_tag	file:
blocksize	ms_adpcm.c	/^{	int				channels, blocksize, samplesperblock, blocks, dataremaining ;$/;"	m	struct:__anon86	file:
blocksize	paf.c	/^{	int				max_blocks, channels, samplesperblock, blocksize ;$/;"	m	struct:__anon94	file:
blockwidth	common.h	/^	int				blockwidth ;	\/* Size in bytes of one set of interleaved samples. *\/$/;"	m	struct:sf_private_tag
bpm	sndfile.h	/^	float	bpm ;			\/* suggestion, as it can be calculated using other fields:*\/$/;"	m	struct:__anon59
broadcast.c	broadcast.c	1;"	F
broadcast_16k	common.h	/^	SF_BROADCAST_INFO_16K *broadcast_16k ;$/;"	m	struct:sf_private_tag
broadcast_var_alloc	broadcast.c	/^broadcast_var_alloc (void)$/;"	f
broadcast_var_get	broadcast.c	/^broadcast_var_get (SF_PRIVATE *psf, SF_BROADCAST_INFO * data, size_t datasize)$/;"	f
broadcast_var_set	broadcast.c	/^broadcast_var_set (SF_PRIVATE *psf, const SF_BROADCAST_INFO * info, size_t datasize)$/;"	f
buffer	dither.c	/^	double buffer [SF_BUFFER_LEN \/ sizeof (double)] ;$/;"	m	struct:__anon18	file:
buffer	dwvw.c	/^		unsigned char	buffer [256] ;$/;"	m	struct:__anon19::__anon20	file:
buffer	flac.c	/^sf_flac_enc_write_callback (const FLAC__StreamEncoder * UNUSED (encoder), const FLAC__byte buffer [], size_t bytes, unsigned UNUSED (samples), unsigned UNUSED (current_frame), void *client_data)$/;"	v	file:
buffer	flac.c	/^sf_flac_read_callback (const FLAC__StreamDecoder * UNUSED (decoder), FLAC__byte buffer [], size_t *bytes, void *client_data)$/;"	v	file:
buffer	flac.c	/^sf_flac_write_callback (const FLAC__StreamDecoder * UNUSED (decoder), const FLAC__Frame *frame, const FLAC__int32 * const buffer [], void *client_data)$/;"	v	file:
buffer	interleave.c	/^{	double	buffer [SF_BUFFER_LEN \/ sizeof (double)] ;$/;"	m	struct:__anon85	file:
bufferbackup	flac.c	/^	FLAC__bool bufferbackup ;$/;"	m	struct:__anon88	file:
bufferpos	flac.c	/^	unsigned bufferpos ;$/;"	m	struct:__anon88	file:
build	G72x/Makefile	/^build = i686-pc-linux-gnu$/;"	m
build	GSM610/Makefile	/^build = i686-pc-linux-gnu$/;"	m
build	Makefile	/^build = i686-pc-linux-gnu$/;"	m
build_alias	G72x/Makefile	/^build_alias = $/;"	m
build_alias	GSM610/Makefile	/^build_alias = $/;"	m
build_alias	Makefile	/^build_alias = $/;"	m
build_cpu	G72x/Makefile	/^build_cpu = i686$/;"	m
build_cpu	GSM610/Makefile	/^build_cpu = i686$/;"	m
build_cpu	Makefile	/^build_cpu = i686$/;"	m
build_os	G72x/Makefile	/^build_os = linux-gnu$/;"	m
build_os	GSM610/Makefile	/^build_os = linux-gnu$/;"	m
build_os	Makefile	/^build_os = linux-gnu$/;"	m
build_triplet	G72x/Makefile	/^build_triplet = i686-pc-linux-gnu$/;"	m
build_triplet	GSM610/Makefile	/^build_triplet = i686-pc-linux-gnu$/;"	m
build_triplet	Makefile	/^build_triplet = i686-pc-linux-gnu$/;"	m
build_vendor	G72x/Makefile	/^build_vendor = pc$/;"	m
build_vendor	GSM610/Makefile	/^build_vendor = pc$/;"	m
build_vendor	Makefile	/^build_vendor = pc$/;"	m
builddir	G72x/Makefile	/^builddir = .$/;"	m
builddir	GSM610/Makefile	/^builddir = .$/;"	m
builddir	Makefile	/^builddir = .$/;"	m
bytes	flac.c	/^sf_flac_enc_write_callback (const FLAC__StreamEncoder * UNUSED (encoder), const FLAC__byte buffer [], size_t bytes, unsigned UNUSED (samples), unsigned UNUSED (current_frame), void *client_data)$/;"	v	file:
bytes	flac.c	/^sf_flac_read_callback (const FLAC__StreamDecoder * UNUSED (decoder), FLAC__byte buffer [], size_t *bytes, void *client_data)$/;"	v	file:
bytesperblock	g72x.c	/^	int				blocksize, samplesperblock, bytesperblock ;$/;"	m	struct:__anon100	file:
bytespersec	wav_w64.h	/^	unsigned int	bytespersec ;$/;"	m	struct:__anon24
bytespersec	wav_w64.h	/^	unsigned int	bytespersec ;$/;"	m	struct:__anon25
bytespersec	wav_w64.h	/^	unsigned int	bytespersec ;$/;"	m	struct:__anon26
bytespersec	wav_w64.h	/^	unsigned int	bytespersec ;$/;"	m	struct:__anon28
bytespersec	wav_w64.h	/^	unsigned int	bytespersec ;$/;"	m	struct:__anon29
bytespersec	wav_w64.h	/^	unsigned int	bytespersec ;$/;"	m	struct:__anon30
bytespersec	wav_w64.h	/^	unsigned int	bytespersec ;$/;"	m	struct:__anon32
bytewidth	common.h	/^	int				bytewidth ;		\/* Size in bytes of one sample (one channel). *\/$/;"	m	struct:sf_private_tag
c	common.h	/^		char c [16] ;$/;"	m	union:sf_private_tag::__anon70
c	common.h	/^	{	char		c [SF_FILENAME_LEN \/ 4] ;$/;"	m	union:__anon66::__anon69
c	common.h	/^	{	char		c [SF_FILENAME_LEN] ;$/;"	m	union:__anon66::__anon67
c	common.h	/^	{	char		c [SF_FILENAME_LEN] ;$/;"	m	union:__anon66::__anon68
c_MARKER	aiff.c	48;"	d	file:
c_MARKER	svx.c	44;"	d	file:
caf.c	caf.c	1;"	F
caf_close	caf.c	/^caf_close (SF_PRIVATE *psf)$/;"	f	file:
caf_command	caf.c	/^caf_command (SF_PRIVATE * psf, int command, void * UNUSED (data), int UNUSED (datasize))$/;"	f	file:
caf_open	caf.c	/^caf_open (SF_PRIVATE *psf)$/;"	f
caf_read_chanmap	caf.c	/^caf_read_chanmap (SF_PRIVATE * psf, sf_count_t chunk_size)$/;"	f	file:
caf_read_header	caf.c	/^caf_read_header (SF_PRIVATE *psf)$/;"	f	file:
caf_write_header	caf.c	/^caf_write_header (SF_PRIVATE *psf, int calc_length)$/;"	f	file:
caff_MARKER	caf.c	40;"	d	file:
canary	common.h	/^		} canary ;$/;"	m	struct:sf_private_tag	typeref:union:sf_private_tag::__anon70
cart_MARKER	wav.c	68;"	d	file:
cbuf	common.h	/^		char			cbuf	[SF_BUFFER_LEN \/ sizeof (char)] ;$/;"	m	union:sf_private_tag::__anon71
chan_MARKER	caf.c	41;"	d	file:
chanmap.c	chanmap.c	1;"	F
chanmap.h	chanmap.h	1;"	F
chanmap_s	wav_w64.c	/^static const struct chanmap_s$/;"	s	file:
chanmap_tag	aiff.c	/^	int chanmap_tag ;$/;"	m	struct:__anon17	file:
chanmap_tag	caf.c	/^{	int chanmap_tag ;$/;"	m	struct:__anon78	file:
channel_layout_tag	chanmap.h	/^	int channel_layout_tag ;$/;"	m	struct:__anon3
channel_len	interleave.c	/^	sf_count_t		channel_len ;$/;"	m	struct:__anon85	file:
channel_map	chanmap.h	/^	const int * channel_map ;$/;"	m	struct:__anon3
channel_map	common.h	/^	int				*channel_map ;$/;"	m	struct:sf_private_tag
channel_mask_bits	wav_w64.c	/^} channel_mask_bits [] =$/;"	v	typeref:struct:chanmap_s	file:
channelmask	wav_w64.h	/^	unsigned int	channelmask ;$/;"	m	struct:__anon32
channels	au.c	/^    int		channels ;$/;"	m	struct:__anon45	file:
channels	common.h	/^{	int channels ;$/;"	m	struct:__anon75
channels	dwd.c	/^{	unsigned char major, minor, compression, channels, bitwidth ;$/;"	m	struct:__anon103	file:
channels	ima_adpcm.c	/^	int				channels, blocksize, samplesperblock, blocks ;$/;"	m	struct:IMA_ADPCM_PRIVATE_tag	file:
channels	ms_adpcm.c	/^{	int				channels, blocksize, samplesperblock, blocks, dataremaining ;$/;"	m	struct:__anon86	file:
channels	paf.c	/^	int	channels ;$/;"	m	struct:__anon93	file:
channels	paf.c	/^{	int				max_blocks, channels, samplesperblock, blocksize ;$/;"	m	struct:__anon94	file:
channels	sd2.c	/^	int sample_size, sample_rate, channels ;$/;"	m	struct:__anon91	file:
channels	sndfile.h	/^	int			channels ;$/;"	m	struct:SF_INFO
channels	sndfile.hh	/^		int			channels (void) const	{ return p ? p->sfinfo.channels : 0 ; }$/;"	f	class:SndfileHandle
channels	voc.c	/^	int				samplerate, channels, bitwidth ;$/;"	m	struct:__anon98	file:
channels	wav_w64.h	/^	unsigned short	channels ;$/;"	m	struct:__anon24
channels	wav_w64.h	/^	unsigned short	channels ;$/;"	m	struct:__anon25
channels	wav_w64.h	/^	unsigned short	channels ;$/;"	m	struct:__anon26
channels	wav_w64.h	/^	unsigned short	channels ;$/;"	m	struct:__anon28
channels	wav_w64.h	/^	unsigned short	channels ;$/;"	m	struct:__anon29
channels	wav_w64.h	/^	unsigned short	channels ;$/;"	m	struct:__anon30
channels	wav_w64.h	/^	unsigned short	channels ;$/;"	m	struct:__anon32
channels_per_frame	caf.c	/^	unsigned int channels_per_frame ;$/;"	m	struct:__anon77	file:
choose_predictor	ms_adpcm.c	/^choose_predictor (unsigned int channels, short *data, int *block_pred, int *idelta)$/;"	f	file:
chunk	common.h	/^	{	int chunk ;$/;"	m	struct:__anon73::__anon74
chunk.c	chunk.c	1;"	F
chunk4	aiff.c	/^{	PRIV_CHUNK4 chunk4 ;$/;"	m	struct:__anon17	file:
clamp_ima_step_index	ima_adpcm.c	/^clamp_ima_step_index (int indx)$/;"	f	file:
clm_MARKER	wav.c	66;"	d	file:
cmp_test	test_conversions.c	36;"	d	file:
code.c	GSM610/code.c	1;"	F
code_count	ima_oki_adpcm.h	/^	int	code_count, pcm_count ;$/;"	m	struct:__anon37
codec_bits	G72x/g72x_priv.h	/^	int		codec_bits, blocksize, samplesperblock ;$/;"	m	struct:g72x_state
codec_close	common.h	/^	int				(*codec_close)		(struct sf_private_tag*) ;$/;"	m	struct:sf_private_tag
codec_close	vox_adpcm.c	/^codec_close (SF_PRIVATE * psf)$/;"	f	file:
codec_data	common.h	/^	void			*codec_data ;		\/*	This is a pointer to dynamically allocated file$/;"	m	struct:sf_private_tag
codes	ima_oki_adpcm.h	/^	unsigned char	codes [IMA_OKI_ADPCM_CODE_LEN] ;$/;"	m	struct:__anon37
coeff1	wav_w64.h	/^	{	short	coeff1 ;$/;"	m	struct:__anon26::__anon27
coeff2	wav_w64.h	/^		short	coeff2 ;$/;"	m	struct:__anon26::__anon27
coeffs	wav_w64.h	/^	}	coeffs [7] ;$/;"	m	struct:__anon26	typeref:struct:__anon26::__anon27
cols	mat5.c	/^	int			rows, cols ;$/;"	m	struct:__anon7	file:
comm_offset	aiff.c	/^	sf_count_t	comm_offset ;$/;"	m	struct:__anon17	file:
command	common.h	/^	int				(*command)		(struct sf_private_tag*, int command, void *data, int datasize) ;$/;"	m	struct:sf_private_tag
command	sndfile.hh	/^SndfileHandle::command (int cmd, void *data, int datasize)$/;"	f	class:SndfileHandle
command.c	command.c	1;"	F
common.c	common.c	1;"	F
common.h	common.h	1;"	F
compare_strings_or_die	test_log_printf.c	/^compare_strings_or_die (int linenum, const char *fmt, const char* s1, const char* s2)$/;"	f	file:
compression	dwd.c	/^{	unsigned char major, minor, compression, channels, bitwidth ;$/;"	m	struct:__anon103	file:
compression	svx.c	/^	unsigned char	octave, compression ;$/;"	m	struct:__anon1	file:
config.h	GSM610/config.h	1;"	F
config.h	config.h	1;"	F
container_close	common.h	/^	int				(*container_close)	(struct sf_private_tag*) ;$/;"	m	struct:sf_private_tag
container_data	common.h	/^	void			*container_data ;	\/*	This is a pointer to dynamically allocated file$/;"	m	struct:sf_private_tag
conversion_test	test_conversions.c	/^conversion_test (char endian)$/;"	f	file:
convert_func	ogg.c	/^typedef int convert_func (int, void *, int, int, float **) ;$/;"	t	file:
copy_filename	sndfile.c	/^copy_filename (SF_PRIVATE *psf, const char *path)$/;"	f	file:
copy_filename	windows.c	/^copy_filename (SF_PRIVATE *psf, LPCWSTR wpath)$/;"	f	file:
count	common.h	/^	int count ;$/;"	m	struct:__anon73
count	sndfile.h	/^		unsigned int count ;$/;"	m	struct:__anon57::__anon58
create_stream_set	ogg.c	/^create_stream_set (void)$/;"	f	file:
create_symbols_file.py	create_symbols_file.py	1;"	F
cue_MARKER	wav.c	46;"	d	file:
d	common.h	/^		double d [2] ;$/;"	m	union:sf_private_tag::__anon70
d2alaw_array	alaw.c	/^d2alaw_array (const double *ptr, int count, unsigned char *buffer, double normfact)$/;"	f	file:
d2bd_read	double64.c	/^d2bd_read (double *buffer, int count)$/;"	f	file:
d2bei_array	pcm.c	/^d2bei_array (const double *src, int *dest, int count, int normalize)$/;"	f	file:
d2bei_clip_array	pcm.c	/^d2bei_clip_array (const double *src, int *dest, int count, int normalize)$/;"	f	file:
d2bes_array	pcm.c	/^d2bes_array (const double *src, short *dest, int count, int normalize)$/;"	f	file:
d2bes_clip_array	pcm.c	/^d2bes_clip_array (const double *src, short *dest, int count, int normalize)$/;"	f	file:
d2bet_array	pcm.c	/^d2bet_array (const double *src, tribyte *dest, int count, int normalize)$/;"	f	file:
d2bet_clip_array	pcm.c	/^d2bet_clip_array (const double *src, tribyte *dest, int count, int normalize)$/;"	f	file:
d2dles_array	xi.c	/^d2dles_array (XI_PRIVATE *pxi, const double *src, short *dest, int count, double normfact)$/;"	f	file:
d2dsc_array	xi.c	/^d2dsc_array (XI_PRIVATE *pxi, const double *src, signed char *dest, int count, double normfact)$/;"	f	file:
d2f_array	double64.c	/^d2f_array (const double *src, int count, float *dest)$/;"	f	file:
d2f_array	float32.c	/^d2f_array (const double *src, float *dest, int count)$/;"	f	file:
d2flac16_array	flac.c	/^d2flac16_array (const double *src, FLAC__int32 *dest, int count, int normalize)$/;"	f	file:
d2flac16_clip_array	flac.c	/^d2flac16_clip_array (const double *src, FLAC__int32 *dest, int count, int normalize)$/;"	f	file:
d2flac24_array	flac.c	/^d2flac24_array (const double *src, FLAC__int32 *dest, int count, int normalize)$/;"	f	file:
d2flac24_clip_array	flac.c	/^d2flac24_clip_array (const double *src, FLAC__int32 *dest, int count, int normalize)$/;"	f	file:
d2flac8_array	flac.c	/^d2flac8_array (const double *src, FLAC__int32 *dest, int count, int normalize)$/;"	f	file:
d2flac8_clip_array	flac.c	/^d2flac8_clip_array (const double *src, FLAC__int32 *dest, int count, int normalize)$/;"	f	file:
d2i_array	double64.c	/^d2i_array (const double *src, int count, int *dest, double scale)$/;"	f	file:
d2i_clip_array	double64.c	/^d2i_clip_array (const double *src, int count, int *dest, double scale)$/;"	f	file:
d2lei_array	pcm.c	/^d2lei_array (const double *src, int *dest, int count, int normalize)$/;"	f	file:
d2lei_clip_array	pcm.c	/^d2lei_clip_array (const double *src, int *dest, int count, int normalize)$/;"	f	file:
d2les_array	pcm.c	/^d2les_array (const double *src, short *dest, int count, int normalize)$/;"	f	file:
d2les_clip_array	pcm.c	/^d2les_clip_array (const double *src, short *dest, int count, int normalize)$/;"	f	file:
d2let_array	pcm.c	/^d2let_array (const double *src, tribyte *dest, int count, int normalize)$/;"	f	file:
d2let_clip_array	pcm.c	/^d2let_clip_array (const double *src, tribyte *dest, int count, int normalize)$/;"	f	file:
d2s_array	double64.c	/^d2s_array (const double *src, int count, short *dest, double scale)$/;"	f	file:
d2s_clip_array	double64.c	/^d2s_clip_array (const double *src, int count, short *dest, double scale)$/;"	f	file:
d2sc_array	pcm.c	/^d2sc_array	(const double *src, signed char *dest, int count, int normalize)$/;"	f	file:
d2sc_clip_array	pcm.c	/^d2sc_clip_array	(const double *src, signed char *dest, int count, int normalize)$/;"	f	file:
d2uc_array	pcm.c	/^d2uc_array	(const double *src, unsigned char *dest, int count, int normalize)$/;"	f	file:
d2uc_clip_array	pcm.c	/^d2uc_clip_array	(const double *src, unsigned char *dest, int count, int normalize)$/;"	f	file:
d2ulaw_array	ulaw.c	/^d2ulaw_array (const double *ptr, int count, unsigned char *buffer, double normfact)$/;"	f	file:
darwin_symbols	create_symbols_file.py	/^def darwin_symbols (progname, version):$/;"	f
data	ima_adpcm.c	/^	short			data	[0] ; \/* This is a hack and might not work. *\/$/;"	m	struct:IMA_ADPCM_PRIVATE_tag	file:
data	ima_adpcm.c	/^	short			data	[] ; \/* ISO C99 struct flexible array. *\/$/;"	m	struct:IMA_ADPCM_PRIVATE_tag	file:
data	paf.c	/^	int				data [1] ; \/* This is a hack and may not work. *\/$/;"	m	struct:__anon94	file:
data	paf.c	/^	int				data [] ; \/* ISO C99 struct flexible array. *\/$/;"	m	struct:__anon94	file:
data_HASH16	w64.c	62;"	d	file:
data_MARKER	caf.c	42;"	d	file:
data_MARKER	ms_adpcm.c	37;"	d	file:
data_MARKER	rf64.c	49;"	d	file:
data_MARKER	wav.c	42;"	d	file:
data_endswap	common.h	/^	int				data_endswap ;	\/* Need to endswap data? *\/$/;"	m	struct:sf_private_tag
data_length	sd2.c	/^	int data_offset, data_length ;$/;"	m	struct:__anon91	file:
data_offset	sd2.c	/^	int data_offset, data_length ;$/;"	m	struct:__anon91	file:
datadir	G72x/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	GSM610/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	Makefile	/^datadir = ${datarootdir}$/;"	m
dataend	common.h	/^	sf_count_t		dataend ;		\/* Offset to file tailer. *\/$/;"	m	struct:sf_private_tag
datalen	dwd.c	/^	unsigned int id, datalen, frames, offset ;$/;"	m	struct:__anon103	file:
datalength	common.h	/^	sf_count_t		datalength ;	\/* Length in bytes of the audio data. *\/$/;"	m	struct:sf_private_tag
dataoffset	au.c	/^{	int		dataoffset ;$/;"	m	struct:__anon45	file:
dataoffset	common.h	/^	sf_count_t		dataoffset ;	\/* Offset in number of bytes from beginning of file. *\/$/;"	m	struct:sf_private_tag
dataremaining	ms_adpcm.c	/^{	int				channels, blocksize, samplesperblock, blocks, dataremaining ;$/;"	m	struct:__anon86	file:
datarootdir	G72x/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	GSM610/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datasize	au.c	/^	int		datasize ;$/;"	m	struct:__anon45	file:
dbuf	common.h	/^	{	double			dbuf	[SF_BUFFER_LEN \/ sizeof (double)] ;$/;"	m	union:sf_private_tag::__anon71
decode.c	GSM610/decode.c	1;"	F
decode_block	gsm610.c	/^	int				(*decode_block)	(SF_PRIVATE *psf, struct gsm610_tag *pgsm610) ;$/;"	m	struct:gsm610_tag	file:
decode_block	ima_adpcm.c	/^{	int 			(*decode_block) (SF_PRIVATE *psf, struct IMA_ADPCM_PRIVATE_tag *pima) ;$/;"	m	struct:IMA_ADPCM_PRIVATE_tag	file:
decode_desc_chunk	caf.c	/^decode_desc_chunk (SF_PRIVATE *psf, const DESC_CHUNK *desc)$/;"	f	file:
decoder	G72x/g72x_priv.h	/^	int		(*decoder) (int, struct g72x_state* state) ;$/;"	m	struct:g72x_state
depcomp	G72x/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/Cfg\/depcomp$/;"	m
depcomp	GSM610/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/Cfg\/depcomp$/;"	m
depcomp	Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/Cfg\/depcomp$/;"	m
desc_MARKER	caf.c	43;"	d	file:
detune	aiff.c	/^	char		detune ;		\/* cents off, only -50 to +50 are significant *\/$/;"	m	struct:__anon12	file:
detune	sndfile.h	/^	char basenote, detune ;$/;"	m	struct:__anon57
dir	common.h	/^	} dir ;$/;"	m	struct:__anon66	typeref:union:__anon66::__anon68
dither	common.h	/^	void			*dither ;$/;"	m	struct:sf_private_tag
dither.c	dither.c	1;"	F
dither_double	dither.c	/^dither_double (const double *in, double *out, int frames, int channels)$/;"	f	file:
dither_float	dither.c	/^dither_float (const float *in, float *out, int frames, int channels)$/;"	f	file:
dither_init	dither.c	/^dither_init (SF_PRIVATE *psf, int mode)$/;"	f
dither_int	dither.c	/^dither_int (const int *in, int *out, int frames, int channels)$/;"	f	file:
dither_short	dither.c	/^dither_short (const short *in, short *out, int frames, int channels)$/;"	f	file:
dither_write_double	dither.c	/^dither_write_double	(SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:
dither_write_float	dither.c	/^dither_write_float	(SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:
dither_write_int	dither.c	/^dither_write_int	(SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:
dither_write_short	dither.c	/^dither_write_short	(SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:
dles2d_array	xi.c	/^dles2d_array (XI_PRIVATE *pxi, short *src, int count, double *dest, double normfact)$/;"	f	file:
dles2f_array	xi.c	/^dles2f_array (XI_PRIVATE *pxi, short *src, int count, float *dest, float normfact)$/;"	f	file:
dles2i_array	xi.c	/^dles2i_array (XI_PRIVATE *pxi, short *src, int count, int *dest)$/;"	f	file:
dles2s_array	xi.c	/^dles2s_array (XI_PRIVATE *pxi, short *src, int count, short *dest)$/;"	f	file:
dml	G72x/g72x_priv.h	/^	short dml;	\/* Long term energy estimate. *\/$/;"	m	struct:g72x_state
dms	G72x/g72x_priv.h	/^	short dms;	\/* Short term energy estimate. *\/$/;"	m	struct:g72x_state
do_not_close_descriptor	common.h	/^	int				do_not_close_descriptor ;$/;"	m	struct:__anon66
docdir	G72x/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	GSM610/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
doneheaders	ogg.c	/^	int doneheaders ;$/;"	m	struct:__anon82	file:
double64.c	double64.c	1;"	F
double64_be_read	double64.c	/^double64_be_read (unsigned char *cptr)$/;"	f
double64_be_write	double64.c	/^double64_be_write (double in, unsigned char *out)$/;"	f
double64_get_capability	double64.c	/^double64_get_capability	(SF_PRIVATE *psf)$/;"	f	file:
double64_init	double64.c	/^double64_init	(SF_PRIVATE *psf)$/;"	f
double64_le_read	double64.c	/^double64_le_read (unsigned char *cptr)$/;"	f
double64_le_write	double64.c	/^double64_le_write (double in, unsigned char *out)$/;"	f
double64_peak_update	double64.c	/^double64_peak_update	(SF_PRIVATE *psf, const double *buffer, int count, sf_count_t indx)$/;"	f	file:
dp0	GSM610/gsm610_priv.h	/^{	word			dp0[ 280 ] ;$/;"	m	struct:gsm_state
dpcm_init	xi.c	/^dpcm_init (SF_PRIVATE *psf)$/;"	f	file:
dpcm_read_dles2d	xi.c	/^dpcm_read_dles2d (SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:
dpcm_read_dles2f	xi.c	/^dpcm_read_dles2f (SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:
dpcm_read_dles2i	xi.c	/^dpcm_read_dles2i (SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:
dpcm_read_dles2s	xi.c	/^dpcm_read_dles2s (SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:
dpcm_read_dsc2d	xi.c	/^dpcm_read_dsc2d (SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:
dpcm_read_dsc2f	xi.c	/^dpcm_read_dsc2f (SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:
dpcm_read_dsc2i	xi.c	/^dpcm_read_dsc2i (SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:
dpcm_read_dsc2s	xi.c	/^dpcm_read_dsc2s (SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:
dpcm_seek	xi.c	/^dpcm_seek (SF_PRIVATE *psf, int mode, sf_count_t offset)$/;"	f	file:
dpcm_write_d2dles	xi.c	/^dpcm_write_d2dles (SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:
dpcm_write_d2dsc	xi.c	/^dpcm_write_d2dsc (SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:
dpcm_write_f2dles	xi.c	/^dpcm_write_f2dles (SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:
dpcm_write_f2dsc	xi.c	/^dpcm_write_f2dsc (SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:
dpcm_write_i2dles	xi.c	/^dpcm_write_i2dles (SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:
dpcm_write_i2dsc	xi.c	/^dpcm_write_i2dsc (SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:
dpcm_write_s2dles	xi.c	/^dpcm_write_s2dles (SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:
dpcm_write_s2dsc	xi.c	/^dpcm_write_s2dsc (SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:
dq	G72x/g72x_priv.h	/^	short dq[6];	\/*$/;"	m	struct:g72x_state
ds64_MARKER	rf64.c	46;"	d	file:
dsc2d_array	xi.c	/^dsc2d_array (XI_PRIVATE *pxi, signed char *src, int count, double *dest, double normfact)$/;"	f	file:
dsc2f_array	xi.c	/^dsc2f_array (XI_PRIVATE *pxi, signed char *src, int count, float *dest, float normfact)$/;"	f	file:
dsc2i_array	xi.c	/^dsc2i_array (XI_PRIVATE *pxi, signed char *src, int count, int *dest)$/;"	f	file:
dsc2s_array	xi.c	/^dsc2s_array (XI_PRIVATE *pxi, signed char *src, int count, short *dest)$/;"	f	file:
dummy	wav_w64.h	/^	unsigned short	dummy ;$/;"	m	struct:__anon25
dummydata	ms_adpcm.c	/^	short			dummydata [0] ; \/* This is a hack an might not work. *\/$/;"	m	struct:__anon86	file:
dummydata	ms_adpcm.c	/^	short			dummydata [] ; \/* ISO C99 struct flexible array. *\/$/;"	m	struct:__anon86	file:
dump_int64_t_array	test_endswap.c	/^dump_int64_t_array (const char * name, int64_t * data, int datalen)$/;"	f	file:
dump_int_array	test_endswap.c	/^dump_int_array (const char * name, int * data, int datalen)$/;"	f	file:
dump_short_array	test_endswap.c	/^dump_short_array (const char * name, short * data, int datalen)$/;"	f	file:
dvidir	G72x/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	GSM610/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	Makefile	/^dvidir = ${docdir}$/;"	m
dwd.c	dwd.c	1;"	F
dwd_open	dwd.c	/^dwd_open	(SF_PRIVATE *psf)$/;"	f
dwd_open	dwd.c	/^dwd_open (SF_PRIVATE *psf)$/;"	f
dwd_read_header	dwd.c	/^dwd_read_header (SF_PRIVATE *psf)$/;"	f	file:
dwm_maxsize	dwvw.c	/^{	int		dwm_maxsize, bit_width, max_delta, span ;$/;"	m	struct:__anon19	file:
dwvw.c	dwvw.c	1;"	F
dwvw_close	dwvw.c	/^dwvw_close (SF_PRIVATE *psf)$/;"	f	file:
dwvw_decode_data	dwvw.c	/^dwvw_decode_data (SF_PRIVATE *psf, DWVW_PRIVATE *pdwvw, int *ptr, int len)$/;"	f	file:
dwvw_decode_load_bits	dwvw.c	/^dwvw_decode_load_bits (SF_PRIVATE *psf, DWVW_PRIVATE *pdwvw, int bit_count)$/;"	f	file:
dwvw_encode_data	dwvw.c	/^dwvw_encode_data (SF_PRIVATE *psf, DWVW_PRIVATE *pdwvw, const int *ptr, int len)$/;"	f	file:
dwvw_encode_store_bits	dwvw.c	/^dwvw_encode_store_bits (SF_PRIVATE *psf, DWVW_PRIVATE *pdwvw, int data, int new_bits)$/;"	f	file:
dwvw_init	dwvw.c	/^dwvw_init (SF_PRIVATE *psf, int bitwidth)$/;"	f
dwvw_read_d	dwvw.c	/^dwvw_read_d (SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:
dwvw_read_f	dwvw.c	/^dwvw_read_f (SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:
dwvw_read_i	dwvw.c	/^dwvw_read_i (SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:
dwvw_read_reset	dwvw.c	/^dwvw_read_reset (DWVW_PRIVATE *pdwvw)$/;"	f	file:
dwvw_read_s	dwvw.c	/^dwvw_read_s (SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:
dwvw_seek	dwvw.c	/^dwvw_seek	(SF_PRIVATE *psf, int UNUSED (mode), sf_count_t offset)$/;"	f	file:
dwvw_write_d	dwvw.c	/^dwvw_write_d (SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:
dwvw_write_f	dwvw.c	/^dwvw_write_f (SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:
dwvw_write_i	dwvw.c	/^dwvw_write_i (SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:
dwvw_write_s	dwvw.c	/^dwvw_write_s (SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:
e	GSM610/gsm610_priv.h	/^	word e[50] ;$/;"	m	struct:gsm_state
ecor_MARKER	wav.c	73;"	d	file:
edct_MARKER	caf.c	44;"	d	file:
edit_number	common.h	/^	unsigned int	edit_number ;$/;"	m	struct:__anon64
eight_chan	chanmap.c	/^static const AIFF_CAF_CHANNEL_MAP eight_chan [] =$/;"	v	file:
elmo_MARKER	wav.c	67;"	d	file:
emdl_MARKER	wav.c	74;"	d	file:
emnt_MARKER	wav.c	75;"	d	file:
encbuffer	flac.c	/^	FLAC__int32* encbuffer ;$/;"	m	struct:__anon88	file:
encode_block	gsm610.c	/^	int				(*encode_block)	(SF_PRIVATE *psf, struct gsm610_tag *pgsm610) ;$/;"	m	struct:gsm610_tag	file:
encode_block	ima_adpcm.c	/^	int 			(*encode_block) (SF_PRIVATE *psf, struct IMA_ADPCM_PRIVATE_tag *pima) ;$/;"	m	struct:IMA_ADPCM_PRIVATE_tag	file:
encoder	G72x/g72x_priv.h	/^	int		(*encoder) (int, struct g72x_state* state) ;$/;"	m	struct:g72x_state
encoding	aiff.c	/^	unsigned int	encoding ;$/;"	m	struct:__anon9	file:
encoding	au.c	/^	int		encoding ;$/;"	m	struct:__anon45	file:
end	dwvw.c	/^	{	int				index, end ;$/;"	m	struct:__anon19::__anon20	file:
end	ogg.c	/^	int end ;$/;"	m	struct:__anon82	file:
end	sndfile.h	/^		unsigned int end ;$/;"	m	struct:__anon57::__anon58
endLoop	aiff.c	/^	unsigned short	endLoop ;$/;"	m	struct:__anon11	file:
endian	common.h	/^	int				endian ;		\/* File endianness : SF_ENDIAN_LITTLE or SF_ENDIAN_BIG. *\/$/;"	m	struct:sf_private_tag
endianness	common.h	/^	int endianness ;$/;"	m	struct:__anon75
endianness	paf.c	/^	int	endianness ;$/;"	m	struct:__anon93	file:
endswap_double_array	sfendian.h	/^endswap_double_array (double *ptr, int len)$/;"	f
endswap_double_copy	sfendian.h	/^endswap_double_copy (double *dest, const double *src, int len)$/;"	f
endswap_float_array	sfendian.h	/^endswap_float_array (float *ptr, int len)$/;"	f
endswap_float_copy	sfendian.h	/^endswap_float_copy (float *dest, const float *src, int len)$/;"	f
endswap_int64_t_array	sfendian.h	/^endswap_int64_t_array (int64_t *ptr, int len)$/;"	f
endswap_int64_t_copy	sfendian.h	/^endswap_int64_t_copy (int64_t *dest, const int64_t *src, int len)$/;"	f
endswap_int_array	sfendian.h	/^endswap_int_array (int *ptr, int len)$/;"	f
endswap_int_copy	sfendian.h	/^endswap_int_copy (int *dest, const int *src, int len)$/;"	f
endswap_short_array	sfendian.h	/^endswap_short_array (short *ptr, int len)$/;"	f
endswap_short_copy	sfendian.h	/^endswap_short_copy (short *dest, const short *src, int len)$/;"	f
eos	ogg.c	/^	int eos ;$/;"	m	struct:__anon80	file:
erel_MARKER	wav.c	76;"	d	file:
error	common.h	/^	int				error ;$/;"	m	struct:sf_private_tag
error	sndfile.c	/^{	int 		error ;$/;"	m	struct:__anon40	file:
error	sndfile.hh	/^SndfileHandle::error (void) const$/;"	f	class:SndfileHandle
error_function	G72x/g72x_test.c	/^error_function (double data, double orig, double margin)$/;"	f	file:
errors	binheader_writef_check.py	/^	errors = 0$/;"	v
errors	ima_oki_adpcm.h	/^	int errors ;$/;"	m	struct:__anon37
esf	wav_w64.h	/^	EXT_SUBFORMAT	esf ;$/;"	m	struct:__anon32
esf_field1	wav_w64.h	/^{	unsigned int	esf_field1 ;$/;"	m	struct:__anon31
esf_field2	wav_w64.h	/^	unsigned short	esf_field2 ;$/;"	m	struct:__anon31
esf_field3	wav_w64.h	/^	unsigned short	esf_field3 ;$/;"	m	struct:__anon31
esf_field4	wav_w64.h	/^	char			esf_field4 [8] ;$/;"	m	struct:__anon31
etim_MARKER	wav.c	72;"	d	file:
eucm_MARKER	wav.c	77;"	d	file:
ever_MARKER	wav.c	71;"	d	file:
exec_prefix	G72x/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	GSM610/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	Makefile	/^exec_prefix = ${prefix}$/;"	m
exif_MARKER	wav.c	70;"	d	file:
exif_fill_and_sink	wav.c	/^exif_fill_and_sink (SF_PRIVATE *psf, char* buf, size_t bufsz, size_t toread)$/;"	f	file:
exif_subchunk_parse	wav.c	/^exif_subchunk_parse (SF_PRIVATE *psf, unsigned int length)$/;"	f	file:
ext	avr.c	/^	char	ext [20] ;	\/* Additional filename space, used if (name[7] != 0) *\/$/;"	m	struct:__anon22	file:
ext	wav_w64.h	/^	EXTENSIBLE_WAV_FMT	ext ;$/;"	m	union:__anon33
extension	sndfile.h	/^	const char	*extension ;$/;"	m	struct:__anon52
extrabytes	wav_w64.h	/^	unsigned short	extrabytes ;$/;"	m	struct:__anon25
extrabytes	wav_w64.h	/^	unsigned short	extrabytes ;$/;"	m	struct:__anon26
extrabytes	wav_w64.h	/^	unsigned short	extrabytes ;$/;"	m	struct:__anon28
extrabytes	wav_w64.h	/^	unsigned short	extrabytes ;$/;"	m	struct:__anon29
extrabytes	wav_w64.h	/^	unsigned short	extrabytes ;$/;"	m	struct:__anon30
extrabytes	wav_w64.h	/^	unsigned short	extrabytes ;$/;"	m	struct:__anon32
f2alaw_array	alaw.c	/^f2alaw_array (const float *ptr, int count, unsigned char *buffer, float normfact)$/;"	f	file:
f2bei_array	pcm.c	/^f2bei_array (const float *src, int *dest, int count, int normalize)$/;"	f	file:
f2bei_clip_array	pcm.c	/^f2bei_clip_array (const float *src, int *dest, int count, int normalize)$/;"	f	file:
f2bes_array	pcm.c	/^f2bes_array (const float *src, short *dest, int count, int normalize)$/;"	f	file:
f2bes_clip_array	pcm.c	/^f2bes_clip_array (const float *src, short *dest, int count, int normalize)$/;"	f	file:
f2bet_array	pcm.c	/^f2bet_array (const float *src, tribyte *dest, int count, int normalize)$/;"	f	file:
f2bet_clip_array	pcm.c	/^f2bet_clip_array (const float *src, tribyte *dest, int count, int normalize)$/;"	f	file:
f2bf_array	float32.c	/^f2bf_array (float *buffer, int count)$/;"	f	file:
f2d_array	double64.c	/^f2d_array (const float *src, double *dest, int count)$/;"	f	file:
f2d_array	float32.c	/^f2d_array (const float *src, int count, double *dest)$/;"	f	file:
f2dles_array	xi.c	/^f2dles_array (XI_PRIVATE *pxi, const float *src, short *dest, int count, float normfact)$/;"	f	file:
f2dsc_array	xi.c	/^f2dsc_array (XI_PRIVATE *pxi, const float *src, signed char *dest, int count, float normfact)$/;"	f	file:
f2flac16_array	flac.c	/^f2flac16_array (const float *src, FLAC__int32 *dest, int count, int normalize)$/;"	f	file:
f2flac16_clip_array	flac.c	/^f2flac16_clip_array (const float *src, FLAC__int32 *dest, int count, int normalize)$/;"	f	file:
f2flac24_array	flac.c	/^f2flac24_array (const float *src, FLAC__int32 *dest, int count, int normalize)$/;"	f	file:
f2flac24_clip_array	flac.c	/^f2flac24_clip_array (const float *src, FLAC__int32 *dest, int count, int normalize)$/;"	f	file:
f2flac8_array	flac.c	/^f2flac8_array (const float *src, FLAC__int32 *dest, int count, int normalize)$/;"	f	file:
f2flac8_clip_array	flac.c	/^f2flac8_clip_array (const float *src, FLAC__int32 *dest, int count, int normalize)$/;"	f	file:
f2i_array	float32.c	/^f2i_array (const float *src, int count, int *dest, float scale)$/;"	f	file:
f2i_clip_array	float32.c	/^f2i_clip_array (const float *src, int count, int *dest, float scale)$/;"	f	file:
f2lei_array	pcm.c	/^f2lei_array (const float *src, int *dest, int count, int normalize)$/;"	f	file:
f2lei_clip_array	pcm.c	/^f2lei_clip_array (const float *src, int *dest, int count, int normalize)$/;"	f	file:
f2les_array	pcm.c	/^f2les_array (const float *src, short *dest, int count, int normalize)$/;"	f	file:
f2les_clip_array	pcm.c	/^f2les_clip_array (const float *src, short *dest, int count, int normalize)$/;"	f	file:
f2let_array	pcm.c	/^f2let_array (const float *src, tribyte *dest, int count, int normalize)$/;"	f	file:
f2let_clip_array	pcm.c	/^f2let_clip_array (const float *src, tribyte *dest, int count, int normalize)$/;"	f	file:
f2s_array	float32.c	/^f2s_array (const float *src, int count, short *dest, float scale)$/;"	f	file:
f2s_clip_array	float32.c	/^f2s_clip_array (const float *src, int count, short *dest, float scale)$/;"	f	file:
f2sc_array	pcm.c	/^f2sc_array (const float *src, signed char *dest, int count, int normalize)$/;"	f	file:
f2sc_clip_array	pcm.c	/^f2sc_clip_array (const float *src, signed char *dest, int count, int normalize)$/;"	f	file:
f2uc_array	pcm.c	/^f2uc_array	(const float *src, unsigned char *dest, int count, int normalize)$/;"	f	file:
f2uc_clip_array	pcm.c	/^f2uc_clip_array	(const float *src, unsigned char *dest, int count, int normalize)$/;"	f	file:
f2ulaw_array	ulaw.c	/^f2ulaw_array (const float *ptr, int count, unsigned char *buffer, float normfact)$/;"	f	file:
fact_HASH16	w64.c	59;"	d	file:
fact_MARKER	ms_adpcm.c	36;"	d	file:
fact_MARKER	rf64.c	48;"	d	file:
fact_MARKER	wav.c	43;"	d	file:
fast	GSM610/gsm610_priv.h	/^	char			fast;			\/* only used if FAST		*\/$/;"	m	struct:gsm_state
fbuf	common.h	/^		float			fbuf	[SF_BUFFER_LEN \/ sizeof (float)] ;$/;"	m	union:sf_private_tag::__anon71
file	common.h	/^	PSF_FILE		file, rsrc ;$/;"	m	struct:sf_private_tag
file_io.c	file_io.c	1;"	F
file_open_test	test_file_io.c	/^file_open_test (const char *filename)$/;"	f	file:
file_read_write_test	test_file_io.c	/^file_read_write_test (const char *filename)$/;"	f	file:
file_truncate_test	test_file_io.c	/^file_truncate_test (const char *filename)$/;"	f	file:
filedes	common.h	/^	int 			filedes, savedes ;$/;"	m	struct:__anon66
filelength	common.h	/^	sf_count_t		filelength ;	\/* Overall length of (embedded) file. *\/$/;"	m	struct:sf_private_tag
filename	xi.c	/^	char	filename [22] ;$/;"	m	struct:__anon84	file:
fileoffset	common.h	/^	sf_count_t		fileoffset ;	\/* Offset in number of bytes from beginning of file. *\/$/;"	m	struct:sf_private_tag
fill_coding_history	test_broadcast_var.c	/^fill_coding_history (SF_BROADCAST_INFO_512 * bi)$/;"	f	file:
find_binheader_writefs	binheader_writef_check.py	/^def find_binheader_writefs (data):$/;"	f
find_format_string	binheader_writef_check.py	/^def find_format_string (s):$/;"	f
find_stream_processor	ogg.c	/^find_stream_processor (stream_set *set, ogg_page *page)$/;"	f	file:
five_chan	chanmap.c	/^static const AIFF_CAF_CHANNEL_MAP five_chan [] =$/;"	v	file:
five_channel_dvd_11	chanmap.c	/^static const int five_channel_dvd_11 [5] =$/;"	v	file:
five_channel_dvd_18	chanmap.c	/^static const int five_channel_dvd_18 [5] =$/;"	v	file:
five_channel_dvd_6	chanmap.c	/^static const int five_channel_dvd_6 [5] =$/;"	v	file:
five_channel_mpeg_50_a	chanmap.c	/^static const int five_channel_mpeg_50_a [5] =$/;"	v	file:
five_channel_mpeg_50_b	chanmap.c	/^static const int five_channel_mpeg_50_b [5] =$/;"	v	file:
five_channel_mpeg_50_c	chanmap.c	/^static const int five_channel_mpeg_50_c [5] =$/;"	v	file:
five_channel_mpeg_50_d	chanmap.c	/^static const int five_channel_mpeg_50_d [5] =$/;"	v	file:
five_channel_pentagonal	chanmap.c	/^static const int five_channel_pentagonal [5] =$/;"	v	file:
fl32_MARKER	aiff.c	69;"	d	file:
fl64_MARKER	aiff.c	71;"	d	file:
flac.c	flac.c	1;"	F
flac_buffer_copy	flac.c	/^flac_buffer_copy (SF_PRIVATE *psf)$/;"	f	file:
flac_close	flac.c	/^flac_close	(SF_PRIVATE *psf)$/;"	f	file:
flac_enc_init	flac.c	/^flac_enc_init (SF_PRIVATE *psf)$/;"	f	file:
flac_init	flac.c	/^flac_init (SF_PRIVATE *psf)$/;"	f
flac_open	flac.c	/^flac_open	(SF_PRIVATE *psf)$/;"	f
flac_read_flac2d	flac.c	/^flac_read_flac2d (SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:
flac_read_flac2f	flac.c	/^flac_read_flac2f (SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:
flac_read_flac2i	flac.c	/^flac_read_flac2i (SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:
flac_read_flac2s	flac.c	/^flac_read_flac2s (SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:
flac_read_header	flac.c	/^flac_read_header (SF_PRIVATE *psf)$/;"	f	file:
flac_read_loop	flac.c	/^flac_read_loop (SF_PRIVATE *psf, unsigned len)$/;"	f	file:
flac_seek	flac.c	/^flac_seek (SF_PRIVATE *psf, int UNUSED (mode), sf_count_t offset)$/;"	f	file:
flac_write_d2flac	flac.c	/^flac_write_d2flac (SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:
flac_write_f2flac	flac.c	/^flac_write_f2flac (SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:
flac_write_header	flac.c	/^flac_write_header (SF_PRIVATE *psf, int UNUSED (calc_length))$/;"	f	file:
flac_write_i2flac	flac.c	/^flac_write_i2flac (SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:
flac_write_s2flac	flac.c	/^flac_write_s2flac (SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:
flac_write_strings	flac.c	/^flac_write_strings (SF_PRIVATE *psf, FLAC_PRIVATE* pflac)$/;"	f	file:
flags	common.h	/^	int		flags ;$/;"	m	struct:__anon65
float32.c	float32.c	1;"	F
float32_be_read	float32.c	/^float32_be_read (unsigned char *cptr)$/;"	f
float32_be_write	float32.c	/^float32_be_write (float in, unsigned char *out)$/;"	f
float32_get_capability	float32.c	/^float32_get_capability	(SF_PRIVATE *psf)$/;"	f	file:
float32_init	float32.c	/^float32_init	(SF_PRIVATE *psf)$/;"	f
float32_le_read	float32.c	/^float32_le_read (unsigned char *cptr)$/;"	f
float32_le_write	float32.c	/^float32_le_write (float in, unsigned char *out)$/;"	f
float32_peak_update	float32.c	/^float32_peak_update	(SF_PRIVATE *psf, const float *buffer, int count, sf_count_t indx)$/;"	f	file:
float_int_mult	common.h	/^	int				float_int_mult ;$/;"	m	struct:sf_private_tag
float_le_mono	test_audio_detect.c	/^static unsigned char float_le_mono [] =$/;"	v	file:
float_max	common.h	/^	float			float_max ;$/;"	m	struct:sf_private_tag
fmt_HASH16	w64.c	56;"	d	file:
fmt_MARKER	ms_adpcm.c	35;"	d	file:
fmt_MARKER	rf64.c	47;"	d	file:
fmt_MARKER	wav.c	41;"	d	file:
fmt_flags	caf.c	/^	unsigned int fmt_flags ;$/;"	m	struct:__anon77	file:
fmt_id	caf.c	/^	unsigned int fmt_id ;$/;"	m	struct:__anon77	file:
fmt_is_broken	wav_w64.h	/^	int fmt_is_broken ;$/;"	m	struct:__anon35
fmult	G72x/g72x.c	/^int fmult (int an, int srn)$/;"	f	file:
format	paf.c	/^    int	format ;$/;"	m	struct:__anon93	file:
format	sndfile.h	/^	int			format ;$/;"	m	struct:SF_INFO
format	sndfile.h	/^{	int			format ;$/;"	m	struct:__anon52
format	sndfile.hh	/^		int			format (void) const		{ return p ? p->sfinfo.format : 0 ; }$/;"	f	class:SndfileHandle
format	txw.c	/^{	unsigned char	format, srate, sr2, sr3 ;$/;"	m	struct:__anon60	file:
format	wav_w64.h	/^{	unsigned short		format ;$/;"	m	union:__anon33
format	wav_w64.h	/^{	unsigned short	format ;$/;"	m	struct:__anon24
format	wav_w64.h	/^{	unsigned short	format ;$/;"	m	struct:__anon25
format	wav_w64.h	/^{	unsigned short	format ;$/;"	m	struct:__anon26
format	wav_w64.h	/^{	unsigned short	format ;$/;"	m	struct:__anon28
format	wav_w64.h	/^{	unsigned short	format ;$/;"	m	struct:__anon29
format	wav_w64.h	/^{	unsigned short	format ;$/;"	m	struct:__anon30
format	wav_w64.h	/^{	unsigned short	format ;$/;"	m	struct:__anon32
formatCheck	sndfile.hh	/^SndfileHandle::formatCheck (int fmt, int chans, int srate)$/;"	f	class:SndfileHandle
format_desc	common.h	/^	char			*format_desc ;$/;"	m	struct:sf_private_tag
format_from_extension	sndfile.c	/^format_from_extension (SF_PRIVATE *psf)$/;"	f	file:
four_chan	chanmap.c	/^static const AIFF_CAF_CHANNEL_MAP four_chan [] =$/;"	v	file:
four_channel_ambisonc_b	chanmap.c	/^static const int four_channel_ambisonc_b [4] =$/;"	v	file:
four_channel_dvd_10	chanmap.c	/^static const int four_channel_dvd_10 [4] =$/;"	v	file:
four_channel_dvd_5	chanmap.c	/^static const int four_channel_dvd_5 [4] =$/;"	v	file:
four_channel_itu_23	chanmap.c	/^static const int four_channel_itu_23 [4] =$/;"	v	file:
four_channel_mpeg_40a	chanmap.c	/^static const int four_channel_mpeg_40a [4] =$/;"	v	file:
four_channel_mpeg_40b	chanmap.c	/^static const int four_channel_mpeg_40b [4] =$/;"	v	file:
four_channel_quad	chanmap.c	/^static const int four_channel_quad [4] =$/;"	v	file:
frame	flac.c	/^	const FLAC__Frame *frame ;$/;"	m	struct:__anon88	file:
frame	flac.c	/^sf_flac_write_callback (const FLAC__StreamDecoder * UNUSED (decoder), const FLAC__Frame *frame, const FLAC__int32 * const buffer [], void *client_data)$/;"	v	file:
frame_chain	GSM610/gsm610_priv.h	/^	unsigned char	frame_chain;	\/*   half-byte to carry forward	*\/$/;"	m	struct:gsm_state
frame_index	GSM610/gsm610_priv.h	/^	unsigned char	frame_index;	\/*            odd\/even chaining	*\/$/;"	m	struct:gsm_state
frames	avr.c	/^	int		frames ;	\/* sample length in bytes or words (see rez) *\/$/;"	m	struct:__anon22	file:
frames	dwd.c	/^	unsigned int id, datalen, frames, offset ;$/;"	m	struct:__anon103	file:
frames	sds.c	/^{	int bitwidth, frames ;$/;"	m	struct:tag_SDS_PRIVATE	file:
frames	sndfile.h	/^{	sf_count_t	frames ;		\/* Used to be called samples.  Changed to avoid confusion. *\/$/;"	m	struct:SF_INFO
frames	sndfile.hh	/^		sf_count_t	frames (void) const		{ return p ? p->sfinfo.frames : 0 ; }$/;"	f	class:SndfileHandle
frames	wav_w64.h	/^{	int frames ;$/;"	m	struct:__anon34
free_MARKER	caf.c	45;"	d	file:
free_stream_set	ogg.c	/^free_stream_set (stream_set *set, sf_count_t * len)$/;"	f	file:
fsd	flac.c	/^	FLAC__StreamDecoder *fsd ;$/;"	m	struct:__anon88	file:
fse	flac.c	/^	FLAC__StreamEncoder *fse ;$/;"	m	struct:__anon88	file:
future	sndfile.h	/^	int future [6] ;$/;"	m	struct:__anon59
g721.c	G72x/g721.c	1;"	F
g721_decoder	G72x/g721.c	/^g721_decoder($/;"	f
g721_encoder	G72x/g721.c	/^g721_encoder($/;"	f
g721_test	G72x/g72x_test.c	/^g721_test	(void)$/;"	f	file:
g723_16.c	G72x/g723_16.c	1;"	F
g723_16_decoder	G72x/g723_16.c	/^g723_16_decoder($/;"	f
g723_16_encoder	G72x/g723_16.c	/^g723_16_encoder($/;"	f
g723_24.c	G72x/g723_24.c	1;"	F
g723_24_decoder	G72x/g723_24.c	/^g723_24_decoder($/;"	f
g723_24_encoder	G72x/g723_24.c	/^g723_24_encoder($/;"	f
g723_40.c	G72x/g723_40.c	1;"	F
g723_40_decoder	G72x/g723_40.c	/^int	g723_40_decoder	(int i, G72x_STATE *state_ptr)$/;"	f
g723_40_encoder	G72x/g723_40.c	/^int	g723_40_encoder (int sl, G72x_STATE *state_ptr)$/;"	f
g723_test	G72x/g72x_test.c	/^g723_test	(double margin)$/;"	f	file:
g72x	wav_w64.h	/^	G72x_ADPCM_WAV_FMT	g72x ;$/;"	m	union:__anon33
g72x.c	G72x/g72x.c	1;"	F
g72x.c	g72x.c	1;"	F
g72x.h	G72x/g72x.h	1;"	F
g72x_close	g72x.c	/^g72x_close (SF_PRIVATE *psf)$/;"	f	file:
g72x_decode_block	G72x/g72x.c	/^int g72x_decode_block (G72x_STATE *pstate, const unsigned char *block, short *samples)$/;"	f
g72x_encode_block	G72x/g72x.c	/^int g72x_encode_block (G72x_STATE *pstate, short *samples, unsigned char *block)$/;"	f
g72x_init	g72x.c	/^g72x_init (SF_PRIVATE * psf)$/;"	f
g72x_priv.h	G72x/g72x_priv.h	1;"	F
g72x_read_block	g72x.c	/^g72x_read_block (SF_PRIVATE *psf, G72x_PRIVATE *pg72x, short *ptr, int len)$/;"	f	file:
g72x_read_d	g72x.c	/^g72x_read_d (SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:
g72x_read_f	g72x.c	/^g72x_read_f (SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:
g72x_read_i	g72x.c	/^g72x_read_i (SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:
g72x_read_s	g72x.c	/^g72x_read_s (SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:
g72x_reader_init	G72x/g72x.c	/^struct g72x_state * g72x_reader_init (int codec, int *blocksize, int *samplesperblock)$/;"	f
g72x_seek	g72x.c	/^g72x_seek (SF_PRIVATE *psf, int UNUSED (mode), sf_count_t UNUSED (offset))$/;"	f	file:
g72x_state	G72x/g72x_priv.h	/^struct g72x_state$/;"	s
g72x_state_new	G72x/g72x.c	/^static G72x_STATE * g72x_state_new (void)$/;"	f	file:
g72x_test.c	G72x/g72x_test.c	1;"	F
g72x_test_DEPENDENCIES	G72x/Makefile	/^g72x_test_DEPENDENCIES = .\/libg72x.la$/;"	m
g72x_test_LDADD	G72x/Makefile	/^g72x_test_LDADD = .\/libg72x.la -lm$/;"	m
g72x_test_OBJECTS	G72x/Makefile	/^g72x_test_OBJECTS = $(am_g72x_test_OBJECTS)$/;"	m
g72x_test_SOURCES	G72x/Makefile	/^g72x_test_SOURCES = g72x_test.c$/;"	m
g72x_write_block	g72x.c	/^g72x_write_block (SF_PRIVATE *psf, G72x_PRIVATE *pg72x, const short *ptr, int len)$/;"	f	file:
g72x_write_d	g72x.c	/^g72x_write_d (SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:
g72x_write_f	g72x.c	/^g72x_write_f (SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:
g72x_write_i	g72x.c	/^g72x_write_i (SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:
g72x_write_s	g72x.c	/^g72x_write_s (SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:
g72x_writer_init	G72x/g72x.c	/^struct g72x_state * g72x_writer_init (int codec, int *blocksize, int *samplesperblock)$/;"	f
gain	aiff.c	/^	short		gain ;			\/* in dB, 0 is normal *\/$/;"	m	struct:__anon12	file:
gain	sndfile.h	/^{	int gain ;$/;"	m	struct:__anon57
gen_coding_history	broadcast.c	/^gen_coding_history (char * added_history, int added_history_max, const SF_INFO * psfinfo)$/;"	f	file:
gen_signal_double	G72x/g72x_test.c	/^gen_signal_double (double *gendata, double scale, int gendatalen)$/;"	f	file:
getString	sndfile.hh	/^SndfileHandle::getString (int str_type) const$/;"	f	class:SndfileHandle
get_encoding	ircam.c	/^get_encoding (int subformat)$/;"	f	file:
get_encoding_str	ircam.c	/^get_encoding_str (int encoding)$/;"	f	file:
get_filelen	sndfile.h	/^{	sf_vio_get_filelen	get_filelen ;$/;"	m	struct:SF_VIRTUAL_IO
get_loop_mode	aiff.c	/^get_loop_mode (short mode)$/;"	f	file:
get_loop_mode_str	aiff.c	/^get_loop_mode_str (short mode)$/;"	f	file:
get_param_list	binheader_writef_check.py	/^def get_param_list (data):$/;"	f
gsm	GSM610/gsm.h	/^typedef struct gsm_state * 	gsm;$/;"	t	typeref:struct:gsm_state
gsm.h	GSM610/gsm.h	1;"	F
gsm610	wav_w64.h	/^	GSM610_WAV_FMT		gsm610 ;$/;"	m	union:__anon33
gsm610.c	gsm610.c	1;"	F
gsm610_close	gsm610.c	/^gsm610_close	(SF_PRIVATE *psf)$/;"	f	file:
gsm610_decode_block	gsm610.c	/^gsm610_decode_block	(SF_PRIVATE *psf, GSM610_PRIVATE *pgsm610)$/;"	f	file:
gsm610_encode_block	gsm610.c	/^gsm610_encode_block	(SF_PRIVATE *psf, GSM610_PRIVATE *pgsm610)$/;"	f	file:
gsm610_init	gsm610.c	/^gsm610_init	(SF_PRIVATE *psf)$/;"	f
gsm610_priv.h	GSM610/gsm610_priv.h	1;"	F
gsm610_read_block	gsm610.c	/^gsm610_read_block	(SF_PRIVATE *psf, GSM610_PRIVATE *pgsm610, short *ptr, int len)$/;"	f	file:
gsm610_read_d	gsm610.c	/^gsm610_read_d	(SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:
gsm610_read_f	gsm610.c	/^gsm610_read_f	(SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:
gsm610_read_i	gsm610.c	/^gsm610_read_i	(SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:
gsm610_read_s	gsm610.c	/^gsm610_read_s	(SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:
gsm610_seek	gsm610.c	/^gsm610_seek	(SF_PRIVATE *psf, int UNUSED (mode), sf_count_t offset)$/;"	f	file:
gsm610_tag	gsm610.c	/^typedef struct gsm610_tag$/;"	s	file:
gsm610_wav_decode_block	gsm610.c	/^gsm610_wav_decode_block	(SF_PRIVATE *psf, GSM610_PRIVATE *pgsm610)$/;"	f	file:
gsm610_wav_encode_block	gsm610.c	/^gsm610_wav_encode_block	(SF_PRIVATE *psf, GSM610_PRIVATE *pgsm610)$/;"	f	file:
gsm610_write_block	gsm610.c	/^gsm610_write_block	(SF_PRIVATE *psf, GSM610_PRIVATE *pgsm610, const short *ptr, int len)$/;"	f	file:
gsm610_write_d	gsm610.c	/^gsm610_write_d	(SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:
gsm610_write_f	gsm610.c	/^gsm610_write_f	(SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:
gsm610_write_i	gsm610.c	/^gsm610_write_i	(SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:
gsm610_write_s	gsm610.c	/^gsm610_write_s	(SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:
gsm_A	GSM610/table.c	/^word gsm_A[8]   = {20480, 20480, 20480,  20480,  13964,  15360,   8534,  9036};$/;"	v
gsm_B	GSM610/table.c	/^word gsm_B[8]   = {    0,     0,  2048,  -2560,     94,  -1792,   -341, -1144};$/;"	v
gsm_DLB	GSM610/table.c	/^word gsm_DLB[4] = {  6554,    16384,	26214,	   32767	};$/;"	v
gsm_FAC	GSM610/table.c	/^word gsm_FAC[8]	= { 18431, 20479, 22527, 24575, 26623, 28671, 30719, 32767 };$/;"	v
gsm_H	GSM610/table.c	/^word gsm_H[11] = {-134, -374, 0, 2054, 5741, 8192, 5741, 2054, 0, -374, -134 };$/;"	v
gsm_INVA	GSM610/table.c	/^word gsm_INVA[8]={ 13107, 13107,  13107, 13107,  19223, 17476,  31454, 29708 };$/;"	v
gsm_L_add	GSM610/add.c	/^longword gsm_L_add ( longword a, longword b)$/;"	f
gsm_L_asl	GSM610/add.c	/^longword gsm_L_asl (longword a, int n)$/;"	f
gsm_L_asr	GSM610/add.c	/^longword gsm_L_asr (longword a, int n)$/;"	f
gsm_L_mult	GSM610/add.c	/^longword gsm_L_mult (word a, word b)$/;"	f
gsm_L_sub	GSM610/add.c	/^longword gsm_L_sub ( longword a, longword b)$/;"	f
gsm_MAC	GSM610/table.c	/^word gsm_MAC[8] = {  31,    31,    15,     15,      7,      7,      3,     3 };$/;"	v
gsm_MIC	GSM610/table.c	/^word gsm_MIC[8] = { -32,   -32,   -16,    -16,     -8,     -8,     -4,    -4 };$/;"	v
gsm_NRFAC	GSM610/table.c	/^word gsm_NRFAC[8] = { 29128, 26215, 23832, 21846, 20165, 18725, 17476, 16384 };$/;"	v
gsm_QLB	GSM610/table.c	/^word gsm_QLB[4] = {  3277,    11469,	21299,	   32767	};$/;"	v
gsm_abs	GSM610/add.c	/^word gsm_abs (word a)$/;"	f
gsm_add	GSM610/add.c	/^word gsm_add ( word a, word b)$/;"	f
gsm_asl	GSM610/add.c	/^word gsm_asl (word a, int n)$/;"	f
gsm_asr	GSM610/add.c	/^word gsm_asr (word a, int n)$/;"	f
gsm_byte	GSM610/gsm.h	/^typedef unsigned char		gsm_byte;$/;"	t
gsm_create	GSM610/gsm_create.c	/^gsm gsm_create (void)$/;"	f
gsm_create.c	GSM610/gsm_create.c	1;"	F
gsm_data	gsm610.c	/^	gsm				gsm_data ;$/;"	m	struct:gsm610_tag	file:
gsm_debug_longword	GSM610/gsm610_priv.h	289;"	d
gsm_debug_longwords	GSM610/gsm610_priv.h	287;"	d
gsm_debug_word	GSM610/gsm610_priv.h	288;"	d
gsm_debug_words	GSM610/gsm610_priv.h	286;"	d
gsm_decode	GSM610/gsm_decode.c	/^int gsm_decode (gsm s, gsm_byte * c, gsm_signal * target)$/;"	f
gsm_decode.c	GSM610/gsm_decode.c	1;"	F
gsm_destroy	GSM610/gsm_destroy.c	/^void gsm_destroy (gsm S)$/;"	f
gsm_destroy.c	GSM610/gsm_destroy.c	1;"	F
gsm_div	GSM610/add.c	/^word gsm_div (word num, word denum)$/;"	f
gsm_encode	GSM610/gsm_encode.c	/^void gsm_encode (gsm s, gsm_signal * source, gsm_byte * c)$/;"	f
gsm_encode.c	GSM610/gsm_encode.c	1;"	F
gsm_frame	GSM610/gsm.h	/^typedef gsm_byte 			gsm_frame[33];		\/* 33 * 8 bits	 *\/$/;"	t
gsm_init	GSM610/gsm_create.c	/^void gsm_init (gsm state)$/;"	f
gsm_mult	GSM610/add.c	/^word gsm_mult ( word a, word b)$/;"	f
gsm_mult_r	GSM610/add.c	/^word gsm_mult_r ( word a, word b)$/;"	f
gsm_norm	GSM610/add.c	/^word gsm_norm (longword a )$/;"	f
gsm_option	GSM610/gsm_option.c	/^int gsm_option (gsm r, int opt, int * val)$/;"	f
gsm_option.c	GSM610/gsm_option.c	1;"	F
gsm_signal	GSM610/gsm.h	/^typedef short		   		gsm_signal;		\/* signed 16 bit *\/$/;"	t
gsm_state	GSM610/gsm610_priv.h	/^struct gsm_state$/;"	s
gsm_sub	GSM610/add.c	/^word gsm_sub ( word a, word b)$/;"	f
guess_file_type	sndfile.c	/^guess_file_type (SF_PRIVATE *psf)$/;"	f	file:
handle	common.h	/^	void 			*handle, *hsaved ;$/;"	m	struct:__anon66
handle_file	binheader_writef_check.py	/^def handle_file (fname):$/;"	f
has_text	common.h	/^	int				has_text ;$/;"	m	struct:sf_private_tag
have_written	common.h	/^	int				have_written ;	\/* Has a single write been done to the file? *\/$/;"	m	struct:sf_private_tag
headend	common.h	/^	int				headindex, headend ;$/;"	m	struct:sf_private_tag
header	common.h	/^	unsigned char	header		[SF_HEADER_LEN] ; \/* Must be unsigned *\/$/;"	m	struct:sf_private_tag
header_gets	common.c	/^header_gets (SF_PRIVATE *psf, char *ptr, int bufsize)$/;"	f	file:
header_put_be_3byte	common.c	/^header_put_be_3byte (SF_PRIVATE *psf, int x)$/;"	f	file:
header_put_be_8byte	common.c	/^header_put_be_8byte (SF_PRIVATE *psf, sf_count_t x)$/;"	f	file:
header_put_be_int	common.c	/^header_put_be_int (SF_PRIVATE *psf, int x)$/;"	f	file:
header_put_be_short	common.c	/^header_put_be_short (SF_PRIVATE *psf, int x)$/;"	f	file:
header_put_byte	common.c	/^header_put_byte (SF_PRIVATE *psf, char x)$/;"	f	file:
header_put_le_3byte	common.c	/^header_put_le_3byte (SF_PRIVATE *psf, int x)$/;"	f	file:
header_put_le_8byte	common.c	/^header_put_le_8byte (SF_PRIVATE *psf, sf_count_t x)$/;"	f	file:
header_put_le_int	common.c	/^header_put_le_int (SF_PRIVATE *psf, int x)$/;"	f	file:
header_put_le_short	common.c	/^header_put_le_short (SF_PRIVATE *psf, int x)$/;"	f	file:
header_put_marker	common.c	/^header_put_marker (SF_PRIVATE *psf, int x)$/;"	f	file:
header_read	common.c	/^header_read (SF_PRIVATE *psf, void *ptr, int bytes)$/;"	f	file:
header_seek	common.c	/^header_seek (SF_PRIVATE *psf, sf_count_t position, int whence)$/;"	f	file:
headindex	common.h	/^	int				headindex, headend ;$/;"	m	struct:sf_private_tag
hexdump	strings.c	/^hexdump (void *data, int len)$/;"	f	file:
highNote	aiff.c	/^	char		highNote ;$/;"	m	struct:__anon12	file:
highVelocity	aiff.c	/^	char		highVelocity ;	\/* 1 to 127 *\/$/;"	m	struct:__anon12	file:
host	G72x/Makefile	/^host = i686-pc-linux-gnu$/;"	m
host	GSM610/Makefile	/^host = i686-pc-linux-gnu$/;"	m
host	Makefile	/^host = i686-pc-linux-gnu$/;"	m
host_alias	G72x/Makefile	/^host_alias = $/;"	m
host_alias	GSM610/Makefile	/^host_alias = $/;"	m
host_alias	Makefile	/^host_alias = $/;"	m
host_cpu	G72x/Makefile	/^host_cpu = i686$/;"	m
host_cpu	GSM610/Makefile	/^host_cpu = i686$/;"	m
host_cpu	Makefile	/^host_cpu = i686$/;"	m
host_os	G72x/Makefile	/^host_os = linux-gnu$/;"	m
host_os	GSM610/Makefile	/^host_os = linux-gnu$/;"	m
host_os	Makefile	/^host_os = linux-gnu$/;"	m
host_read_d	double64.c	/^host_read_d	(SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:
host_read_d2f	double64.c	/^host_read_d2f	(SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:
host_read_d2i	double64.c	/^host_read_d2i	(SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:
host_read_d2s	double64.c	/^host_read_d2s	(SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:
host_read_f	float32.c	/^host_read_f	(SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:
host_read_f2d	float32.c	/^host_read_f2d	(SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:
host_read_f2i	float32.c	/^host_read_f2i	(SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:
host_read_f2s	float32.c	/^host_read_f2s	(SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:
host_triplet	G72x/Makefile	/^host_triplet = i686-pc-linux-gnu$/;"	m
host_triplet	GSM610/Makefile	/^host_triplet = i686-pc-linux-gnu$/;"	m
host_triplet	Makefile	/^host_triplet = i686-pc-linux-gnu$/;"	m
host_vendor	G72x/Makefile	/^host_vendor = pc$/;"	m
host_vendor	GSM610/Makefile	/^host_vendor = pc$/;"	m
host_vendor	Makefile	/^host_vendor = pc$/;"	m
host_write_d	double64.c	/^host_write_d	(SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:
host_write_d2f	float32.c	/^host_write_d2f	(SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:
host_write_f	float32.c	/^host_write_f	(SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:
host_write_f2d	double64.c	/^host_write_f2d	(SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:
host_write_i2d	double64.c	/^host_write_i2d	(SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:
host_write_i2f	float32.c	/^host_write_i2f	(SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:
host_write_s2d	double64.c	/^host_write_s2d	(SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:
host_write_s2f	float32.c	/^host_write_s2f	(SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:
hsaved	common.h	/^	void 			*handle, *hsaved ;$/;"	m	struct:__anon66
htk.c	htk.c	1;"	F
htk_close	htk.c	/^htk_close	(SF_PRIVATE *psf)$/;"	f	file:
htk_open	htk.c	/^htk_open	(SF_PRIVATE *psf)$/;"	f
htk_read_header	htk.c	/^htk_read_header (SF_PRIVATE *psf)$/;"	f	file:
htk_write_header	htk.c	/^htk_write_header (SF_PRIVATE *psf, int calc_length)$/;"	f	file:
htmldir	G72x/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	GSM610/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	Makefile	/^htmldir = ${docdir}$/;"	m
htmldocdir	G72x/Makefile	/^htmldocdir = \/usr\/local\/share\/doc\/libsndfile1-dev\/html$/;"	m
htmldocdir	GSM610/Makefile	/^htmldocdir = \/usr\/local\/share\/doc\/libsndfile1-dev\/html$/;"	m
htmldocdir	Makefile	/^htmldocdir = \/usr\/local\/share\/doc\/libsndfile1-dev\/html$/;"	m
i2alaw_array	alaw.c	/^i2alaw_array (const int *ptr, int count, unsigned char *buffer)$/;"	f	file:
i2bes_array	pcm.c	/^i2bes_array (const int *src, short *dest, int count)$/;"	f	file:
i2bet_array	pcm.c	/^i2bet_array (const int *src, tribyte *dest, int count)$/;"	f	file:
i2d_array	double64.c	/^i2d_array (const int *src, double *dest, int count, double scale)$/;"	f	file:
i2dles_array	xi.c	/^i2dles_array (XI_PRIVATE *pxi, const int *src, short *dest, int count)$/;"	f	file:
i2dsc_array	xi.c	/^i2dsc_array (XI_PRIVATE *pxi, const int *src, signed char *dest, int count)$/;"	f	file:
i2f_array	float32.c	/^i2f_array (const int *src, float *dest, int count, float scale)$/;"	f	file:
i2flac16_array	flac.c	/^i2flac16_array (const int *src, FLAC__int32 *dest, int count)$/;"	f	file:
i2flac24_array	flac.c	/^i2flac24_array (const int *src, FLAC__int32 *dest, int count)$/;"	f	file:
i2flac8_array	flac.c	/^i2flac8_array (const int *src, FLAC__int32 *dest, int count)$/;"	f	file:
i2les_array	pcm.c	/^i2les_array (const int *src, short *dest, int count)$/;"	f	file:
i2let_array	pcm.c	/^i2let_array (const int *src, tribyte *dest, int count)$/;"	f	file:
i2sc_array	pcm.c	/^i2sc_array	(const int *src, signed char *dest, int count)$/;"	f	file:
i2uc_array	pcm.c	/^i2uc_array	(const int *src, unsigned char *dest, int count)$/;"	f	file:
i2ulaw_array	ulaw.c	/^i2ulaw_array (const int *ptr, int count, unsigned char *buffer)$/;"	f	file:
iXML_MARKER	wav.c	58;"	d	file:
ibuf	common.h	/^		int				ibuf	[SF_BUFFER_LEN \/ sizeof (int)] ;$/;"	m	union:sf_private_tag::__anon71
id	dwd.c	/^	unsigned int id, datalen, frames, offset ;$/;"	m	struct:__anon103	file:
id	ogg.c	/^{	int id ;$/;"	m	struct:__anon79	file:
id	sd2.c	/^	int id ;$/;"	m	struct:__anon92	file:
id	wav_w64.c	/^{	int id ;$/;"	m	struct:chanmap_s	file:
id3.c	id3.c	1;"	F
id3_skip	id3.c	/^id3_skip (SF_PRIVATE * psf)$/;"	f
ieee_replace	common.h	/^	int				ieee_replace ;$/;"	m	struct:sf_private_tag
ima	wav_w64.h	/^	IMA_ADPCM_WAV_FMT	ima ;$/;"	m	union:__anon33
ima4_MARKER	aiff.c	81;"	d	file:
ima4_MARKER	caf.c	46;"	d	file:
ima_adpcm.c	ima_adpcm.c	1;"	F
ima_close	ima_adpcm.c	/^ima_close	(SF_PRIVATE *psf)$/;"	f	file:
ima_indx_adjust	ima_adpcm.c	/^static int ima_indx_adjust [16] =$/;"	v	file:
ima_oki_adpcm.c	ima_oki_adpcm.c	1;"	F
ima_oki_adpcm.h	ima_oki_adpcm.h	1;"	F
ima_oki_adpcm_decode_block	ima_oki_adpcm.c	/^ima_oki_adpcm_decode_block	(IMA_OKI_ADPCM * state)$/;"	f
ima_oki_adpcm_encode_block	ima_oki_adpcm.c	/^ima_oki_adpcm_encode_block (IMA_OKI_ADPCM * state)$/;"	f
ima_oki_adpcm_init	ima_oki_adpcm.c	/^ima_oki_adpcm_init (IMA_OKI_ADPCM * state, IMA_OKI_ADPCM_TYPE type)$/;"	f
ima_read_block	ima_adpcm.c	/^ima_read_block (SF_PRIVATE *psf, IMA_ADPCM_PRIVATE *pima, short *ptr, int len)$/;"	f	file:
ima_read_d	ima_adpcm.c	/^ima_read_d (SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:
ima_read_f	ima_adpcm.c	/^ima_read_f (SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:
ima_read_i	ima_adpcm.c	/^ima_read_i (SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:
ima_read_s	ima_adpcm.c	/^ima_read_s (SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:
ima_reader_init	ima_adpcm.c	/^ima_reader_init (SF_PRIVATE *psf, int blockalign, int samplesperblock)$/;"	f	file:
ima_seek	ima_adpcm.c	/^ima_seek (SF_PRIVATE *psf, int mode, sf_count_t offset)$/;"	f	file:
ima_step_size	ima_adpcm.c	/^static int ima_step_size [89] =$/;"	v	file:
ima_steps	ima_oki_adpcm.c	/^static int const ima_steps [] =	\/* ~16-bit precision *\/$/;"	v	file:
ima_write_block	ima_adpcm.c	/^ima_write_block (SF_PRIVATE *psf, IMA_ADPCM_PRIVATE *pima, const short *ptr, int len)$/;"	f	file:
ima_write_d	ima_adpcm.c	/^ima_write_d (SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:
ima_write_f	ima_adpcm.c	/^ima_write_f (SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:
ima_write_i	ima_adpcm.c	/^ima_write_i (SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:
ima_write_s	ima_adpcm.c	/^ima_write_s (SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:
ima_writer_init	ima_adpcm.c	/^ima_writer_init (SF_PRIVATE *psf, int blockalign)$/;"	f	file:
in24_MARKER	aiff.c	64;"	d	file:
in32_MARKER	aiff.c	66;"	d	file:
in_headers	ogg.c	/^	int in_headers ;$/;"	m	struct:__anon83	file:
include_HEADERS	Makefile	/^include_HEADERS = sndfile.hh$/;"	m
includedir	G72x/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	GSM610/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	Makefile	/^includedir = ${prefix}\/include$/;"	m
index	dwvw.c	/^	{	int				index, end ;$/;"	m	struct:__anon19::__anon20	file:
info_MARKER	caf.c	47;"	d	file:
infodir	G72x/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	GSM610/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	Makefile	/^infodir = ${datarootdir}\/info$/;"	m
inst_MARKER	caf.c	48;"	d	file:
install_sh	G72x/Makefile	/^install_sh = ${SHELL} \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23\/Cfg\/install-sh$/;"	m
install_sh	GSM610/Makefile	/^install_sh = ${SHELL} \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23\/Cfg\/install-sh$/;"	m
install_sh	Makefile	/^install_sh = ${SHELL} \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23\/Cfg\/install-sh$/;"	m
install_sh_DATA	G72x/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	GSM610/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_PROGRAM	G72x/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	GSM610/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_SCRIPT	G72x/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	GSM610/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
instrument	common.h	/^	SF_INSTRUMENT	*instrument ;$/;"	m	struct:sf_private_tag
int24_32_le_stereo	test_audio_detect.c	/^static unsigned char int24_32_le_stereo [] =$/;"	v	file:
int64_t	sfendian.h	/^typedef __int64 int64_t ;$/;"	t
int64_t	sfendian.h	/^typedef long int64_t ;$/;"	t
int64_t	sfendian.h	/^typedef long long int64_t ;$/;"	t
interleave	common.h	/^	void			*interleave ;$/;"	m	struct:sf_private_tag
interleave.c	interleave.c	1;"	F
interleave_init	interleave.c	/^interleave_init	(SF_PRIVATE *psf)$/;"	f
interleave_read_double	interleave.c	/^interleave_read_double	(SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:
interleave_read_float	interleave.c	/^interleave_read_float	(SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:
interleave_read_int	interleave.c	/^interleave_read_int	(SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:
interleave_read_short	interleave.c	/^interleave_read_short	(SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:
interleave_seek	interleave.c	/^interleave_seek	(SF_PRIVATE *psf, int mode, sf_count_t samples_from_start)$/;"	f	file:
ircam.c	ircam.c	1;"	F
ircam_close	ircam.c	/^ircam_close	(SF_PRIVATE *psf)$/;"	f	file:
ircam_open	ircam.c	/^ircam_open	(SF_PRIVATE *psf)$/;"	f
ircam_read_header	ircam.c	/^ircam_read_header	(SF_PRIVATE *psf)$/;"	f	file:
ircam_write_header	ircam.c	/^ircam_write_header (SF_PRIVATE *psf, int UNUSED (calc_length))$/;"	f	file:
is_pipe	common.h	/^	int				is_pipe ;		\/* True if file is a pipe. *\/$/;"	m	struct:sf_private_tag
isillegal	ogg.c	/^	int isillegal ;$/;"	m	struct:__anon82	file:
isnew	ogg.c	/^	int isnew ;$/;"	m	struct:__anon82	file:
item_offset	sd2.c	/^	int item_offset ;$/;"	m	struct:__anon91	file:
j	GSM610/gsm610_priv.h	/^	word			j;				\/*                              *\/$/;"	m	struct:gsm_state
junk_HASH16	w64.c	74;"	d	file:
key_hi	sndfile.h	/^	char key_lo, key_hi ;$/;"	m	struct:__anon57
key_lo	sndfile.h	/^	char key_lo, key_hi ;$/;"	m	struct:__anon57
kuki_MARKER	caf.c	49;"	d	file:
l	common.h	/^	} l [100] ;$/;"	m	struct:__anon73	typeref:struct:__anon73::__anon74
labl_MARKER	wav.c	53;"	d	file:
last_16	xi.c	/^	short	last_16 ;$/;"	m	struct:__anon84	file:
last_delta_width	dwvw.c	/^	int		bit_count, bits, last_delta_width, last_sample ;$/;"	m	struct:__anon19	file:
last_op	common.h	/^	int				last_op ;		\/* Last operation; either SFM_READ or SFM_WRITE *\/$/;"	m	struct:sf_private_tag
last_output	ima_oki_adpcm.h	/^	int last_output ;$/;"	m	struct:__anon37
last_sample	dwvw.c	/^	int		bit_count, bits, last_delta_width, last_sample ;$/;"	m	struct:__anon19	file:
lastgranulepos	ogg.c	/^	sf_count_t lastgranulepos ;$/;"	m	struct:__anon82	file:
lbeg	avr.c	/^	int		lbeg ;		\/* offset to start of loop in bytes or words. *\/$/;"	m	struct:__anon22	file:
lbuf	common.h	/^		int64_t			lbuf	[SF_BUFFER_LEN \/ sizeof (int64_t)] ;$/;"	m	union:sf_private_tag::__anon71
lbuf	common.h	/^		long			lbuf	[SF_BUFFER_LEN \/ sizeof (double)] ;$/;"	m	union:sf_private_tag::__anon71
le_float	audio_detect.c	/^{	int le_float ;$/;"	m	struct:__anon21	file:
le_int_24_32	audio_detect.c	/^	int le_int_24_32 ;$/;"	m	struct:__anon21	file:
lei2d_array	pcm.c	/^lei2d_array (int *src, int count, double *dest, double normfact)$/;"	f	file:
lei2f_array	pcm.c	/^lei2f_array (int *src, int count, float *dest, float normfact)$/;"	f	file:
lei2s_array	pcm.c	/^lei2s_array (int *src, int count, short *dest)$/;"	f	file:
len	chanmap.c	/^	int len ;$/;"	m	struct:__anon102	file:
len	common.h	/^		sf_count_t len ;$/;"	m	struct:__anon73::__anon74
len	flac.c	/^	unsigned pos, len, remain ;$/;"	m	struct:__anon88	file:
lend	avr.c	/^	int		lend ;		\/* offset to end of loop in bytes or words. *\/$/;"	m	struct:__anon22	file:
length	sndfile.h	/^	sf_count_t	length ;$/;"	m	struct:__anon55
les2d_array	pcm.c	/^les2d_array (short *src, int count, double *dest, double normfact)$/;"	f	file:
les2f_array	pcm.c	/^les2f_array (short *src, int count, float *dest, float normfact)$/;"	f	file:
les2i_array	pcm.c	/^les2i_array (short *src, int count, int *dest)$/;"	f	file:
let2d_array	pcm.c	/^let2d_array (tribyte *src, int count, double *dest, double normfact)$/;"	f	file:
let2f_array	pcm.c	/^let2f_array (tribyte *src, int count, float *dest, float normfact)$/;"	f	file:
let2i_array	pcm.c	/^let2i_array (tribyte *src, int count, int *dest)$/;"	f	file:
let2s_array	pcm.c	/^let2s_array (tribyte *src, int count, short *dest)$/;"	f	file:
level	sndfile.h	/^	double		level ;$/;"	m	struct:__anon54
levl_HASH16	w64.c	68;"	d	file:
levl_MARKER	wav.c	59;"	d	file:
lib_LTLIBRARIES	Makefile	/^lib_LTLIBRARIES = libsndfile.la$/;"	m
libcommon_la_LIBADD	Makefile	/^libcommon_la_LIBADD =$/;"	m
libcommon_la_OBJECTS	Makefile	/^libcommon_la_OBJECTS = $(am_libcommon_la_OBJECTS)$/;"	m
libcommon_la_SOURCES	Makefile	/^libcommon_la_SOURCES = $(COMMON)$/;"	m
libdir	G72x/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	GSM610/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libexecdir	G72x/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	GSM610/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libg72x_la_LIBADD	G72x/Makefile	/^libg72x_la_LIBADD =$/;"	m
libg72x_la_OBJECTS	G72x/Makefile	/^libg72x_la_OBJECTS = $(am_libg72x_la_OBJECTS)$/;"	m
libg72x_la_SOURCES	G72x/Makefile	/^libg72x_la_SOURCES = $(CFILES) $(noinst_HEADERS)$/;"	m
libgsm_la_LIBADD	GSM610/Makefile	/^libgsm_la_LIBADD =$/;"	m
libgsm_la_OBJECTS	GSM610/Makefile	/^libgsm_la_OBJECTS = $(am_libgsm_la_OBJECTS)$/;"	m
libgsm_la_SOURCES	GSM610/Makefile	/^libgsm_la_SOURCES = $(CFILES) $(noinst_HEADERS)$/;"	m
libsndfile_la_DEPENDENCIES	Makefile	/^libsndfile_la_DEPENDENCIES = libcommon.la GSM610\/libgsm.la \\$/;"	m
libsndfile_la_LDFLAGS	Makefile	/^libsndfile_la_LDFLAGS = -no-undefined -version-info 1:23:0 -Wl,--version-script=$(srcdir)\/Symbols.gnu-binutils$/;"	m
libsndfile_la_LIBADD	Makefile	/^libsndfile_la_LIBADD = libcommon.la GSM610\/libgsm.la G72x\/libg72x.la \\$/;"	m
libsndfile_la_LINK	Makefile	/^libsndfile_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
libsndfile_la_OBJECTS	Makefile	/^libsndfile_la_OBJECTS = $(am_libsndfile_la_OBJECTS) \\$/;"	m
libsndfile_la_SOURCES	Makefile	/^libsndfile_la_SOURCES = $(FILESPECIFIC) $(noinst_HEADERS)$/;"	m
linux_symbols	create_symbols_file.py	/^def linux_symbols (progname, version):$/;"	f
list_HASH16	w64.c	71;"	d	file:
loc	ogg.c	/^	sf_count_t loc ;$/;"	m	struct:__anon81	file:
localedir	G72x/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	GSM610/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localstatedir	G72x/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	GSM610/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	Makefile	/^localstatedir = ${prefix}\/var$/;"	m
log_putchar	common.c	/^log_putchar (SF_PRIVATE *psf, char ch)$/;"	f	file:
logbuffer	common.h	/^	char			logbuffer	[SF_BUFFER_LEN] ;$/;"	m	struct:sf_private_tag
logindex	common.h	/^	int				logindex ;$/;"	m	struct:sf_private_tag
long_term.c	GSM610/long_term.c	1;"	F
longword	GSM610/gsm610_priv.h	/^typedef int					longword;	\/* 32 bit signed int	*\/$/;"	t
loop	avr.c	/^	short	loop ;		\/* 0 = no loop, 0xffff = looping sample *\/$/;"	m	struct:__anon22	file:
loopType	aiff.c	/^	unsigned short	loopType ;$/;"	m	struct:__anon15	file:
loop_begin	xi.c	/^	int		loop_begin, loop_end ;$/;"	m	struct:__anon84	file:
loop_count	sndfile.h	/^	int loop_count ;$/;"	m	struct:__anon57
loop_end	xi.c	/^	int		loop_begin, loop_end ;$/;"	m	struct:__anon84	file:
loop_info	common.h	/^	SF_LOOP_INFO	*loop_info ;$/;"	m	struct:sf_private_tag
loop_mode	sndfile.h	/^	int		loop_mode ;		\/* see SF_LOOP enum             *\/$/;"	m	struct:__anon59
loops	sndfile.h	/^	} loops [16] ; \/* make variable in a sensible way *\/$/;"	m	struct:__anon57	typeref:struct:__anon57::__anon58
lowNote	aiff.c	/^	char		lowNote ;$/;"	m	struct:__anon12	file:
lowVelocity	aiff.c	/^	char		lowVelocity ;	\/* 1 to 127 *\/$/;"	m	struct:__anon12	file:
lpc.c	GSM610/lpc.c	1;"	F
lpcm_MARKER	caf.c	50;"	d	file:
lsf1_MARKER	sd2.c	48;"	d	file:
lt_ECHO	G72x/Makefile	/^lt_ECHO = echo$/;"	m
lt_ECHO	GSM610/Makefile	/^lt_ECHO = echo$/;"	m
lt_ECHO	Makefile	/^lt_ECHO = echo$/;"	m
ltp_cut	GSM610/gsm610_priv.h	/^	word	        ltp_cut;        \/* long_term.c, LTP crosscorr.  *\/$/;"	m	struct:gsm_state
ltxt_MARKER	wav.c	54;"	d	file:
m3ga_MARKER	aiff.c	89;"	d	file:
macbinary3.c	macbinary3.c	1;"	F
macos.c	macos.c	1;"	F
macos_guess_file_type	macos.c	/^macos_guess_file_type (SF_PRIVATE * psf, const char *filename)$/;"	f
main	G72x/g72x_test.c	/^main (int argc, char *argv [])$/;"	f
main	ima_oki_adpcm.c	/^main (void)$/;"	f
main	test_main.c	/^main (void)$/;"	f
major	dwd.c	/^{	unsigned char major, minor, compression, channels, bitwidth ;$/;"	m	struct:__anon103	file:
major_formats	command.c	/^static SF_FORMAT_INFO const major_formats [] =$/;"	v	file:
make-static-lib-hidden-privates.sh	make-static-lib-hidden-privates.sh	1;"	F
make_data	test_file_io.c	/^make_data (int *data, int len, int seed)$/;"	f	file:
make_size_t	common.h	/^make_size_t (int x)$/;"	f
mandir	G72x/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	GSM610/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	Makefile	/^mandir = ${datarootdir}\/man$/;"	m
map	chanmap.c	/^static const MAP_MAP map [] =$/;"	v	file:
map	chanmap.c	/^{	const AIFF_CAF_CHANNEL_MAP * map ;$/;"	m	struct:__anon102	file:
map_length	sd2.c	/^	int map_offset, map_length ;$/;"	m	struct:__anon91	file:
map_offset	sd2.c	/^	int map_offset, map_length ;$/;"	m	struct:__anon91	file:
mark_MARKER	caf.c	51;"	d	file:
marker	avr.c	/^{	int		marker ;	\/* 2BIT *\/$/;"	m	struct:__anon22	file:
markerID	aiff.c	/^{	unsigned short	markerID ;$/;"	m	struct:__anon16	file:
marker_to_position	aiff.c	/^marker_to_position (const MARK_ID_POS *m, unsigned short n, int marksize)$/;"	f	file:
markstr	aiff.c	/^	MARK_ID_POS *markstr ;$/;"	m	struct:__anon17	file:
mask	ima_oki_adpcm.h	/^	int mask ;$/;"	m	struct:__anon37
mat4.c	mat4.c	1;"	F
mat4_close	mat4.c	/^mat4_close	(SF_PRIVATE *psf)$/;"	f	file:
mat4_format_to_encoding	mat4.c	/^mat4_format_to_encoding (int format, int endian)$/;"	f	file:
mat4_marker_to_str	mat4.c	/^mat4_marker_to_str (int marker)$/;"	f	file:
mat4_open	mat4.c	/^mat4_open	(SF_PRIVATE *psf)$/;"	f
mat4_read_header	mat4.c	/^mat4_read_header (SF_PRIVATE *psf)$/;"	f	file:
mat4_write_header	mat4.c	/^mat4_write_header (SF_PRIVATE *psf, int calc_length)$/;"	f	file:
mat5.c	mat5.c	1;"	F
mat5_close	mat5.c	/^mat5_close	(SF_PRIVATE *psf)$/;"	f	file:
mat5_open	mat5.c	/^mat5_open	(SF_PRIVATE *psf)$/;"	f
mat5_read_header	mat5.c	/^mat5_read_header (SF_PRIVATE *psf)$/;"	f	file:
mat5_write_header	mat5.c	/^mat5_write_header (SF_PRIVATE *psf, int calc_length)$/;"	f	file:
max_blocks	paf.c	/^{	int				max_blocks, channels, samplesperblock, blocksize ;$/;"	m	struct:__anon94	file:
max_delta	dwvw.c	/^{	int		dwm_maxsize, bit_width, max_delta, span ;$/;"	m	struct:__anon19	file:
max_step_index	ima_oki_adpcm.h	/^	int max_step_index ;$/;"	m	struct:__anon37
maxval	dwd.c	/^	unsigned short srate, maxval ;$/;"	m	struct:__anon103	file:
metadata	flac.c	/^	FLAC__StreamMetadata *metadata ;$/;"	m	struct:__anon88	file:
metadata	flac.c	/^sf_flac_meta_callback (const FLAC__StreamDecoder * UNUSED (decoder), const FLAC__StreamMetadata *metadata, void *client_data)$/;"	v	file:
midi	avr.c	/^	short	midi ;		\/* 0xffff = no MIDI note assigned,  *\/$/;"	m	struct:__anon22	file:
midi_MARKER	caf.c	52;"	d	file:
min	wav_w64.h	/^	MIN_WAV_FMT			min ;$/;"	m	union:__anon33
minor	dwd.c	/^{	unsigned char major, minor, compression, channels, bitwidth ;$/;"	m	struct:__anon103	file:
mkdir_p	G72x/Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkdir_p	GSM610/Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkdir_p	Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkinstalldirs	G72x/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	GSM610/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mode	common.h	/^	int				mode ;			\/* Open mode : SFM_READ, SFM_WRITE or SFM_RDWR. *\/$/;"	m	struct:__anon66
mode	sndfile.h	/^	{	int mode ;$/;"	m	struct:__anon57::__anon58
mono	avr.c	/^	short	mono ;		\/* 0 = mono, 0xffff = stereo *\/$/;"	m	struct:__anon22	file:
mp	GSM610/gsm610_priv.h	/^	int				mp;			\/*                  Preemphasis	*\/$/;"	m	struct:gsm_state
mp1_MARKER	caf.c	53;"	d	file:
mp2_MARKER	caf.c	54;"	d	file:
mp3_MARKER	caf.c	55;"	d	file:
mpc2k.c	mpc2k.c	1;"	F
mpc2k_close	mpc2k.c	/^mpc2k_close	(SF_PRIVATE *psf)$/;"	f	file:
mpc2k_open	mpc2k.c	/^mpc2k_open	(SF_PRIVATE *psf)$/;"	f
mpc2k_read_header	mpc2k.c	/^mpc2k_read_header (SF_PRIVATE *psf)$/;"	f	file:
mpc2k_write_header	mpc2k.c	/^mpc2k_write_header (SF_PRIVATE *psf, int calc_length)$/;"	f	file:
ms_adpcm.c	ms_adpcm.c	1;"	F
msadpcm	wav_w64.h	/^	MS_ADPCM_WAV_FMT	msadpcm ;$/;"	m	union:__anon33
msadpcm_close	ms_adpcm.c	/^msadpcm_close	(SF_PRIVATE *psf)$/;"	f	file:
msadpcm_decode_block	ms_adpcm.c	/^msadpcm_decode_block	(SF_PRIVATE *psf, MSADPCM_PRIVATE *pms)$/;"	f	file:
msadpcm_encode_block	ms_adpcm.c	/^msadpcm_encode_block	(SF_PRIVATE *psf, MSADPCM_PRIVATE *pms)$/;"	f	file:
msadpcm_read_block	ms_adpcm.c	/^msadpcm_read_block	(SF_PRIVATE *psf, MSADPCM_PRIVATE *pms, short *ptr, int len)$/;"	f	file:
msadpcm_read_d	ms_adpcm.c	/^msadpcm_read_d	(SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:
msadpcm_read_f	ms_adpcm.c	/^msadpcm_read_f	(SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:
msadpcm_read_i	ms_adpcm.c	/^msadpcm_read_i	(SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:
msadpcm_read_s	ms_adpcm.c	/^msadpcm_read_s	(SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:
msadpcm_seek	ms_adpcm.c	/^msadpcm_seek	(SF_PRIVATE *psf, int mode, sf_count_t offset)$/;"	f	file:
msadpcm_write_adapt_coeffs	ms_adpcm.c	/^msadpcm_write_adapt_coeffs	(SF_PRIVATE *psf)$/;"	f
msadpcm_write_block	ms_adpcm.c	/^msadpcm_write_block	(SF_PRIVATE *psf, MSADPCM_PRIVATE *pms, const short *ptr, int len)$/;"	f	file:
msadpcm_write_d	ms_adpcm.c	/^msadpcm_write_d	(SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:
msadpcm_write_f	ms_adpcm.c	/^msadpcm_write_f	(SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:
msadpcm_write_i	ms_adpcm.c	/^msadpcm_write_i	(SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:
msadpcm_write_s	ms_adpcm.c	/^msadpcm_write_s	(SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:
msr	GSM610/gsm610_priv.h	/^	word			msr;			\/* decoder.c,	Postprocessing	*\/$/;"	m	struct:gsm_state
name	avr.c	/^	char	name [8] ;	\/* null-padded sample name *\/$/;"	m	struct:__anon22	file:
name	chanmap.h	/^	const char * name ;$/;"	m	struct:__anon3
name	common.h	/^	} name ;$/;"	m	struct:__anon66	typeref:union:__anon66::__anon69
name	mat5.c	/^	char		name [32] ;$/;"	m	struct:__anon7	file:
name	ogg.c	/^	const char *name ;$/;"	m	struct:__anon79	file:
name	sd2.c	/^	char name [32] ;$/;"	m	struct:__anon92	file:
name	sndfile.h	/^	const char	*name ;$/;"	m	struct:__anon52
name	sndfile.h	/^	const char	*name ;$/;"	m	struct:__anon54
name	wav_w64.c	/^	const char	*name ;$/;"	m	struct:__anon4	file:
name	wav_w64.c	/^	const char * name ;$/;"	m	struct:chanmap_s	file:
need_to_free_rsrc_data	sd2.c	/^	int need_to_free_rsrc_data ;$/;"	m	struct:__anon91	file:
ni24_MARKER	aiff.c	65;"	d	file:
ni32_MARKER	aiff.c	67;"	d	file:
nist.c	nist.c	1;"	F
nist_close	nist.c	/^nist_close	(SF_PRIVATE *psf)$/;"	f	file:
nist_open	nist.c	/^nist_open	(SF_PRIVATE *psf)$/;"	f
nist_read_header	nist.c	/^nist_read_header (SF_PRIVATE *psf)$/;"	f	file:
nist_write_header	nist.c	/^nist_write_header (SF_PRIVATE *psf, int calc_length)$/;"	f	file:
no_symbols	create_symbols_file.py	/^def no_symbols (os_name):$/;"	f
nodist_include_HEADERS	Makefile	/^nodist_include_HEADERS = sndfile.h$/;"	m
nodist_libsndfile_la_OBJECTS	Makefile	/^nodist_libsndfile_la_OBJECTS = $(am__objects_4)$/;"	m
nodist_libsndfile_la_SOURCES	Makefile	/^nodist_libsndfile_la_SOURCES = $(nodist_include_HEADERS)$/;"	m
noinst_HEADERS	G72x/Makefile	/^noinst_HEADERS = g72x.h g72x_priv.h$/;"	m
noinst_HEADERS	GSM610/Makefile	/^noinst_HEADERS = gsm.h config.h gsm610_priv.h$/;"	m
noinst_HEADERS	Makefile	/^noinst_HEADERS = common.h sfconfig.h sfendian.h wav_w64.h sf_unistd.h chanmap.h$/;"	m
noinst_LTLIBRARIES	G72x/Makefile	/^noinst_LTLIBRARIES = libg72x.la$/;"	m
noinst_LTLIBRARIES	GSM610/Makefile	/^noinst_LTLIBRARIES = libgsm.la$/;"	m
noinst_LTLIBRARIES	Makefile	/^noinst_LTLIBRARIES = libcommon.la$/;"	m
noinst_PROGRAMS	G72x/Makefile	/^noinst_PROGRAMS = g72x_test$(EXEEXT)$/;"	m
noinst_PROGRAMS	Makefile	/^noinst_PROGRAMS = test_main$(EXEEXT)$/;"	m
norm_double	common.h	/^	int				norm_double ;$/;"	m	struct:sf_private_tag
norm_float	common.h	/^	int				norm_float ;$/;"	m	struct:sf_private_tag
note_MARKER	wav.c	55;"	d	file:
nrp	GSM610/gsm610_priv.h	/^	word			nrp; 			\/* 40 *\/	\/* long_term.c, synthesis	*\/$/;"	m	struct:gsm_state
numBeats	aiff.c	/^	unsigned int	numBeats ;$/;"	m	struct:__anon15	file:
numChannels	aiff.c	/^	short			numChannels ;$/;"	m	struct:__anon9	file:
numSampleFrames	aiff.c	/^	unsigned int	numSampleFrames ;$/;"	m	struct:__anon9	file:
num_beats	sndfile.h	/^	int		num_beats ;		\/* this is NOT the amount of quarter notes !!!*\/$/;"	m	struct:__anon59
numcoeffs	wav_w64.h	/^	unsigned short	numcoeffs ;$/;"	m	struct:__anon26
oct_save_short	G72x/g72x_test.c	/^oct_save_short	(short *a, short *b, int len)$/;"	f	file:
octave	svx.c	/^	unsigned char	octave, compression ;$/;"	m	struct:__anon1	file:
offset	aiff.c	/^{	unsigned int	offset ;$/;"	m	struct:__anon10	file:
offset	common.h	/^		sf_count_t offset ;$/;"	m	struct:__anon73::__anon74
offset	dwd.c	/^	unsigned int id, datalen, frames, offset ;$/;"	m	struct:__anon103	file:
offset	sndfile.h	/^{	sf_count_t	offset ;$/;"	m	struct:__anon55
offset	voc.c	/^	int		offset ;	\/* Offset of zero => silence. *\/$/;"	m	struct:__anon97	file:
og	ogg.c	/^	ogg_page og ;$/;"	m	struct:__anon80	file:
ogg.c	ogg.c	1;"	F
ogg_close	ogg.c	/^ogg_close (SF_PRIVATE *psf)$/;"	f	file:
ogg_command	ogg.c	/^ogg_command (SF_PRIVATE *psf, int command, void * data, int datasize)$/;"	f	file:
ogg_length	ogg.c	/^ogg_length (SF_PRIVATE *psf)$/;"	f	file:
ogg_length_aux	ogg.c	/^ogg_length_aux (SF_PRIVATE * psf)$/;"	f	file:
ogg_length_get_next_page	ogg.c	/^ogg_length_get_next_page (SF_PRIVATE *psf, ogg_sync_state * osync, ogg_page *page)$/;"	f	file:
ogg_open	ogg.c	/^ogg_open	(SF_PRIVATE *psf)$/;"	f
ogg_open	ogg.c	/^ogg_open (SF_PRIVATE *psf)$/;"	f
ogg_rdouble	ogg.c	/^ogg_rdouble (int samples, void *vptr, int off, int channels, float **pcm)$/;"	f	file:
ogg_read_d	ogg.c	/^ogg_read_d (SF_PRIVATE *psf, double *ptr, sf_count_t lens)$/;"	f	file:
ogg_read_f	ogg.c	/^ogg_read_f (SF_PRIVATE *psf, float *ptr, sf_count_t lens)$/;"	f	file:
ogg_read_header	ogg.c	/^ogg_read_header (SF_PRIVATE *psf, int log_data)$/;"	f	file:
ogg_read_i	ogg.c	/^ogg_read_i (SF_PRIVATE *psf, int *ptr, sf_count_t lens)$/;"	f	file:
ogg_read_s	ogg.c	/^ogg_read_s (SF_PRIVATE *psf, short *ptr, sf_count_t lens)$/;"	f	file:
ogg_read_sample	ogg.c	/^ogg_read_sample (SF_PRIVATE *psf, void *ptr, sf_count_t lens, convert_func *transfn)$/;"	f	file:
ogg_rfloat	ogg.c	/^ogg_rfloat (int samples, void *vptr, int off, int channels, float **pcm)$/;"	f	file:
ogg_rint	ogg.c	/^ogg_rint (int samples, void *vptr, int off, int channels, float **pcm)$/;"	f	file:
ogg_rnull	ogg.c	/^ogg_rnull (int samples, void *UNUSED (vptr), int UNUSED (off) , int channels, float **UNUSED (pcm))$/;"	f	file:
ogg_rshort	ogg.c	/^ogg_rshort (int samples, void *vptr, int off, int channels, float **pcm)$/;"	f	file:
ogg_seek	ogg.c	/^ogg_seek (SF_PRIVATE *psf, int UNUSED (mode), sf_count_t offset)$/;"	f	file:
ogg_write_d	ogg.c	/^ogg_write_d (SF_PRIVATE *psf, const double *ptr, sf_count_t lens)$/;"	f	file:
ogg_write_f	ogg.c	/^ogg_write_f (SF_PRIVATE *psf, const float *ptr, sf_count_t lens)$/;"	f	file:
ogg_write_header	ogg.c	/^ogg_write_header (SF_PRIVATE *psf, int UNUSED (calc_length))$/;"	f	file:
ogg_write_i	ogg.c	/^ogg_write_i (SF_PRIVATE *psf, const int *ptr, sf_count_t lens)$/;"	f	file:
ogg_write_s	ogg.c	/^ogg_write_s (SF_PRIVATE *psf, const short *ptr, sf_count_t lens)$/;"	f	file:
ogg_write_samples	ogg.c	/^ogg_write_samples (SF_PRIVATE *psf, OGG_PRIVATE *odata, VORBIS_PRIVATE *vdata, int in_frames)$/;"	f	file:
oki_steps	ima_oki_adpcm.c	/^static int const oki_steps [] =	\/* ~12-bit precision *\/$/;"	v	file:
oldincludedir	G72x/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	GSM610/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	Makefile	/^oldincludedir = \/usr\/include$/;"	m
oneShotHiSamples	svx.c	/^{	unsigned int	oneShotHiSamples, repeatHiSamples, samplesPerHiCycle ;$/;"	m	struct:__anon1	file:
one_chan	chanmap.c	/^static const AIFF_CAF_CHANNEL_MAP one_chan [] =$/;"	v	file:
one_chan_mono	chanmap.c	/^static const int one_chan_mono [1] = {	SF_CHANNEL_MAP_MONO } ;$/;"	v	file:
op	ogg.c	/^	ogg_packet op ;$/;"	m	struct:__anon80	file:
operator =	sndfile.hh	/^SndfileHandle::operator = (const SndfileHandle &rhs)$/;"	f	class:SndfileHandle
operator ==	sndfile.hh	/^		bool operator == (const SndfileHandle &rhs) const { return (p == rhs.p) ; }$/;"	f	class:SndfileHandle
operator bool	sndfile.hh	/^		operator bool () const { return (p != NULL) ; }$/;"	f	class:SndfileHandle
os	ogg.c	/^	ogg_stream_state os ;$/;"	m	struct:__anon80	file:
os	ogg.c	/^	ogg_stream_state os ;$/;"	m	struct:__anon82	file:
os2_symbols	create_symbols_file.py	/^def os2_symbols (progname, version, name):$/;"	f
os_name	create_symbols_file.py	/^os_name = sys.argv [1]$/;"	v
ovvw_MARKER	caf.c	56;"	d	file:
oy	ogg.c	/^	ogg_sync_state oy ;$/;"	m	struct:__anon80	file:
p	sndfile.hh	/^		SNDFILE_ref *p ;$/;"	m	class:SndfileHandle
pack_bytes	G72x/g72x.c	/^pack_bytes (int bits, const short * samples, unsigned char * block)$/;"	f	file:
padding	wav_w64.h	/^	char				padding [512] ;$/;"	m	union:__anon33
paf.c	paf.c	1;"	F
paf24_close	paf.c	/^paf24_close (SF_PRIVATE *psf)$/;"	f	file:
paf24_init	paf.c	/^paf24_init (SF_PRIVATE *psf)$/;"	f	file:
paf24_read	paf.c	/^paf24_read (SF_PRIVATE *psf, PAF24_PRIVATE *ppaf24, int *ptr, int len)$/;"	f	file:
paf24_read_block	paf.c	/^paf24_read_block (SF_PRIVATE *psf, PAF24_PRIVATE *ppaf24)$/;"	f	file:
paf24_read_d	paf.c	/^paf24_read_d (SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:
paf24_read_f	paf.c	/^paf24_read_f (SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:
paf24_read_i	paf.c	/^paf24_read_i (SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:
paf24_read_s	paf.c	/^paf24_read_s (SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:
paf24_seek	paf.c	/^paf24_seek (SF_PRIVATE *psf, int mode, sf_count_t offset)$/;"	f	file:
paf24_write	paf.c	/^paf24_write (SF_PRIVATE *psf, PAF24_PRIVATE *ppaf24, const int *ptr, int len)$/;"	f	file:
paf24_write_block	paf.c	/^paf24_write_block (SF_PRIVATE *psf, PAF24_PRIVATE *ppaf24)$/;"	f	file:
paf24_write_d	paf.c	/^paf24_write_d (SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:
paf24_write_f	paf.c	/^paf24_write_f (SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:
paf24_write_i	paf.c	/^paf24_write_i (SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:
paf24_write_s	paf.c	/^paf24_write_s (SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:
paf_open	paf.c	/^paf_open	(SF_PRIVATE *psf)$/;"	f
paf_read_header	paf.c	/^paf_read_header	(SF_PRIVATE *psf)$/;"	f	file:
paf_write_header	paf.c	/^paf_write_header (SF_PRIVATE *psf, int UNUSED (calc_length))$/;"	f	file:
pakt_MARKER	caf.c	57;"	d	file:
parse_str_rsrc	sd2.c	/^parse_str_rsrc (SF_PRIVATE *psf, SD2_RSRC * rsrc)$/;"	f	file:
path	common.h	/^	} path ;$/;"	m	struct:__anon66	typeref:union:__anon66::__anon67
pchk4_find	chunk.c	/^pchk4_find (PRIV_CHUNK4 * pchk, int marker)$/;"	f
pchk4_store	chunk.c	/^pchk4_store (PRIV_CHUNK4 * pchk, int marker, sf_count_t offset, sf_count_t len)$/;"	f
pcm	ima_oki_adpcm.h	/^	short 			pcm [IMA_OKI_ADPCM_PCM_LEN] ;$/;"	m	struct:__anon37
pcm.c	pcm.c	1;"	F
pcm_count	ima_oki_adpcm.h	/^	int	code_count, pcm_count ;$/;"	m	struct:__anon37
pcm_init	pcm.c	/^pcm_init (SF_PRIVATE *psf)$/;"	f
pcm_read_bei2d	pcm.c	/^pcm_read_bei2d (SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:
pcm_read_bei2f	pcm.c	/^pcm_read_bei2f (SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:
pcm_read_bei2i	pcm.c	/^pcm_read_bei2i (SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:
pcm_read_bei2s	pcm.c	/^pcm_read_bei2s (SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:
pcm_read_bes2d	pcm.c	/^pcm_read_bes2d (SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:
pcm_read_bes2f	pcm.c	/^pcm_read_bes2f (SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:
pcm_read_bes2i	pcm.c	/^pcm_read_bes2i (SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:
pcm_read_bes2s	pcm.c	/^pcm_read_bes2s (SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:
pcm_read_bet2d	pcm.c	/^pcm_read_bet2d (SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:
pcm_read_bet2f	pcm.c	/^pcm_read_bet2f (SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:
pcm_read_bet2i	pcm.c	/^pcm_read_bet2i (SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:
pcm_read_bet2s	pcm.c	/^pcm_read_bet2s (SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:
pcm_read_lei2d	pcm.c	/^pcm_read_lei2d (SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:
pcm_read_lei2f	pcm.c	/^pcm_read_lei2f (SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:
pcm_read_lei2i	pcm.c	/^pcm_read_lei2i (SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:
pcm_read_lei2s	pcm.c	/^pcm_read_lei2s (SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:
pcm_read_les2d	pcm.c	/^pcm_read_les2d (SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:
pcm_read_les2f	pcm.c	/^pcm_read_les2f (SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:
pcm_read_les2i	pcm.c	/^pcm_read_les2i (SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:
pcm_read_les2s	pcm.c	/^pcm_read_les2s (SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:
pcm_read_let2d	pcm.c	/^pcm_read_let2d (SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:
pcm_read_let2f	pcm.c	/^pcm_read_let2f (SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:
pcm_read_let2i	pcm.c	/^pcm_read_let2i (SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:
pcm_read_let2s	pcm.c	/^pcm_read_let2s (SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:
pcm_read_sc2d	pcm.c	/^pcm_read_sc2d (SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:
pcm_read_sc2f	pcm.c	/^pcm_read_sc2f (SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:
pcm_read_sc2i	pcm.c	/^pcm_read_sc2i (SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:
pcm_read_sc2s	pcm.c	/^pcm_read_sc2s (SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:
pcm_read_uc2d	pcm.c	/^pcm_read_uc2d (SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:
pcm_read_uc2f	pcm.c	/^pcm_read_uc2f (SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:
pcm_read_uc2i	pcm.c	/^pcm_read_uc2i (SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:
pcm_read_uc2s	pcm.c	/^pcm_read_uc2s (SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:
pcm_write_d2bei	pcm.c	/^pcm_write_d2bei	(SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:
pcm_write_d2bes	pcm.c	/^pcm_write_d2bes	(SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:
pcm_write_d2bet	pcm.c	/^pcm_write_d2bet	(SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:
pcm_write_d2lei	pcm.c	/^pcm_write_d2lei	(SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:
pcm_write_d2les	pcm.c	/^pcm_write_d2les	(SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:
pcm_write_d2let	pcm.c	/^pcm_write_d2let	(SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:
pcm_write_d2sc	pcm.c	/^pcm_write_d2sc	(SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:
pcm_write_d2uc	pcm.c	/^pcm_write_d2uc	(SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:
pcm_write_f2bei	pcm.c	/^pcm_write_f2bei	(SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:
pcm_write_f2bes	pcm.c	/^pcm_write_f2bes	(SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:
pcm_write_f2bet	pcm.c	/^pcm_write_f2bet	(SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:
pcm_write_f2lei	pcm.c	/^pcm_write_f2lei	(SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:
pcm_write_f2les	pcm.c	/^pcm_write_f2les	(SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:
pcm_write_f2let	pcm.c	/^pcm_write_f2let	(SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:
pcm_write_f2sc	pcm.c	/^pcm_write_f2sc	(SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:
pcm_write_f2uc	pcm.c	/^pcm_write_f2uc	(SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:
pcm_write_i2bei	pcm.c	/^pcm_write_i2bei	(SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:
pcm_write_i2bes	pcm.c	/^pcm_write_i2bes	(SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:
pcm_write_i2bet	pcm.c	/^pcm_write_i2bet	(SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:
pcm_write_i2lei	pcm.c	/^pcm_write_i2lei	(SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:
pcm_write_i2les	pcm.c	/^pcm_write_i2les	(SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:
pcm_write_i2let	pcm.c	/^pcm_write_i2let	(SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:
pcm_write_i2sc	pcm.c	/^pcm_write_i2sc	(SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:
pcm_write_i2uc	pcm.c	/^pcm_write_i2uc	(SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:
pcm_write_s2bei	pcm.c	/^pcm_write_s2bei	(SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:
pcm_write_s2bes	pcm.c	/^pcm_write_s2bes	(SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:
pcm_write_s2bet	pcm.c	/^pcm_write_s2bet	(SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:
pcm_write_s2lei	pcm.c	/^pcm_write_s2lei	(SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:
pcm_write_s2les	pcm.c	/^pcm_write_s2les	(SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:
pcm_write_s2let	pcm.c	/^pcm_write_s2let	(SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:
pcm_write_s2sc	pcm.c	/^pcm_write_s2sc	(SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:
pcm_write_s2uc	pcm.c	/^pcm_write_s2uc	(SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:
pcmtype	flac.c	/^	PFLAC_PCM pcmtype ;$/;"	m	struct:__anon88	file:
pdfdir	G72x/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	GSM610/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	Makefile	/^pdfdir = ${docdir}$/;"	m
peak_MARKER	caf.c	58;"	d	file:
peak_info	common.h	/^	PEAK_INFO		*peak_info ;$/;"	m	struct:sf_private_tag
peak_info_calloc	common.h	/^peak_info_calloc (int channels)$/;"	f
peak_loc	common.h	/^	int				peak_loc ;$/;"	m	struct:__anon64
peaks	common.h	/^	PEAK_POS		peaks [0] ;$/;"	m	struct:__anon64
peaks	common.h	/^	PEAK_POS		peaks [] ;$/;"	m	struct:__anon64
pipeoffset	common.h	/^	sf_count_t		pipeoffset ;	\/* Number of bytes read from a pipe. *\/$/;"	m	struct:sf_private_tag
pk	G72x/g72x_priv.h	/^	short pk[2];	\/*$/;"	m	struct:g72x_state
pkgdatadir	G72x/Makefile	/^pkgdatadir = $(datadir)\/libsndfile$/;"	m
pkgdatadir	GSM610/Makefile	/^pkgdatadir = $(datadir)\/libsndfile$/;"	m
pkgdatadir	Makefile	/^pkgdatadir = $(datadir)\/libsndfile$/;"	m
pkgincludedir	G72x/Makefile	/^pkgincludedir = $(includedir)\/libsndfile$/;"	m
pkgincludedir	GSM610/Makefile	/^pkgincludedir = $(includedir)\/libsndfile$/;"	m
pkgincludedir	Makefile	/^pkgincludedir = $(includedir)\/libsndfile$/;"	m
pkglibdir	G72x/Makefile	/^pkglibdir = $(libdir)\/libsndfile$/;"	m
pkglibdir	GSM610/Makefile	/^pkglibdir = $(libdir)\/libsndfile$/;"	m
pkglibdir	Makefile	/^pkglibdir = $(libdir)\/libsndfile$/;"	m
pkglibexecdir	G72x/Makefile	/^pkglibexecdir = $(libexecdir)\/libsndfile$/;"	m
pkglibexecdir	GSM610/Makefile	/^pkglibexecdir = $(libexecdir)\/libsndfile$/;"	m
pkglibexecdir	Makefile	/^pkglibexecdir = $(libexecdir)\/libsndfile$/;"	m
pkt_bytes	caf.c	/^	unsigned int pkt_bytes ;$/;"	m	struct:__anon77	file:
pkt_frames	caf.c	/^	unsigned int pkt_frames ;$/;"	m	struct:__anon77	file:
plain_symbols	create_symbols_file.py	/^def plain_symbols (progname, version, name):$/;"	f
playMode	aiff.c	/^{	short			playMode ;$/;"	m	struct:__anon11	file:
plst_MARKER	wav.c	51;"	d	file:
pos	flac.c	/^	unsigned pos, len, remain ;$/;"	m	struct:__anon88	file:
position	aiff.c	/^	unsigned int	position ;$/;"	m	struct:__anon16	file:
position	common.h	/^	sf_count_t	position ;	\/* the sample frame for the peak *\/$/;"	m	struct:__anon63
power2	G72x/g72x.c	/^short power2 [15] =$/;"	v	file:
predictor_pole	G72x/g72x.c	/^int  predictor_pole(G72x_STATE *state_ptr)$/;"	f
predictor_zero	G72x/g72x.c	/^int  predictor_zero (G72x_STATE *state_ptr)$/;"	f
prefix	G72x/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	GSM610/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	Makefile	/^prefix = \/usr\/local$/;"	m
preprocess.c	GSM610/preprocess.c	1;"	F
previous	ima_adpcm.c	/^	int				previous [2] ;$/;"	m	struct:IMA_ADPCM_PRIVATE_tag	file:
print_test_name	test_main.h	/^print_test_name (const char * name)$/;"	f
private	g72x.c	/^	struct g72x_state * private ;$/;"	m	struct:__anon100	typeref:struct:__anon100::g72x_state	file:
private_init_state	G72x/g72x.c	/^void private_init_state (G72x_STATE *state_ptr)$/;"	f
progname	create_symbols_file.py	/^progname = re.sub (".*[\\\\\/]", "", sys.argv [0])$/;"	v
program_transform_name	G72x/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	GSM610/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	Makefile	/^program_transform_name = s,x,x,$/;"	m
psdir	G72x/Makefile	/^psdir = ${docdir}$/;"	m
psdir	GSM610/Makefile	/^psdir = ${docdir}$/;"	m
psdir	Makefile	/^psdir = ${docdir}$/;"	m
psf_asciiheader_printf	common.c	/^psf_asciiheader_printf (SF_PRIVATE *psf, const char *format, ...)$/;"	f
psf_binheader_readf	common.c	/^psf_binheader_readf (SF_PRIVATE *psf, char const *format, ...)$/;"	f
psf_binheader_writef	common.c	/^psf_binheader_writef (SF_PRIVATE *psf, const char *format, ...)$/;"	f
psf_calc_max_all_channels	command.c	/^psf_calc_max_all_channels (SF_PRIVATE *psf, double *peaks, int normalize)$/;"	f
psf_calc_signal_max	command.c	/^psf_calc_signal_max (SF_PRIVATE *psf, int normalize)$/;"	f
psf_close	sndfile.c	/^psf_close (SF_PRIVATE *psf)$/;"	f	file:
psf_close_fd	file_io.c	/^psf_close_fd (int fd)$/;"	f	file:
psf_close_handle	file_io.c	/^psf_close_handle (HANDLE handle)$/;"	f	file:
psf_close_rsrc	file_io.c	/^psf_close_rsrc (SF_PRIVATE *psf)$/;"	f
psf_default_seek	common.c	/^psf_default_seek (SF_PRIVATE *psf, int UNUSED (mode), sf_count_t samples_from_start)$/;"	f
psf_fclose	file_io.c	/^psf_fclose (SF_PRIVATE *psf)$/;"	f
psf_fgets	file_io.c	/^psf_fgets (char *buffer, sf_count_t bufsize, SF_PRIVATE *psf)$/;"	f
psf_file_valid	file_io.c	/^psf_file_valid (SF_PRIVATE *psf)$/;"	f
psf_fopen	file_io.c	/^psf_fopen (SF_PRIVATE *psf)$/;"	f
psf_fopen	file_io.c	/^psf_fopen (SF_PRIVATE *psf, const char *pathname, int open_mode)$/;"	f
psf_fread	file_io.c	/^psf_fread (void *ptr, sf_count_t bytes, sf_count_t items, SF_PRIVATE *psf)$/;"	f
psf_fseek	file_io.c	/^psf_fseek (SF_PRIVATE *psf, sf_count_t offset, int whence)$/;"	f
psf_fsync	file_io.c	/^psf_fsync (SF_PRIVATE *psf)$/;"	f
psf_ftell	file_io.c	/^psf_ftell (SF_PRIVATE *psf)$/;"	f
psf_ftruncate	file_io.c	/^psf_ftruncate (SF_PRIVATE *psf, sf_count_t len)$/;"	f
psf_fwrite	file_io.c	/^psf_fwrite (const void *ptr, sf_count_t bytes, sf_count_t items, SF_PRIVATE *psf)$/;"	f
psf_g72x_decode_block	g72x.c	/^psf_g72x_decode_block (SF_PRIVATE *psf, G72x_PRIVATE *pg72x)$/;"	f	file:
psf_g72x_encode_block	g72x.c	/^psf_g72x_encode_block (SF_PRIVATE *psf, G72x_PRIVATE *pg72x)$/;"	f	file:
psf_get_date_str	common.c	/^psf_get_date_str (char *str, int maxlen)$/;"	f
psf_get_filelen	file_io.c	/^psf_get_filelen (SF_PRIVATE *psf)$/;"	f
psf_get_filelen_fd	file_io.c	/^psf_get_filelen_fd (int fd)$/;"	f	file:
psf_get_filelen_handle	file_io.c	/^psf_get_filelen_handle (HANDLE handle)$/;"	f
psf_get_format_info	command.c	/^psf_get_format_info (SF_FORMAT_INFO *data)$/;"	f
psf_get_format_major	command.c	/^psf_get_format_major (SF_FORMAT_INFO *data)$/;"	f
psf_get_format_major_count	command.c	/^psf_get_format_major_count	(void)$/;"	f
psf_get_format_simple	command.c	/^psf_get_format_simple (SF_FORMAT_INFO *data)$/;"	f
psf_get_format_simple_count	command.c	/^psf_get_format_simple_count	(void)$/;"	f
psf_get_format_subtype	command.c	/^psf_get_format_subtype (SF_FORMAT_INFO *data)$/;"	f
psf_get_format_subtype_count	command.c	/^psf_get_format_subtype_count	(void)$/;"	f
psf_get_max_all_channels	command.c	/^psf_get_max_all_channels (SF_PRIVATE *psf, double *peaks)$/;"	f
psf_get_signal_max	command.c	/^psf_get_signal_max (SF_PRIVATE *psf, double *peak)$/;"	f
psf_get_string	strings.c	/^psf_get_string (SF_PRIVATE *psf, int str_type)$/;"	f
psf_hexdump	common.c	/^psf_hexdump (const void *ptr, int len)$/;"	f
psf_init_files	file_io.c	/^psf_init_files (SF_PRIVATE *psf)$/;"	f
psf_instrument_alloc	common.c	/^psf_instrument_alloc (void)$/;"	f
psf_is_pipe	file_io.c	/^psf_is_pipe (SF_PRIVATE *psf)$/;"	f
psf_isprint	common.h	/^psf_isprint (int ch)$/;"	f
psf_location_string_count	strings.c	/^psf_location_string_count (const SF_PRIVATE * psf, int location)$/;"	f
psf_log_SF_INFO	common.c	/^psf_log_SF_INFO (SF_PRIVATE *psf)$/;"	f
psf_log_printf	common.c	/^psf_log_printf (SF_PRIVATE *psf, const char *format, ...)$/;"	f
psf_log_syserr	file_io.c	/^psf_log_syserr (SF_PRIVATE *psf, int error)$/;"	f	file:
psf_memset	common.c	/^psf_memset (void *s, int c, sf_count_t len)$/;"	f
psf_open_fd	file_io.c	/^psf_open_fd (PSF_FILE * pfile)$/;"	f	file:
psf_open_file	sndfile.c	/^psf_open_file (SF_PRIVATE *psf, SF_INFO *sfinfo)$/;"	f
psf_open_handle	file_io.c	/^psf_open_handle (PSF_FILE * pfile)$/;"	f	file:
psf_open_rsrc	file_io.c	/^psf_open_rsrc (SF_PRIVATE *psf)$/;"	f
psf_rand_int32	common.c	/^psf_rand_int32 (void)$/;"	f
psf_safe_strncat	common.h	/^psf_safe_strncat (char *dest, const char *src, size_t n)$/;"	f
psf_sanitize_string	common.c	/^psf_sanitize_string (char * cptr, int len)$/;"	f
psf_set_file	file_io.c	/^psf_set_file (SF_PRIVATE *psf, int fd)$/;"	f
psf_set_stdio	file_io.c	/^psf_set_stdio (SF_PRIVATE *psf)$/;"	f
psf_set_string	strings.c	/^psf_set_string (SF_PRIVATE *psf, int str_type, const char *str)$/;"	f
psf_store_string	strings.c	/^psf_store_string (SF_PRIVATE *psf, int str_type, const char *str)$/;"	f
psf_strncpy_crlf	common.c	/^psf_strncpy_crlf (char *dest, const char *src, size_t destmax, size_t srcmax)$/;"	f
psf_use_rsrc	file_io.c	/^psf_use_rsrc (SF_PRIVATE *psf, int on_off)$/;"	f
ptr	flac.c	/^	void* ptr ;$/;"	m	struct:__anon88	file:
pvf.c	pvf.c	1;"	F
pvf_open	pvf.c	/^pvf_open	(SF_PRIVATE *psf)$/;"	f
pvf_read_header	pvf.c	/^pvf_read_header (SF_PRIVATE *psf)$/;"	f	file:
pvf_write_header	pvf.c	/^pvf_write_header (SF_PRIVATE *psf, int UNUSED (calc_length))$/;"	f	file:
qtab_721	G72x/g721.c	/^static short qtab_721[7] = {-124, 80, 178, 246, 300, 349, 400};$/;"	v	file:
qtab_723_16	G72x/g723_16.c	/^static short qtab_723_16[1] = {261};$/;"	v	file:
qtab_723_24	G72x/g723_24.c	/^static short qtab_723_24[3] = {8, 218, 331};$/;"	v	file:
qtab_723_40	G72x/g723_40.c	/^static short qtab_723_40[15] = {-122, -16, 68, 139, 198, 250, 298, 339,$/;"	v	file:
quality	ogg.c	/^	double quality ;$/;"	m	struct:__anon81	file:
quan	G72x/g72x.c	/^int quan (int val, short *table, int size)$/;"	f	file:
quantize	G72x/g72x.c	/^int quantize($/;"	f
raw.c	raw.c	1;"	F
raw_MARKER	aiff.c	63;"	d	file:
raw_open	raw.c	/^raw_open	(SF_PRIVATE *psf)$/;"	f
rbuffer	flac.c	/^	FLAC__int32 * rbuffer [FLAC__MAX_CHANNELS] ;$/;"	m	struct:__anon88	file:
re	binheader_writef_check.py	/^import re, string, sys$/;"	i
re	create_symbols_file.py	/^import re, sys$/;"	i
read	sndfile.h	/^	sf_vio_read			read ;$/;"	m	struct:SF_VIRTUAL_IO
read	sndfile.hh	/^SndfileHandle::read (double *ptr, sf_count_t items)$/;"	f	class:SndfileHandle
read	sndfile.hh	/^SndfileHandle::read (float *ptr, sf_count_t items)$/;"	f	class:SndfileHandle
read	sndfile.hh	/^SndfileHandle::read (int *ptr, sf_count_t items)$/;"	f	class:SndfileHandle
read	sndfile.hh	/^SndfileHandle::read (short *ptr, sf_count_t items)$/;"	f	class:SndfileHandle
readRaw	sndfile.hh	/^SndfileHandle::readRaw (void *ptr, sf_count_t bytes)$/;"	f	class:SndfileHandle
read_block	paf.c	/^	int				read_block, write_block, read_count, write_count ;$/;"	m	struct:__anon94	file:
read_block	sds.c	/^	int read_block, read_count ;$/;"	m	struct:tag_SDS_PRIVATE	file:
read_char	sd2.c	/^read_char (const unsigned char * data, int offset)$/;"	f	file:
read_count	paf.c	/^	int				read_block, write_block, read_count, write_count ;$/;"	m	struct:__anon94	file:
read_count	sds.c	/^	int read_block, read_count ;$/;"	m	struct:tag_SDS_PRIVATE	file:
read_current	common.h	/^	sf_count_t		read_current ;$/;"	m	struct:sf_private_tag
read_data	sds.c	/^	unsigned char read_data [SDS_BLOCK_SIZE] ;$/;"	m	struct:tag_SDS_PRIVATE	file:
read_dither	common.h	/^	SF_DITHER_INFO	read_dither ;$/;"	m	struct:sf_private_tag
read_double	common.h	/^	sf_count_t		(*read_double)	(struct sf_private_tag*, double *ptr, sf_count_t len) ;$/;"	m	struct:sf_private_tag
read_double	dither.c	/^	sf_count_t	(*read_double)	(SF_PRIVATE *psf, double *ptr, sf_count_t len) ;$/;"	m	struct:__anon18	file:
read_double	interleave.c	/^	sf_count_t		(*read_double)	(SF_PRIVATE*, double *ptr, sf_count_t len) ;$/;"	m	struct:__anon85	file:
read_double_dither_bits	dither.c	/^	double		read_float_dither_scale, read_double_dither_bits ;$/;"	m	struct:__anon18	file:
read_float	common.h	/^	sf_count_t		(*read_float)	(struct sf_private_tag*, float *ptr, sf_count_t len) ;$/;"	m	struct:sf_private_tag
read_float	dither.c	/^	sf_count_t	(*read_float)	(SF_PRIVATE *psf, float *ptr, sf_count_t len) ;$/;"	m	struct:__anon18	file:
read_float	interleave.c	/^	sf_count_t		(*read_float)	(SF_PRIVATE*, float *ptr, sf_count_t len) ;$/;"	m	struct:__anon85	file:
read_float_dither_scale	dither.c	/^	double		read_float_dither_scale, read_double_dither_bits ;$/;"	m	struct:__anon18	file:
read_int	common.h	/^	sf_count_t		(*read_int)		(struct sf_private_tag*, int *ptr, sf_count_t len) ;$/;"	m	struct:sf_private_tag
read_int	dither.c	/^	sf_count_t	(*read_int)		(SF_PRIVATE *psf, int *ptr, sf_count_t len) ;$/;"	m	struct:__anon18	file:
read_int	interleave.c	/^	sf_count_t		(*read_int)	(SF_PRIVATE*, int *ptr, sf_count_t len) ;$/;"	m	struct:__anon85	file:
read_int	sd2.c	/^read_int (const unsigned char * data, int offset)$/;"	f	file:
read_int_dither_bits	dither.c	/^{	int			read_short_dither_bits, read_int_dither_bits ;$/;"	m	struct:__anon18	file:
read_marker	sd2.c	/^read_marker (const unsigned char * data, int offset)$/;"	f	file:
read_samples	sds.c	/^	int	read_samples [SDS_BLOCK_SIZE \/ 2] ; \/* Maximum samples per block *\/$/;"	m	struct:tag_SDS_PRIVATE	file:
read_short	common.h	/^	sf_count_t		(*read_short)	(struct sf_private_tag*, short *ptr, sf_count_t len) ;$/;"	m	struct:sf_private_tag
read_short	dither.c	/^	sf_count_t	(*read_short)	(SF_PRIVATE *psf, short *ptr, sf_count_t len) ;$/;"	m	struct:__anon18	file:
read_short	interleave.c	/^	sf_count_t		(*read_short)	(SF_PRIVATE*, short *ptr, sf_count_t len) ;$/;"	m	struct:__anon85	file:
read_short	sd2.c	/^read_short (const unsigned char * data, int offset)$/;"	f	file:
read_short_dither_bits	dither.c	/^{	int			read_short_dither_bits, read_int_dither_bits ;$/;"	m	struct:__anon18	file:
read_str	sd2.c	/^read_str (const unsigned char * data, int offset, char * buffer, int buffer_len)$/;"	f	file:
reader	sds.c	/^	int (*reader) (SF_PRIVATE *psf, struct tag_SDS_PRIVATE *psds) ;$/;"	m	struct:tag_SDS_PRIVATE	file:
readf	sndfile.hh	/^SndfileHandle::readf (double *ptr, sf_count_t frame_count)$/;"	f	class:SndfileHandle
readf	sndfile.hh	/^SndfileHandle::readf (float *ptr, sf_count_t frame_count)$/;"	f	class:SndfileHandle
readf	sndfile.hh	/^SndfileHandle::readf (int *ptr, sf_count_t frame_count)$/;"	f	class:SndfileHandle
readf	sndfile.hh	/^SndfileHandle::readf (short *ptr, sf_count_t frame_count)$/;"	f	class:SndfileHandle
reconstruct	G72x/g72x.c	/^reconstruct($/;"	f
ref	sndfile.hh	/^			int ref ;$/;"	m	struct:SndfileHandle::SNDFILE_ref
refCount	sndfile.hh	/^		int refCount (void) const { return (p == NULL) ? 0 : p->ref ; }$/;"	f	class:SndfileHandle
regn_MARKER	caf.c	59;"	d	file:
release_loop	aiff.c	/^	INST_LOOP	release_loop ;$/;"	m	struct:__anon12	file:
remain	flac.c	/^	unsigned pos, len, remain ;$/;"	m	struct:__anon88	file:
repeatHiSamples	svx.c	/^{	unsigned int	oneShotHiSamples, repeatHiSamples, samplesPerHiCycle ;$/;"	m	struct:__anon1	file:
repeatlen	txw.c	/^	unsigned int	attacklen, repeatlen ;$/;"	m	struct:__anon60	file:
replace_read_d	double64.c	/^replace_read_d	(SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:
replace_read_d2f	double64.c	/^replace_read_d2f	(SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:
replace_read_d2i	double64.c	/^replace_read_d2i	(SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:
replace_read_d2s	double64.c	/^replace_read_d2s	(SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:
replace_read_f	float32.c	/^replace_read_f	(SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:
replace_read_f2d	float32.c	/^replace_read_f2d	(SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:
replace_read_f2i	float32.c	/^replace_read_f2i	(SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:
replace_read_f2s	float32.c	/^replace_read_f2s	(SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:
replace_write_d	double64.c	/^replace_write_d	(SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:
replace_write_d2f	float32.c	/^replace_write_d2f	(SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:
replace_write_f	float32.c	/^replace_write_f	(SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:
replace_write_f2d	double64.c	/^replace_write_f2d	(SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:
replace_write_i2d	double64.c	/^replace_write_i2d	(SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:
replace_write_i2f	float32.c	/^replace_write_i2f	(SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:
replace_write_s2d	double64.c	/^replace_write_s2d	(SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:
replace_write_s2f	float32.c	/^replace_write_s2f	(SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:
res1	avr.c	/^	short	res1 ;		\/* Reserved, MIDI keyboard split *\/$/;"	m	struct:__anon22	file:
res2	avr.c	/^	short	res2 ;		\/* Reserved, sample compression *\/$/;"	m	struct:__anon22	file:
res3	avr.c	/^	short	res3 ;		\/* Reserved *\/$/;"	m	struct:__anon22	file:
rez	avr.c	/^	short	rez ;		\/* 8 = 8 bit, 16 = 16 bit *\/$/;"	m	struct:__anon22	file:
rf64.c	rf64.c	1;"	F
rf64_close	rf64.c	/^rf64_close (SF_PRIVATE *psf)$/;"	f	file:
rf64_command	rf64.c	/^rf64_command (SF_PRIVATE *psf, int command, void * UNUSED (data), int datasize)$/;"	f	file:
rf64_open	rf64.c	/^rf64_open (SF_PRIVATE *psf)$/;"	f
rf64_read_header	rf64.c	/^rf64_read_header (SF_PRIVATE *psf, int *blockalign, int *framesperblock)$/;"	f	file:
rf64_write_header	rf64.c	/^rf64_write_header (SF_PRIVATE *psf, int calc_length)$/;"	f	file:
riff_HASH16	w64.c	50;"	d	file:
rootNote	aiff.c	/^	unsigned short	rootNote ;$/;"	m	struct:__anon15	file:
root_key	sndfile.h	/^	int	root_key ;			\/* MIDI note, or -1 for None *\/$/;"	m	struct:__anon59
rows	mat5.c	/^	int			rows, cols ;$/;"	m	struct:__anon7	file:
rpe.c	GSM610/rpe.c	1;"	F
rsrc	common.h	/^	PSF_FILE		file, rsrc ;$/;"	m	struct:sf_private_tag
rsrc_data	sd2.c	/^{	unsigned char * rsrc_data ;$/;"	m	struct:__anon91	file:
rsrc_len	sd2.c	/^	int rsrc_len ;$/;"	m	struct:__anon91	file:
rsrclength	common.h	/^	sf_count_t		rsrclength ;	\/* Length of the resource fork (if it exists). *\/$/;"	m	struct:sf_private_tag
rwf_endian	common.h	/^	int				rwf_endian ;	\/* Header endian-ness flag. *\/$/;"	m	struct:sf_private_tag
rx2.c	rx2.c	1;"	F
rx2_close	rx2.c	/^rx2_close	(SF_PRIVATE *psf)$/;"	f	file:
rx2_open	rx2.c	/^rx2_open	(SF_PRIVATE *psf)$/;"	f
s2alaw_array	alaw.c	/^s2alaw_array (const short *ptr, int count, unsigned char *buffer)$/;"	f	file:
s2bei_array	pcm.c	/^s2bei_array (const short *src, int *dest, int count)$/;"	f	file:
s2bet_array	pcm.c	/^s2bet_array (const short *src, tribyte *dest, int count)$/;"	f	file:
s2d_array	double64.c	/^s2d_array (const short *src, double *dest, int count, double scale)$/;"	f	file:
s2dles_array	xi.c	/^s2dles_array (XI_PRIVATE *pxi, const short *src, short *dest, int count)$/;"	f	file:
s2dsc_array	xi.c	/^s2dsc_array (XI_PRIVATE *pxi, const short *src, signed char *dest, int count)$/;"	f	file:
s2f_array	float32.c	/^s2f_array (const short *src, float *dest, int count, float scale)$/;"	f	file:
s2flac16_array	flac.c	/^s2flac16_array (const short *src, FLAC__int32 *dest, int count)$/;"	f	file:
s2flac24_array	flac.c	/^s2flac24_array (const short *src, FLAC__int32 *dest, int count)$/;"	f	file:
s2flac8_array	flac.c	/^s2flac8_array (const short *src, FLAC__int32 *dest, int count)$/;"	f	file:
s2lei_array	pcm.c	/^s2lei_array (const short *src, int *dest, int count)$/;"	f	file:
s2let_array	pcm.c	/^s2let_array (const short *src, tribyte *dest, int count)$/;"	f	file:
s2sc_array	pcm.c	/^s2sc_array	(const short *src, signed char *dest, int count)$/;"	f	file:
s2uc_array	pcm.c	/^s2uc_array	(const short *src, unsigned char *dest, int count)$/;"	f	file:
s2ulaw_array	ulaw.c	/^s2ulaw_array (const short *ptr, int count, unsigned char *buffer)$/;"	f	file:
s_bitwidth_to_subformat	common.c	/^s_bitwidth_to_subformat (int bits)$/;"	f
sampleRate	aiff.c	/^	unsigned char	sampleRate [10] ;$/;"	m	struct:__anon9	file:
sampleSize	aiff.c	/^	short			sampleSize ;$/;"	m	struct:__anon9	file:
sample_count	paf.c	/^	sf_count_t		sample_count ;$/;"	m	struct:__anon94	file:
sample_curr	g72x.c	/^	int				blocks_total, block_curr, sample_curr ;$/;"	m	struct:__anon100	file:
sample_flags	xi.c	/^	int		sample_flags ;$/;"	m	struct:__anon84	file:
sample_name	xi.c	/^	char	sample_name [22] ;$/;"	m	struct:__anon84	file:
sample_rate	sd2.c	/^	int sample_size, sample_rate, channels ;$/;"	m	struct:__anon91	file:
sample_size	sd2.c	/^	int sample_size, sample_rate, channels ;$/;"	m	struct:__anon91	file:
samplecount	dwvw.c	/^	int		samplecount ;$/;"	m	struct:__anon19	file:
samplecount	gsm610.c	/^	int				blockcount, samplecount ;$/;"	m	struct:gsm610_tag	file:
samplecount	ima_adpcm.c	/^	int				blockcount, samplecount ;$/;"	m	struct:IMA_ADPCM_PRIVATE_tag	file:
samplecount	ms_adpcm.c	/^	sf_count_t		samplecount ;$/;"	m	struct:__anon86	file:
samplerate	au.c	/^    int		samplerate ;$/;"	m	struct:__anon45	file:
samplerate	paf.c	/^    int	samplerate ;$/;"	m	struct:__anon93	file:
samplerate	sndfile.h	/^	int			samplerate ;$/;"	m	struct:SF_INFO
samplerate	sndfile.hh	/^		int			samplerate (void) const { return p ? p->sfinfo.samplerate : 0 ; }$/;"	f	class:SndfileHandle
samplerate	voc.c	/^	int				samplerate, channels, bitwidth ;$/;"	m	struct:__anon98	file:
samplerate	wav_w64.h	/^	unsigned int	samplerate ;$/;"	m	struct:__anon24
samplerate	wav_w64.h	/^	unsigned int	samplerate ;$/;"	m	struct:__anon25
samplerate	wav_w64.h	/^	unsigned int	samplerate ;$/;"	m	struct:__anon26
samplerate	wav_w64.h	/^	unsigned int	samplerate ;$/;"	m	struct:__anon28
samplerate	wav_w64.h	/^	unsigned int	samplerate ;$/;"	m	struct:__anon29
samplerate	wav_w64.h	/^	unsigned int	samplerate ;$/;"	m	struct:__anon30
samplerate	wav_w64.h	/^	unsigned int	samplerate ;$/;"	m	struct:__anon32
samples	g72x.c	/^	short			samples	[G72x_BLOCK_SIZE] ;$/;"	m	struct:__anon100	file:
samples	gsm610.c	/^	short			samples [WAV_W64_GSM610_SAMPLES] ;$/;"	m	struct:gsm610_tag	file:
samples	ima_adpcm.c	/^	short			*samples ;$/;"	m	struct:IMA_ADPCM_PRIVATE_tag	file:
samples	ms_adpcm.c	/^	short			*samples ;$/;"	m	struct:__anon86	file:
samples	paf.c	/^	int				*samples ;$/;"	m	struct:__anon94	file:
samples	voc.c	/^{	int 	samples ;$/;"	m	struct:__anon97	file:
samplesPerHiCycle	svx.c	/^{	unsigned int	oneShotHiSamples, repeatHiSamples, samplesPerHiCycle ;$/;"	m	struct:__anon1	file:
samplesPerSec	svx.c	/^	unsigned short	samplesPerSec ;$/;"	m	struct:__anon1	file:
samplesperblock	G72x/g72x_priv.h	/^	int		codec_bits, blocksize, samplesperblock ;$/;"	m	struct:g72x_state
samplesperblock	g72x.c	/^	int				blocksize, samplesperblock, bytesperblock ;$/;"	m	struct:__anon100	file:
samplesperblock	gsm610.c	/^	int				samplesperblock, blocksize ;$/;"	m	struct:gsm610_tag	file:
samplesperblock	ima_adpcm.c	/^	int				channels, blocksize, samplesperblock, blocks ;$/;"	m	struct:IMA_ADPCM_PRIVATE_tag	file:
samplesperblock	ms_adpcm.c	/^{	int				channels, blocksize, samplesperblock, blocks, dataremaining ;$/;"	m	struct:__anon86	file:
samplesperblock	paf.c	/^{	int				max_blocks, channels, samplesperblock, blocksize ;$/;"	m	struct:__anon94	file:
samplesperblock	sds.c	/^	int	samplesperblock, total_blocks ;$/;"	m	struct:tag_SDS_PRIVATE	file:
samplesperblock	wav_w64.h	/^	unsigned short	samplesperblock ;$/;"	m	struct:__anon26
samplesperblock	wav_w64.h	/^	unsigned short	samplesperblock ;$/;"	m	struct:__anon28
samplesperblock	wav_w64.h	/^	unsigned short	samplesperblock ;$/;"	m	struct:__anon30
saturate	GSM610/add.c	16;"	d	file:
save_header_info	sndfile.c	/^save_header_info (SF_PRIVATE *psf)$/;"	f	file:
savedes	common.h	/^	int 			filedes, savedes ;$/;"	m	struct:__anon66
sbindir	G72x/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	GSM610/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbuf	common.h	/^		short			sbuf	[SF_BUFFER_LEN \/ sizeof (short)] ;$/;"	m	union:sf_private_tag::__anon71
sc2d_array	pcm.c	/^sc2d_array	(signed char *src, int count, double *dest, double normfact)$/;"	f	file:
sc2f_array	pcm.c	/^sc2f_array	(signed char *src, int count, float *dest, float normfact)$/;"	f	file:
sc2i_array	pcm.c	/^sc2i_array	(signed char *src, int count, int *dest)$/;"	f	file:
sc2s_array	pcm.c	/^sc2s_array	(signed char *src, int count, short *dest)$/;"	f	file:
scaleType	aiff.c	/^	unsigned short	scaleType ;$/;"	m	struct:__anon15	file:
scale_int_float	common.h	/^	int				scale_int_float ;$/;"	m	struct:sf_private_tag
scbuf	common.h	/^		signed char		scbuf	[SF_BUFFER_LEN \/ sizeof (signed char)] ;$/;"	m	union:sf_private_tag::__anon71
sd2.c	sd2.c	1;"	F
sd2_close	sd2.c	/^sd2_close	(SF_PRIVATE *psf)$/;"	f	file:
sd2_open	sd2.c	/^sd2_open (SF_PRIVATE *psf)$/;"	f
sd2_parse_rsrc_fork	sd2.c	/^sd2_parse_rsrc_fork (SF_PRIVATE *psf)$/;"	f	file:
sd2_write_rsrc_fork	sd2.c	/^sd2_write_rsrc_fork (SF_PRIVATE *psf, int UNUSED (calc_length))$/;"	f	file:
sdML_MARKER	sd2.c	51;"	d	file:
sds.c	sds.c	1;"	F
sds_2byte_read	sds.c	/^sds_2byte_read (SF_PRIVATE *psf, SDS_PRIVATE *psds)$/;"	f	file:
sds_2byte_write	sds.c	/^sds_2byte_write (SF_PRIVATE *psf, SDS_PRIVATE *psds)$/;"	f	file:
sds_3byte_read	sds.c	/^sds_3byte_read (SF_PRIVATE *psf, SDS_PRIVATE *psds)$/;"	f	file:
sds_3byte_write	sds.c	/^sds_3byte_write (SF_PRIVATE *psf, SDS_PRIVATE *psds)$/;"	f	file:
sds_4byte_read	sds.c	/^sds_4byte_read (SF_PRIVATE *psf, SDS_PRIVATE *psds)$/;"	f	file:
sds_4byte_write	sds.c	/^sds_4byte_write (SF_PRIVATE *psf, SDS_PRIVATE *psds)$/;"	f	file:
sds_close	sds.c	/^sds_close	(SF_PRIVATE *psf)$/;"	f	file:
sds_init	sds.c	/^sds_init (SF_PRIVATE *psf, SDS_PRIVATE *psds)$/;"	f	file:
sds_open	sds.c	/^sds_open	(SF_PRIVATE *psf)$/;"	f
sds_read	sds.c	/^sds_read (SF_PRIVATE *psf, SDS_PRIVATE *psds, int *ptr, int len)$/;"	f	file:
sds_read_d	sds.c	/^sds_read_d (SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:
sds_read_f	sds.c	/^sds_read_f (SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:
sds_read_header	sds.c	/^sds_read_header (SF_PRIVATE *psf, SDS_PRIVATE *psds)$/;"	f	file:
sds_read_i	sds.c	/^sds_read_i (SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:
sds_read_s	sds.c	/^sds_read_s (SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:
sds_seek	sds.c	/^sds_seek (SF_PRIVATE *psf, int mode, sf_count_t seek_from_start)$/;"	f	file:
sds_write	sds.c	/^sds_write (SF_PRIVATE *psf, SDS_PRIVATE *psds, const int *ptr, int len)$/;"	f	file:
sds_write_d	sds.c	/^sds_write_d (SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:
sds_write_f	sds.c	/^sds_write_f (SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:
sds_write_header	sds.c	/^sds_write_header (SF_PRIVATE *psf, int calc_length)$/;"	f	file:
sds_write_i	sds.c	/^sds_write_i (SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:
sds_write_s	sds.c	/^sds_write_s (SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:
section_types	voc.c	/^{	unsigned int 	sections, section_types ;$/;"	m	struct:__anon98	file:
sections	sndfile.h	/^	int			sections ;$/;"	m	struct:SF_INFO
sections	voc.c	/^{	unsigned int 	sections, section_types ;$/;"	m	struct:__anon98	file:
seek	common.h	/^	sf_count_t		(*seek) 		(struct sf_private_tag*, int mode, sf_count_t samples_from_start) ;$/;"	m	struct:sf_private_tag
seek	sndfile.h	/^	sf_vio_seek			seek ;$/;"	m	struct:SF_VIRTUAL_IO
seek	sndfile.hh	/^SndfileHandle::seek (sf_count_t frame_count, int whence)$/;"	f	class:SndfileHandle
seekable	sndfile.h	/^	int			seekable ;$/;"	m	struct:SF_INFO
serial	ogg.c	/^	uint32_t serial ; \/* must be 32 bit unsigned *\/$/;"	m	struct:__anon82	file:
setString	sndfile.hh	/^SndfileHandle::setString (int str_type, const char* str)$/;"	f	class:SndfileHandle
seven_chan	chanmap.c	/^static const AIFF_CAF_CHANNEL_MAP seven_chan [] =$/;"	v	file:
sf	common.h	/^	SF_INFO			sf ;$/;"	m	struct:sf_private_tag
sf	sndfile.hh	/^			SNDFILE *sf ;$/;"	m	struct:SndfileHandle::SNDFILE_ref
sf_close	sndfile.c	/^sf_close	(SNDFILE *sndfile)$/;"	f
sf_command	sndfile.c	/^sf_command	(SNDFILE *sndfile, int command, void *data, int datasize)$/;"	f
sf_count_t	sndfile.h	/^typedef __int64		sf_count_t ;$/;"	t
sf_count_t	sndfile.h	/^typedef loff_t	sf_count_t ;$/;"	t
sf_errno	sndfile.c	/^int	sf_errno = 0 ;$/;"	v
sf_error	sndfile.c	/^sf_error (SNDFILE *sndfile)$/;"	f
sf_error_number	sndfile.c	/^sf_error_number	(int errnum)$/;"	f
sf_error_str	sndfile.c	/^sf_error_str (SNDFILE *sndfile, char *str, size_t maxlen)$/;"	f
sf_flac_meta_get_vorbiscomments	flac.c	/^sf_flac_meta_get_vorbiscomments (SF_PRIVATE *psf, const FLAC__StreamMetadata *metadata)$/;"	f	file:
sf_format_check	sndfile.c	/^sf_format_check	(const SF_INFO *info)$/;"	f
sf_get_string	sndfile.c	/^sf_get_string (SNDFILE *sndfile, int str_type)$/;"	f
sf_logbuffer	sndfile.c	/^static char	sf_logbuffer [SF_BUFFER_LEN] = { 0 } ;$/;"	v	file:
sf_open	sndfile.c	/^sf_open	(const char *path, int mode, SF_INFO *sfinfo)$/;"	f
sf_open_fd	sndfile.c	/^sf_open_fd	(int fd, int mode, SF_INFO *sfinfo, int close_desc)$/;"	f
sf_open_virtual	sndfile.c	/^sf_open_virtual	(SF_VIRTUAL_IO *sfvirtual, int mode, SF_INFO *sfinfo, void *user_data)$/;"	f
sf_perror	sndfile.c	/^sf_perror (SNDFILE *sndfile)$/;"	f
sf_private_tag	common.h	/^typedef struct sf_private_tag$/;"	s
sf_read_double	sndfile.c	/^sf_read_double	(SNDFILE *sndfile, double *ptr, sf_count_t len)$/;"	f
sf_read_float	sndfile.c	/^sf_read_float	(SNDFILE *sndfile, float *ptr, sf_count_t len)$/;"	f
sf_read_int	sndfile.c	/^sf_read_int		(SNDFILE *sndfile, int *ptr, sf_count_t len)$/;"	f
sf_read_raw	sndfile.c	/^sf_read_raw		(SNDFILE *sndfile, void *ptr, sf_count_t bytes)$/;"	f
sf_read_short	sndfile.c	/^sf_read_short	(SNDFILE *sndfile, short *ptr, sf_count_t len)$/;"	f
sf_readf_double	sndfile.c	/^sf_readf_double	(SNDFILE *sndfile, double *ptr, sf_count_t frames)$/;"	f
sf_readf_float	sndfile.c	/^sf_readf_float	(SNDFILE *sndfile, float *ptr, sf_count_t frames)$/;"	f
sf_readf_int	sndfile.c	/^sf_readf_int	(SNDFILE *sndfile, int *ptr, sf_count_t frames)$/;"	f
sf_readf_short	sndfile.c	/^sf_readf_short		(SNDFILE *sndfile, short *ptr, sf_count_t frames)$/;"	f
sf_seek	sndfile.c	/^sf_seek	(SNDFILE *sndfile, sf_count_t offset, int whence)$/;"	f
sf_set_string	sndfile.c	/^sf_set_string (SNDFILE *sndfile, int str_type, const char* str)$/;"	f
sf_strerror	sndfile.c	/^sf_strerror (SNDFILE *sndfile)$/;"	f
sf_syserr	sndfile.c	/^static char	sf_syserr [SF_SYSERR_LEN] = { 0 } ;$/;"	v	file:
sf_unistd.h	sf_unistd.h	1;"	F
sf_version_string	sndfile.c	/^sf_version_string (void)$/;"	f
sf_vio_get_filelen	sndfile.h	/^typedef sf_count_t		(*sf_vio_get_filelen)	(void *user_data) ;$/;"	t
sf_vio_read	sndfile.h	/^typedef sf_count_t		(*sf_vio_read)		(void *ptr, sf_count_t count, void *user_data) ;$/;"	t
sf_vio_seek	sndfile.h	/^typedef sf_count_t		(*sf_vio_seek)		(sf_count_t offset, int whence, void *user_data) ;$/;"	t
sf_vio_tell	sndfile.h	/^typedef sf_count_t		(*sf_vio_tell)		(void *user_data) ;$/;"	t
sf_vio_write	sndfile.h	/^typedef sf_count_t		(*sf_vio_write)		(const void *ptr, sf_count_t count, void *user_data) ;$/;"	t
sf_wchar_open	windows.c	/^sf_wchar_open (LPCWSTR wpath, int mode, SF_INFO *sfinfo)$/;"	f
sf_write_double	sndfile.c	/^sf_write_double	(SNDFILE *sndfile, const double *ptr, sf_count_t len)$/;"	f
sf_write_float	sndfile.c	/^sf_write_float	(SNDFILE *sndfile, const float *ptr, sf_count_t len)$/;"	f
sf_write_int	sndfile.c	/^sf_write_int	(SNDFILE *sndfile, const int *ptr, sf_count_t len)$/;"	f
sf_write_raw	sndfile.c	/^sf_write_raw	(SNDFILE *sndfile, const void *ptr, sf_count_t len)$/;"	f
sf_write_short	sndfile.c	/^sf_write_short	(SNDFILE *sndfile, const short *ptr, sf_count_t len)$/;"	f
sf_write_sync	sndfile.c	/^sf_write_sync	(SNDFILE *sndfile)$/;"	f
sf_writef_double	sndfile.c	/^sf_writef_double	(SNDFILE *sndfile, const double *ptr, sf_count_t frames)$/;"	f
sf_writef_float	sndfile.c	/^sf_writef_float	(SNDFILE *sndfile, const float *ptr, sf_count_t frames)$/;"	f
sf_writef_int	sndfile.c	/^sf_writef_int	(SNDFILE *sndfile, const int *ptr, sf_count_t frames)$/;"	f
sf_writef_short	sndfile.c	/^sf_writef_short	(SNDFILE *sndfile, const short *ptr, sf_count_t frames)$/;"	f
sfconfig.h	sfconfig.h	1;"	F
sfendian.h	sfendian.h	1;"	F
sfinfo	sndfile.hh	/^			SF_INFO sfinfo ;$/;"	m	struct:SndfileHandle::SNDFILE_ref
sfwchar_t	common.h	/^typedef int16_t sfwchar_t ;$/;"	t
sfwchar_t	common.h	/^typedef wchar_t	sfwchar_t ;$/;"	t
sharedstatedir	G72x/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	GSM610/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
shavedir	G72x/Makefile	/^shavedir = \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23$/;"	m
shavedir	GSM610/Makefile	/^shavedir = \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23$/;"	m
shavedir	Makefile	/^shavedir = \/home\/waker\/prj\/deadbeef-deps\/libsndfile-1.0.23$/;"	m
short_term.c	GSM610/short_term.c	1;"	F
shownillegal	ogg.c	/^	int shownillegal ;$/;"	m	struct:__anon82	file:
sigDenominator	aiff.c	/^	unsigned short	sigDenominator ;$/;"	m	struct:__anon15	file:
sigNumerator	aiff.c	/^	unsigned short	sigNumerator ;$/;"	m	struct:__anon15	file:
sign	avr.c	/^	short	sign ;		\/* 0 = unsigned, 0xffff = signed *\/$/;"	m	struct:__anon22	file:
simple_formats	command.c	/^static SF_FORMAT_INFO const simple_formats [] =$/;"	v	file:
six_chan	chanmap.c	/^static const AIFF_CAF_CHANNEL_MAP six_chan [] =$/;"	v	file:
six_channel_aac_60	chanmap.c	/^static const int six_channel_aac_60 [6] =$/;"	v	file:
six_channel_aac_61	chanmap.c	/^static const int six_channel_aac_61 [7] =$/;"	v	file:
six_channel_audio_unit_60	chanmap.c	/^static const int six_channel_audio_unit_60 [6] =$/;"	v	file:
six_channel_mpeg_51_a	chanmap.c	/^static const int six_channel_mpeg_51_a [6] =$/;"	v	file:
six_channel_mpeg_51_b	chanmap.c	/^static const int six_channel_mpeg_51_b [6] =$/;"	v	file:
six_channel_mpeg_51_c	chanmap.c	/^static const int six_channel_mpeg_51_c [6] =$/;"	v	file:
six_channel_mpeg_51_d	chanmap.c	/^static const int six_channel_mpeg_51_d [6] =$/;"	v	file:
six_channel_mpeg_61a	chanmap.c	/^static const int six_channel_mpeg_61a [7] =$/;"	v	file:
size	aiff.c	/^{	unsigned int	size ;$/;"	m	struct:__anon9	file:
size	mat5.c	/^{	sf_count_t	size ;$/;"	m	struct:__anon7	file:
size20	wav_w64.h	/^	WAV_FMT_SIZE20		size20 ;$/;"	m	union:__anon33
slnt_MARKER	wav.c	48;"	d	file:
smpl_MARKER	wav.c	56;"	d	file:
sndfile.c	sndfile.c	1;"	F
sndfile.h	sndfile.h	1;"	F
sndfile.hh	sndfile.hh	1;"	F
software	xi.c	/^	char	software [20] ;$/;"	m	struct:__anon84	file:
source	paf.c	/^	int	source ;$/;"	m	struct:__anon93	file:
sowt_MARKER	aiff.c	61;"	d	file:
span	dwvw.c	/^{	int		dwm_maxsize, bit_width, max_delta, span ;$/;"	m	struct:__anon19	file:
sr	G72x/g72x_priv.h	/^	short sr[2];	\/*$/;"	m	struct:g72x_state
sr2	txw.c	/^{	unsigned char	format, srate, sr2, sr3 ;$/;"	m	struct:__anon60	file:
sr3	txw.c	/^{	unsigned char	format, srate, sr2, sr3 ;$/;"	m	struct:__anon60	file:
srate	avr.c	/^	int		srate ;		\/* sample frequency in hertz *\/$/;"	m	struct:__anon22	file:
srate	caf.c	/^{	unsigned char srate [8] ;$/;"	m	struct:__anon77	file:
srate	dwd.c	/^	unsigned short srate, maxval ;$/;"	m	struct:__anon103	file:
srate	txw.c	/^{	unsigned char	format, srate, sr2, sr3 ;$/;"	m	struct:__anon60	file:
srcdir	G72x/Makefile	/^srcdir = .$/;"	m
srcdir	GSM610/Makefile	/^srcdir = .$/;"	m
srcdir	Makefile	/^srcdir = .$/;"	m
srhash	txw.c	/^	unsigned short	srhash ;$/;"	m	struct:__anon60	file:
ssnd_offset	aiff.c	/^	sf_count_t	ssnd_offset ;$/;"	m	struct:__anon17	file:
start	sndfile.h	/^		unsigned int start ;$/;"	m	struct:__anon57::__anon58
status	flac.c	/^sf_flac_error_callback (const FLAC__StreamDecoder * UNUSED (decoder), FLAC__StreamDecoderErrorStatus status, void *client_data)$/;"	v	file:
step_changes	ima_oki_adpcm.c	/^static int const step_changes [] = { -1, -1, -1, -1, 2, 4, 6, 8 } ;$/;"	v	file:
step_index	ima_oki_adpcm.h	/^	int step_index ;$/;"	m	struct:__anon37
step_size	G72x/g72x.c	/^int  step_size (G72x_STATE *state_ptr)$/;"	f
stepindx	ima_adpcm.c	/^	int				stepindx [2] ;$/;"	m	struct:IMA_ADPCM_PRIVATE_tag	file:
steps	ima_oki_adpcm.h	/^	int const * steps ;$/;"	m	struct:__anon37
str	common.h	/^	char 	*str ;$/;"	m	struct:__anon65
str	sndfile.c	/^	const char	*str ;$/;"	m	struct:__anon40	file:
strError	sndfile.hh	/^SndfileHandle::strError (void) const$/;"	f	class:SndfileHandle
str_count	sd2.c	/^	int str_index, str_count ;$/;"	m	struct:__anon91	file:
str_end	common.h	/^	char			*str_end ;$/;"	m	struct:sf_private_tag
str_flags	common.h	/^	int				str_flags ;$/;"	m	struct:sf_private_tag
str_index	sd2.c	/^	int str_index, str_count ;$/;"	m	struct:__anon91	file:
str_of_endianness	common.c	/^str_of_endianness (int end)$/;"	f
str_of_major_format	common.c	/^str_of_major_format (int format)$/;"	f
str_of_minor_format	common.c	/^str_of_minor_format (int format)$/;"	f
str_of_open_mode	common.c	/^str_of_open_mode (int mode)$/;"	f
str_storage	common.h	/^	char			str_storage [SF_STR_BUFFER_LEN] ;$/;"	m	struct:sf_private_tag
strc_MARKER	wav.c	63;"	d	file:
stream_length	flac.c	/^sf_flac_length_callback (const FLAC__StreamDecoder * UNUSED (decoder), FLAC__uint64 *stream_length, void *client_data)$/;"	v	file:
stream_processor	ogg.c	/^} stream_processor ;$/;"	t	typeref:struct:__anon82	file:
stream_set	ogg.c	/^} stream_set ;$/;"	t	typeref:struct:__anon83	file:
streams	ogg.c	/^	stream_processor *streams ;$/;"	m	struct:__anon83	file:
streams_open	ogg.c	/^streams_open (stream_set *set)$/;"	f	file:
strg_MARKER	caf.c	60;"	d	file:
string	binheader_writef_check.py	/^import re, string, sys$/;"	i
string_offset	sd2.c	/^	int string_offset ;$/;"	m	struct:__anon91	file:
strings	common.h	/^	STR_DATA		strings [SF_MAX_STRINGS] ;$/;"	m	struct:sf_private_tag
strings.c	strings.c	1;"	F
subdir	G72x/Makefile	/^subdir = src\/G72x$/;"	m
subdir	GSM610/Makefile	/^subdir = src\/GSM610$/;"	m
subdir	Makefile	/^subdir = src$/;"	m
subformat_to_bytewidth	common.c	/^subformat_to_bytewidth (int format)$/;"	f
subtype_formats	command.c	/^static SF_FORMAT_INFO subtype_formats [] =$/;"	v	file:
sustain_loop	aiff.c	/^	INST_LOOP	sustain_loop ;$/;"	m	struct:__anon12	file:
svx.c	svx.c	1;"	F
svx_close	svx.c	/^svx_close (SF_PRIVATE *psf)$/;"	f	file:
svx_open	svx.c	/^svx_open	(SF_PRIVATE *psf)$/;"	f
svx_read_header	svx.c	/^svx_read_header	(SF_PRIVATE *psf)$/;"	f	file:
svx_write_header	svx.c	/^svx_write_header (SF_PRIVATE *psf, int calc_length)$/;"	f	file:
sys	binheader_writef_check.py	/^import re, string, sys$/;"	i
sys	create_symbols_file.py	/^import re, sys$/;"	i
sysconfdir	G72x/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	GSM610/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
syserr	common.h	/^	char			syserr		[SF_SYSERR_LEN] ;$/;"	m	struct:sf_private_tag
table.c	GSM610/table.c	1;"	F
tag	flac.c	/^{	const char *tag ;$/;"	m	struct:__anon89	file:
tag_SDS_PRIVATE	sds.c	/^typedef struct tag_SDS_PRIVATE$/;"	s	file:
target	G72x/Makefile	/^target = i686-pc-linux-gnu$/;"	m
target	GSM610/Makefile	/^target = i686-pc-linux-gnu$/;"	m
target	Makefile	/^target = i686-pc-linux-gnu$/;"	m
target_alias	G72x/Makefile	/^target_alias = $/;"	m
target_alias	GSM610/Makefile	/^target_alias = $/;"	m
target_alias	Makefile	/^target_alias = $/;"	m
target_cpu	G72x/Makefile	/^target_cpu = i686$/;"	m
target_cpu	GSM610/Makefile	/^target_cpu = i686$/;"	m
target_cpu	Makefile	/^target_cpu = i686$/;"	m
target_os	G72x/Makefile	/^target_os = linux-gnu$/;"	m
target_os	GSM610/Makefile	/^target_os = linux-gnu$/;"	m
target_os	Makefile	/^target_os = linux-gnu$/;"	m
target_triplet	G72x/Makefile	/^target_triplet = i686-pc-linux-gnu$/;"	m
target_triplet	GSM610/Makefile	/^target_triplet = i686-pc-linux-gnu$/;"	m
target_triplet	Makefile	/^target_triplet = i686-pc-linux-gnu$/;"	m
target_vendor	G72x/Makefile	/^target_vendor = pc$/;"	m
target_vendor	GSM610/Makefile	/^target_vendor = pc$/;"	m
target_vendor	Makefile	/^target_vendor = pc$/;"	m
td	G72x/g72x_priv.h	/^	char td;	\/* delayed tone detect, new in 1988 version *\/$/;"	m	struct:g72x_state
tell	sndfile.h	/^	sf_vio_tell			tell ;$/;"	m	struct:SF_VIRTUAL_IO
tenbytefloat2int	aiff.c	/^tenbytefloat2int (unsigned char *bytes)$/;"	f	file:
test_audio_detect	test_audio_detect.c	/^test_audio_detect (void)$/;"	f
test_audio_detect.c	test_audio_detect.c	1;"	F
test_broadcast_var	test_broadcast_var.c	/^test_broadcast_var (void)$/;"	f
test_broadcast_var.c	test_broadcast_var.c	1;"	F
test_close_or_die	test_file_io.c	/^test_close_or_die (SF_PRIVATE *psf, int linenum)$/;"	f	file:
test_codes	ima_oki_adpcm.c	/^static const unsigned char test_codes [] =$/;"	v	file:
test_codes	test_ima_oki_adpcm.c	/^static const unsigned char test_codes [] =$/;"	v	file:
test_conversions	test_conversions.c	/^test_conversions (void)$/;"	f
test_conversions.c	test_conversions.c	1;"	F
test_double_convert	test_float.c	/^test_double_convert (void)$/;"	f
test_endswap	test_endswap.c	/^test_endswap (void)$/;"	f
test_endswap.c	test_endswap.c	1;"	F
test_endswap_int	test_endswap.c	/^test_endswap_int (void)$/;"	f	file:
test_endswap_int64_t	test_endswap.c	/^test_endswap_int64_t (void)$/;"	f	file:
test_endswap_short	test_endswap.c	/^test_endswap_short (void)$/;"	f	file:
test_equal_or_die	test_file_io.c	/^test_equal_or_die	(int *array1, int *array2, int len, int linenum)$/;"	f	file:
test_file_io	test_file_io.c	/^test_file_io (void)$/;"	f
test_file_io.c	test_file_io.c	1;"	F
test_float.c	test_float.c	1;"	F
test_float_convert	test_float.c	/^test_float_convert (void)$/;"	f
test_ima_oki_adpcm	test_ima_oki_adpcm.c	/^test_ima_oki_adpcm (void)$/;"	f
test_ima_oki_adpcm.c	test_ima_oki_adpcm.c	1;"	F
test_log_printf	test_log_printf.c	/^test_log_printf (void)$/;"	f
test_log_printf.c	test_log_printf.c	1;"	F
test_main.c	test_main.c	1;"	F
test_main.h	test_main.h	1;"	F
test_main_DEPENDENCIES	Makefile	/^test_main_DEPENDENCIES = libcommon.la$/;"	m
test_main_LDADD	Makefile	/^test_main_LDADD = libcommon.la$/;"	m
test_main_OBJECTS	Makefile	/^test_main_OBJECTS = $(am_test_main_OBJECTS)$/;"	m
test_main_SOURCES	Makefile	/^test_main_SOURCES = test_main.c test_main.h test_conversions.c test_float.c test_endswap.c \\$/;"	m
test_oki_adpcm	ima_oki_adpcm.c	/^test_oki_adpcm (void)$/;"	f	file:
test_oki_adpcm	test_ima_oki_adpcm.c	/^test_oki_adpcm (void)$/;"	f	file:
test_oki_adpcm_block	ima_oki_adpcm.c	/^test_oki_adpcm_block (void)$/;"	f	file:
test_oki_adpcm_block	test_ima_oki_adpcm.c	/^test_oki_adpcm_block (void)$/;"	f	file:
test_open_or_die	test_file_io.c	/^test_open_or_die (SF_PRIVATE *psf, int linenum)$/;"	f	file:
test_pcm	ima_oki_adpcm.c	/^static const short test_pcm [] =$/;"	v	file:
test_pcm	test_ima_oki_adpcm.c	/^static const short test_pcm [] =$/;"	v	file:
test_read_or_die	test_file_io.c	/^test_read_or_die (SF_PRIVATE *psf, void *data, sf_count_t bytes, sf_count_t items, sf_count_t new_position, int linenum)$/;"	f	file:
test_seek_or_die	test_file_io.c	/^test_seek_or_die (SF_PRIVATE *psf, sf_count_t offset, int whence, sf_count_t new_position, int linenum)$/;"	f	file:
test_strncpy_crlf	test_strncpy_crlf.c	/^test_strncpy_crlf (void)$/;"	f
test_strncpy_crlf.c	test_strncpy_crlf.c	1;"	F
test_write_or_die	test_file_io.c	/^test_write_or_die (SF_PRIVATE *psf, void *data, sf_count_t bytes, sf_count_t items, sf_count_t new_position, int linenum)$/;"	f	file:
three_chan	chanmap.c	/^static const AIFF_CAF_CHANNEL_MAP three_chan [] =$/;"	v	file:
three_channel_dvd_4	chanmap.c	/^static const int three_channel_dvd_4 [3] =$/;"	v	file:
three_channel_itu_21	chanmap.c	/^static const int three_channel_itu_21 [3] =$/;"	v	file:
three_channel_mpeg_30a	chanmap.c	/^static const int three_channel_mpeg_30a [3] =$/;"	v	file:
three_channel_mpeg_30b	chanmap.c	/^static const int three_channel_mpeg_30b [3] =$/;"	v	file:
time_sig_den	sndfile.h	/^	short	time_sig_den ;	\/* any positive power of 2 > 0  *\/$/;"	m	struct:__anon59
time_sig_num	sndfile.h	/^	short	time_sig_num ;	\/* any positive integer    > 0  *\/$/;"	m	struct:__anon59
timestamp	common.h	/^	unsigned int	timestamp ;	\/* secs since 1\/1\/1970  *\/$/;"	m	struct:__anon64
top_build_prefix	G72x/Makefile	/^top_build_prefix = ..\/..\/$/;"	m
top_build_prefix	GSM610/Makefile	/^top_build_prefix = ..\/..\/$/;"	m
top_build_prefix	Makefile	/^top_build_prefix = ..\/$/;"	m
top_builddir	G72x/Makefile	/^top_builddir = ..\/..$/;"	m
top_builddir	GSM610/Makefile	/^top_builddir = ..\/..$/;"	m
top_builddir	Makefile	/^top_builddir = ..$/;"	m
top_srcdir	G72x/Makefile	/^top_srcdir = ..\/..$/;"	m
top_srcdir	GSM610/Makefile	/^top_srcdir = ..\/..$/;"	m
top_srcdir	Makefile	/^top_srcdir = ..$/;"	m
total_blocks	sds.c	/^	int	samplesperblock, total_blocks ;$/;"	m	struct:tag_SDS_PRIVATE	file:
total_written	sds.c	/^	int total_written ;$/;"	m	struct:tag_SDS_PRIVATE	file:
transform	G72x/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	GSM610/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	Makefile	/^transform = $(program_transform_name)$/;"	m
tribyte	pcm.c	/^typedef	void	tribyte ;$/;"	t	file:
try_resource_fork	sndfile.c	/^try_resource_fork (SF_PRIVATE * psf)$/;"	f	file:
two_chan	chanmap.c	/^static const AIFF_CAF_CHANNEL_MAP two_chan [] =$/;"	v	file:
two_channel_stereo	chanmap.c	/^static const int two_channel_stereo [2] = {	SF_CHANNEL_MAP_LEFT, SF_CHANNEL_MAP_RIGHT } ;$/;"	v	file:
twos_MARKER	aiff.c	62;"	d	file:
txw.c	txw.c	1;"	F
txw_open	txw.c	/^txw_open	(SF_PRIVATE *psf)$/;"	f
txw_read_d	txw.c	/^txw_read_d (SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:
txw_read_f	txw.c	/^txw_read_f (SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:
txw_read_header	txw.c	/^txw_read_header	(SF_PRIVATE *psf)$/;"	f	file:
txw_read_i	txw.c	/^txw_read_i (SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:
txw_read_s	txw.c	/^txw_read_s (SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:
txw_seek	txw.c	/^txw_seek (SF_PRIVATE *psf, int mode, sf_count_t offset)$/;"	f	file:
type	common.h	/^{	int		type ;$/;"	m	struct:__anon65
type	flac.c	/^	int type ;$/;"	m	struct:__anon89	file:
type	sd2.c	/^{	int type ;$/;"	m	struct:__anon92	file:
type	sndfile.h	/^{	int			type ;$/;"	m	struct:__anon54
type_count	sd2.c	/^	int type_count, type_offset ;$/;"	m	struct:__anon91	file:
type_offset	sd2.c	/^	int type_count, type_offset ;$/;"	m	struct:__anon91	file:
u	GSM610/gsm610_priv.h	/^	word			u[8] ;			\/* short_term_aly_filter.c	*\/$/;"	m	struct:gsm_state
u	common.h	/^		} u ;$/;"	m	struct:sf_private_tag	typeref:union:sf_private_tag::__anon71
u_bitwidth_to_subformat	common.c	/^u_bitwidth_to_subformat (int bits)$/;"	f
uc2d_array	pcm.c	/^uc2d_array	(unsigned char *src, int count, double *dest, double normfact)$/;"	f	file:
uc2f_array	pcm.c	/^uc2f_array	(unsigned char *src, int count, float *dest, float normfact)$/;"	f	file:
uc2i_array	pcm.c	/^uc2i_array	(unsigned char *src, int count, int *dest)$/;"	f	file:
uc2s_array	pcm.c	/^uc2s_array	(unsigned char *src, int count, short *dest)$/;"	f	file:
ucbuf	common.h	/^		unsigned char	ucbuf	[SF_BUFFER_LEN \/ sizeof (signed char)] ;$/;"	m	union:sf_private_tag::__anon71
uint2tenbytefloat	aiff.c	/^uint2tenbytefloat (unsigned int num, unsigned char *bytes)$/;"	f	file:
ulaw.c	ulaw.c	1;"	F
ulaw2d_array	ulaw.c	/^ulaw2d_array (const unsigned char *buffer, int count, double *ptr, double normfact)$/;"	f	file:
ulaw2f_array	ulaw.c	/^ulaw2f_array (unsigned char *buffer, int count, float *ptr, float normfact)$/;"	f	file:
ulaw2i_array	ulaw.c	/^ulaw2i_array (unsigned char *buffer, int count, int *ptr)$/;"	f	file:
ulaw2s_array	ulaw.c	/^ulaw2s_array (unsigned char *buffer, int count, short *ptr)$/;"	f	file:
ulaw_MARKER	aiff.c	74;"	d	file:
ulaw_MARKER	caf.c	63;"	d	file:
ulaw_decode	ulaw.c	/^static short ulaw_decode [256] =$/;"	v	file:
ulaw_encode	ulaw.c	/^unsigned char ulaw_encode [8193] =$/;"	v	file:
ulaw_init	ulaw.c	/^ulaw_init (SF_PRIVATE *psf)$/;"	f
ulaw_read_ulaw2d	ulaw.c	/^ulaw_read_ulaw2d (SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:
ulaw_read_ulaw2f	ulaw.c	/^ulaw_read_ulaw2f (SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:
ulaw_read_ulaw2i	ulaw.c	/^ulaw_read_ulaw2i (SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:
ulaw_read_ulaw2s	ulaw.c	/^ulaw_read_ulaw2s (SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:
ulaw_write_d2ulaw	ulaw.c	/^ulaw_write_d2ulaw	(SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:
ulaw_write_f2ulaw	ulaw.c	/^ulaw_write_f2ulaw	(SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:
ulaw_write_i2ulaw	ulaw.c	/^ulaw_write_i2ulaw	(SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:
ulaw_write_s2ulaw	ulaw.c	/^ulaw_write_s2ulaw	(SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:
ulongword	GSM610/gsm610_priv.h	/^typedef unsigned int		ulongword;	\/* unsigned longword	*\/$/;"	t
umid_MARKER	caf.c	61;"	d	file:
unique_id	common.h	/^	unsigned		unique_id ;$/;"	m	struct:sf_private_tag
unpack_bytes	G72x/g72x.c	/^unpack_bytes (int bits, int blocksize, const unsigned char * block, short * samples)$/;"	f	file:
update	G72x/g72x.c	/^update($/;"	f
use_wchar	common.h	/^	int				use_wchar ;$/;"	m	struct:__anon66
used	ogg.c	/^	int used ;$/;"	m	struct:__anon83	file:
user	avr.c	/^	char	user [64] ; \/* User defined. Typically ASCII message *\/$/;"	m	struct:__anon22	file:
uuid_MARKER	caf.c	62;"	d	file:
uword	GSM610/gsm610_priv.h	/^typedef unsigned short		uword;		\/* unsigned word	*\/$/;"	t
v	GSM610/gsm610_priv.h	/^	word			v[9] ;			\/* short_term.c, synthesis	*\/$/;"	m	struct:gsm_state
validate_psf	sndfile.c	/^validate_psf (SF_PRIVATE *psf)$/;"	f	file:
validate_sfinfo	sndfile.c	/^validate_sfinfo (SF_INFO *sfinfo)$/;"	f	file:
validbits	wav_w64.h	/^	unsigned short	validbits ;$/;"	m	struct:__anon32
value	common.h	/^{	double		value ;		\/* signed value of peak *\/$/;"	m	struct:__anon63
value	sd2.c	/^	char value [32] ;$/;"	m	struct:__anon92	file:
value_len	sd2.c	/^	int value_len ;$/;"	m	struct:__anon92	file:
vb	ogg.c	/^	vorbis_block vb ;$/;"	m	struct:__anon81	file:
vc	ogg.c	/^	vorbis_comment vc ;$/;"	m	struct:__anon81	file:
vc	ogg.c	/^	vorbis_comment vc ;$/;"	m	struct:__anon82	file:
vd	ogg.c	/^	vorbis_dsp_state vd ;$/;"	m	struct:__anon81	file:
velocity_hi	sndfile.h	/^	char velocity_lo, velocity_hi ;$/;"	m	struct:__anon57
velocity_lo	sndfile.h	/^	char velocity_lo, velocity_hi ;$/;"	m	struct:__anon57
verbose	GSM610/gsm610_priv.h	/^	char			verbose;		\/* only used if !NDEBUG		*\/$/;"	m	struct:gsm_state
version	aiff.c	/^{	unsigned int	version ;$/;"	m	struct:__anon15	file:
version	common.h	/^	unsigned int	version ;	\/* version of the PEAK chunk *\/$/;"	m	struct:__anon64
version	create_symbols_file.py	/^version = re.sub ("\\.[a-z0-9]+$", "", sys.argv [2])$/;"	v
version	paf.c	/^{	int	version ;$/;"	m	struct:__anon93	file:
vi	ogg.c	/^	vorbis_info	vi ;$/;"	m	struct:__anon81	file:
vi	ogg.c	/^	vorbis_info vi ;$/;"	m	struct:__anon82	file:
vio	common.h	/^	SF_VIRTUAL_IO		vio ;$/;"	m	struct:sf_private_tag
vio_user_data	common.h	/^	void				*vio_user_data ;$/;"	m	struct:sf_private_tag
virtual_io	common.h	/^	int					virtual_io ;$/;"	m	struct:sf_private_tag
voc.c	voc.c	1;"	F
voc_close	voc.c	/^voc_close	(SF_PRIVATE *psf)$/;"	f	file:
voc_encoding2str	voc.c	/^voc_encoding2str (int encoding)$/;"	f	file:
voc_open	voc.c	/^voc_open	(SF_PRIVATE *psf)$/;"	f
voc_read_header	voc.c	/^voc_read_header	(SF_PRIVATE *psf)$/;"	f	file:
voc_write_header	voc.c	/^voc_write_header (SF_PRIVATE *psf, int calc_length)$/;"	f	file:
volume	svx.c	/^	unsigned int	volume ;$/;"	m	struct:__anon1	file:
vorbis_end	ogg.c	/^vorbis_end (stream_processor *stream, sf_count_t * len)$/;"	f	file:
vorbis_metatypes	ogg.c	/^static STR_PAIRS vorbis_metatypes [] =$/;"	v	file:
vote_for_format	audio_detect.c	/^vote_for_format (VOTE * vote, const unsigned char * data, int datalen)$/;"	f	file:
vox_adpcm.c	vox_adpcm.c	1;"	F
vox_adpcm_init	vox_adpcm.c	/^vox_adpcm_init (SF_PRIVATE *psf)$/;"	f
vox_read_block	vox_adpcm.c	/^vox_read_block (SF_PRIVATE *psf, IMA_OKI_ADPCM *pvox, short *ptr, int len)$/;"	f	file:
vox_read_d	vox_adpcm.c	/^vox_read_d (SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:
vox_read_f	vox_adpcm.c	/^vox_read_f (SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:
vox_read_i	vox_adpcm.c	/^vox_read_i	(SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:
vox_read_s	vox_adpcm.c	/^vox_read_s (SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:
vox_write_block	vox_adpcm.c	/^vox_write_block (SF_PRIVATE *psf, IMA_OKI_ADPCM *pvox, const short *ptr, int len)$/;"	f	file:
vox_write_d	vox_adpcm.c	/^vox_write_d	(SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:
vox_write_f	vox_adpcm.c	/^vox_write_f (SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:
vox_write_i	vox_adpcm.c	/^vox_write_i	(SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:
vox_write_s	vox_adpcm.c	/^vox_write_s (SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:
w64.c	w64.c	1;"	F
w64_close	w64.c	/^w64_close (SF_PRIVATE *psf)$/;"	f	file:
w64_open	w64.c	/^w64_open	(SF_PRIVATE *psf)$/;"	f
w64_read_header	w64.c	/^w64_read_header	(SF_PRIVATE *psf, int *blockalign, int *framesperblock)$/;"	f	file:
w64_write_header	w64.c	/^w64_write_header (SF_PRIVATE *psf, int calc_length)$/;"	f	file:
wav.c	wav.c	1;"	F
wav_close	wav.c	/^wav_close (SF_PRIVATE *psf)$/;"	f	file:
wav_command	wav.c	/^wav_command (SF_PRIVATE *psf, int command, void * UNUSED (data), int datasize)$/;"	f	file:
wav_fmt	GSM610/gsm610_priv.h	/^	char			wav_fmt;		\/* only used if WAV49 defined	*\/$/;"	m	struct:gsm_state
wav_fmt	wav_w64.h	/^	WAV_FMT wav_fmt ;$/;"	m	struct:__anon35
wav_open	wav.c	/^wav_open	 (SF_PRIVATE *psf)$/;"	f
wav_read_acid_chunk	wav.c	/^wav_read_acid_chunk (SF_PRIVATE *psf, unsigned int chunklen)$/;"	f	file:
wav_read_bext_chunk	wav.c	/^wav_read_bext_chunk (SF_PRIVATE *psf, unsigned int chunksize)$/;"	f
wav_read_header	wav.c	/^wav_read_header	 (SF_PRIVATE *psf, int *blockalign, int *framesperblock)$/;"	f	file:
wav_read_smpl_chunk	wav.c	/^wav_read_smpl_chunk (SF_PRIVATE *psf, unsigned int chunklen)$/;"	f	file:
wav_subchunk_parse	wav.c	/^wav_subchunk_parse (SF_PRIVATE *psf, int chunk)$/;"	f	file:
wav_w64.c	wav_w64.c	1;"	F
wav_w64.h	wav_w64.h	1;"	F
wav_w64_analyze	wav_w64.c	/^wav_w64_analyze (SF_PRIVATE *psf)$/;"	f
wav_w64_format_str	wav_w64.c	/^wav_w64_format_str (int k)$/;"	f
wav_w64_ima_decode_block	ima_adpcm.c	/^wav_w64_ima_decode_block (SF_PRIVATE *psf, IMA_ADPCM_PRIVATE *pima)$/;"	f	file:
wav_w64_ima_encode_block	ima_adpcm.c	/^wav_w64_ima_encode_block (SF_PRIVATE *psf, IMA_ADPCM_PRIVATE *pima)$/;"	f	file:
wav_w64_ima_init	ima_adpcm.c	/^wav_w64_ima_init (SF_PRIVATE *psf, int blockalign, int samplesperblock)$/;"	f
wav_w64_msadpcm_init	ms_adpcm.c	/^wav_w64_msadpcm_init	(SF_PRIVATE *psf, int blockalign, int samplesperblock)$/;"	f
wav_w64_read_fmt_chunk	wav_w64.c	/^wav_w64_read_fmt_chunk (SF_PRIVATE *psf, int fmtsize)$/;"	f
wav_w64_srate2blocksize	wav_w64.c	/^wav_w64_srate2blocksize (int srate_chan_product)$/;"	f
wav_write_bext_chunk	wav.c	/^wav_write_bext_chunk (SF_PRIVATE *psf)$/;"	f
wav_write_fmt_chunk	wav.c	/^wav_write_fmt_chunk (SF_PRIVATE *psf)$/;"	f	file:
wav_write_header	wav.c	/^wav_write_header (SF_PRIVATE *psf, int calc_length)$/;"	f	file:
wav_write_strings	wav.c	/^wav_write_strings (SF_PRIVATE *psf, int location)$/;"	f	file:
wav_write_tailer	wav.c	/^wav_write_tailer (SF_PRIVATE *psf)$/;"	f	file:
wave_HASH16	w64.c	53;"	d	file:
wave_descs	wav_w64.c	/^static WAV_FORMAT_DESC wave_descs [] =$/;"	v	file:
wavex_ambisonic	wav_w64.h	/^	int	wavex_ambisonic ;$/;"	m	struct:__anon35
wavex_channelmask	wav_w64.h	/^	unsigned wavex_channelmask ;$/;"	m	struct:__anon35
wavex_gen_channel_mask	wav_w64.c	/^wavex_gen_channel_mask (const int *chan_map, int channels)$/;"	f
wavex_guid_equal	wav_w64.c	/^wavex_guid_equal (const EXT_SUBFORMAT * first, const EXT_SUBFORMAT * second)$/;"	f	file:
wavex_write_fmt_chunk	rf64.c	/^wavex_write_fmt_chunk (SF_PRIVATE *psf)$/;"	f	file:
wavex_write_fmt_chunk	wav.c	/^wavex_write_fmt_chunk (SF_PRIVATE *psf)$/;"	f	file:
wavex_write_guid	wav_w64.c	/^wavex_write_guid (SF_PRIVATE *psf, const EXT_SUBFORMAT * subformat)$/;"	f
wavl_MARKER	wav.c	49;"	d	file:
wbuffer	flac.c	/^	const FLAC__int32 * const * wbuffer ;$/;"	m	struct:__anon88	file:
wc	common.h	/^		sfwchar_t	wc [SF_FILENAME_LEN \/ 4] ;$/;"	m	union:__anon66::__anon69
wc	common.h	/^		sfwchar_t	wc [SF_FILENAME_LEN] ;$/;"	m	union:__anon66::__anon67
wc	common.h	/^		sfwchar_t	wc [SF_FILENAME_LEN] ;$/;"	m	union:__anon66::__anon68
win32_symbols	create_symbols_file.py	/^def win32_symbols (progname, version, name):$/;"	f
windows.c	windows.c	1;"	F
word	GSM610/gsm610_priv.h	/^typedef short				word;		\/* 16 bit signed int	*\/$/;"	t
write	sndfile.h	/^	sf_vio_write		write ;$/;"	m	struct:SF_VIRTUAL_IO
write	sndfile.hh	/^SndfileHandle::write (const double *ptr, sf_count_t items)$/;"	f	class:SndfileHandle
write	sndfile.hh	/^SndfileHandle::write (const float *ptr, sf_count_t items)$/;"	f	class:SndfileHandle
write	sndfile.hh	/^SndfileHandle::write (const int *ptr, sf_count_t items)$/;"	f	class:SndfileHandle
write	sndfile.hh	/^SndfileHandle::write (const short *ptr, sf_count_t items)$/;"	f	class:SndfileHandle
writeRaw	sndfile.hh	/^SndfileHandle::writeRaw (const void *ptr, sf_count_t bytes)$/;"	f	class:SndfileHandle
writeSync	sndfile.hh	/^SndfileHandle::writeSync (void)$/;"	f	class:SndfileHandle
write_block	paf.c	/^	int				read_block, write_block, read_count, write_count ;$/;"	m	struct:__anon94	file:
write_block	sds.c	/^	int write_block, write_count ;$/;"	m	struct:tag_SDS_PRIVATE	file:
write_char	sd2.c	/^write_char (unsigned char * data, int offset, char value)$/;"	f	file:
write_count	paf.c	/^	int				read_block, write_block, read_count, write_count ;$/;"	m	struct:__anon94	file:
write_count	sds.c	/^	int write_block, write_count ;$/;"	m	struct:tag_SDS_PRIVATE	file:
write_current	common.h	/^	sf_count_t		write_current ;$/;"	m	struct:sf_private_tag
write_data	sds.c	/^	unsigned char write_data [SDS_BLOCK_SIZE] ;$/;"	m	struct:tag_SDS_PRIVATE	file:
write_dither	common.h	/^	SF_DITHER_INFO	write_dither ;$/;"	m	struct:sf_private_tag
write_double	common.h	/^	sf_count_t		(*write_double)	(struct sf_private_tag*, const double *ptr, sf_count_t len) ;$/;"	m	struct:sf_private_tag
write_double	dither.c	/^	sf_count_t	(*write_double)	(SF_PRIVATE *psf, const double *ptr, sf_count_t len) ;$/;"	m	struct:__anon18	file:
write_double_dither_bits	dither.c	/^	double		write_float_dither_scale, write_double_dither_bits ;$/;"	m	struct:__anon18	file:
write_float	common.h	/^	sf_count_t		(*write_float)	(struct sf_private_tag*, const float *ptr, sf_count_t len) ;$/;"	m	struct:sf_private_tag
write_float	dither.c	/^	sf_count_t	(*write_float)	(SF_PRIVATE *psf, const float *ptr, sf_count_t len) ;$/;"	m	struct:__anon18	file:
write_float_dither_scale	dither.c	/^	double		write_float_dither_scale, write_double_dither_bits ;$/;"	m	struct:__anon18	file:
write_header	common.h	/^	int				(*write_header)	(struct sf_private_tag*, int calc_length) ;$/;"	m	struct:sf_private_tag
write_int	common.h	/^	sf_count_t		(*write_int)	(struct sf_private_tag*, const int *ptr, sf_count_t len) ;$/;"	m	struct:sf_private_tag
write_int	dither.c	/^	sf_count_t	(*write_int)	(SF_PRIVATE *psf, const int *ptr, sf_count_t len) ;$/;"	m	struct:__anon18	file:
write_int	sd2.c	/^write_int (unsigned char * data, int offset, int value)$/;"	f	file:
write_int_dither_bits	dither.c	/^	int			write_short_dither_bits, write_int_dither_bits ;$/;"	m	struct:__anon18	file:
write_marker	sd2.c	/^write_marker (unsigned char * data, int offset, int value)$/;"	f	file:
write_samples	sds.c	/^	int	write_samples [SDS_BLOCK_SIZE \/ 2] ; \/* Maximum samples per block *\/$/;"	m	struct:tag_SDS_PRIVATE	file:
write_short	common.h	/^	sf_count_t		(*write_short)	(struct sf_private_tag*, const short *ptr, sf_count_t len) ;$/;"	m	struct:sf_private_tag
write_short	dither.c	/^	sf_count_t	(*write_short)	(SF_PRIVATE *psf, const short *ptr, sf_count_t len) ;$/;"	m	struct:__anon18	file:
write_short	sd2.c	/^write_short (unsigned char * data, int offset, short value)$/;"	f	file:
write_short_dither_bits	dither.c	/^	int			write_short_dither_bits, write_int_dither_bits ;$/;"	m	struct:__anon18	file:
write_str	sd2.c	/^write_str (unsigned char * data, int offset, const char * buffer, int buffer_len)$/;"	f	file:
writef	sndfile.hh	/^SndfileHandle::writef (const double *ptr, sf_count_t frame_count)$/;"	f	class:SndfileHandle
writef	sndfile.hh	/^SndfileHandle::writef (const float *ptr, sf_count_t frame_count)$/;"	f	class:SndfileHandle
writef	sndfile.hh	/^SndfileHandle::writef (const int *ptr, sf_count_t frame_count)$/;"	f	class:SndfileHandle
writef	sndfile.hh	/^SndfileHandle::writef (const short *ptr, sf_count_t frame_count)$/;"	f	class:SndfileHandle
writer	sds.c	/^	int (*writer) (SF_PRIVATE *psf, struct tag_SDS_PRIVATE *psds) ;$/;"	m	struct:tag_SDS_PRIVATE	file:
wve.c	wve.c	1;"	F
wve_close	wve.c	/^wve_close (SF_PRIVATE *psf)$/;"	f	file:
wve_open	wve.c	/^wve_open (SF_PRIVATE *psf)$/;"	f
wve_read_header	wve.c	/^wve_read_header (SF_PRIVATE *psf)$/;"	f	file:
wve_write_header	wve.c	/^wve_write_header (SF_PRIVATE *psf, int calc_length)$/;"	f	file:
wvpk_MARKER	rf64.c	53;"	d	file:
wvpk_MARKER	wav.c	95;"	d	file:
xi.c	xi.c	1;"	F
xi_open	xi.c	/^xi_open	(SF_PRIVATE *psf)$/;"	f
xi_read_header	xi.c	/^xi_read_header (SF_PRIVATE *psf)$/;"	f	file:
xi_write_header	xi.c	/^xi_write_header (SF_PRIVATE *psf, int UNUSED (calc_length))$/;"	f	file:
yl	G72x/g72x_priv.h	/^{	long  yl;	\/* Locked or steady state step size multiplier. *\/$/;"	m	struct:g72x_state
yu	G72x/g72x_priv.h	/^	short yu;	\/* Unlocked or non-steady state step size multiplier. *\/$/;"	m	struct:g72x_state
z1	GSM610/gsm610_priv.h	/^	word			z1;			\/* preprocessing.c, Offset_com. *\/$/;"	m	struct:gsm_state
zero_bytes	aiff.c	/^	char			zero_bytes [2] ;$/;"	m	struct:__anon9	file:
zero_chan	chanmap.c	/^static const AIFF_CAF_CHANNEL_MAP zero_chan [] =$/;"	v	file:
~SNDFILE_ref	sndfile.hh	/^SndfileHandle::SNDFILE_ref::~SNDFILE_ref (void)$/;"	f	class:SndfileHandle::SNDFILE_ref
~SndfileHandle	sndfile.hh	/^SndfileHandle::~SndfileHandle (void)$/;"	f	class:SndfileHandle
